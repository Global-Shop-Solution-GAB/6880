Program.Sub.ScreenSU.Start
Gui.f_Main..Create(BaseForm)
Gui.f_Main..Caption("Shipment Truck Load Builder (6880)")
Gui.f_Main..Size(1867,864)
Gui.f_Main..MinX(0)
Gui.f_Main..MinY(0)
Gui.f_Main..Position(0,0)
Gui.f_Main..AlwaysOnTop(False)
Gui.f_Main..FontName("Tahoma")
Gui.f_Main..FontSize(8.25)
Gui.f_Main..ControlBox(True)
Gui.f_Main..MaxButton(True)
Gui.f_Main..MinButton(True)
Gui.f_Main..MousePointer(0)
Gui.f_Main..Moveable(True)
Gui.f_Main..Sizeable(True)
Gui.f_Main..ShowInTaskBar(True)
Gui.f_Main..TitleBar(True)
Gui.f_Main..Event(UnLoad,f_Main_UnLoad)
Gui.f_Main.tab1.Create(Tab)
Gui.f_Main.tab1.Enabled(True)
Gui.f_Main.tab1.Visible(True)
Gui.f_Main.tab1.Zorder(0)
Gui.f_Main.tab1.Size(1867,834)
Gui.f_Main.tab1.Position(0,0)
Gui.f_Main.tab1.FontName("Tahoma")
Gui.f_Main.tab1.FontSize(8.25)
Gui.f_Main.tab1.Dock(5)
Gui.f_Main.tab1.Tabs(3)
Gui.f_Main.tab1.SetTab(0)
Gui.f_Main.tab1.Caption("New Truck Loads")
Gui.f_Main.tab1.SetTab(1)
Gui.f_Main.tab1.Caption("Truck Loads in Process")
Gui.f_Main.tab1.SetTab(2)
Gui.f_Main.tab1.Caption("Existing Truck Loads")
Gui.f_Main.frameExistLoad.Create(Frame)
Gui.f_Main.frameExistLoad.Enabled(True)
Gui.f_Main.frameExistLoad.Visible(True)
Gui.f_Main.frameExistLoad.Zorder(0)
Gui.f_Main.frameExistLoad.Size(1865,805)
Gui.f_Main.frameExistLoad.Position(0,0)
Gui.f_Main.frameExistLoad.Caption("Existing Loads")
Gui.f_Main.frameExistLoad.FontName("Tahoma")
Gui.f_Main.frameExistLoad.FontSize(8.25)
Gui.f_Main.frameExistLoad.Parent("tab1",2)
Gui.f_Main.frameExistLoad.Dock(5)
Gui.f_Main.frameExistLoad.BorderStyle(1)
Gui.f_Main.GsGcExistLoad.Create(GsGridControl)
Gui.f_Main.GsGcExistLoad.Enabled(True)
Gui.f_Main.GsGcExistLoad.Visible(True)
Gui.f_Main.GsGcExistLoad.Zorder(0)
Gui.f_Main.GsGcExistLoad.Size(1865,779)
Gui.f_Main.GsGcExistLoad.Position(0,26)
Gui.f_Main.GsGcExistLoad.Parent("frameExistLoad")
Gui.f_Main.GsGcExistLoad.Dock(5)
Gui.f_Main.GsGcExistLoad.Event(RowClick,GsGcExistLoad_RowClick)
Gui.f_Main.GsGcExistLoad.Event(CellValueChanged,GsGcExistLoad_CellValueChanged)
Gui.f_Main.GsGcExistLoad.Event(RowCellClick,GsGcExistLoad_RowCellClick)
Gui.f_Main.SplitContainer1.Create(SplitContainer)
Gui.f_Main.SplitContainer1.Enabled(True)
Gui.f_Main.SplitContainer1.Visible(True)
Gui.f_Main.SplitContainer1.Zorder(0)
Gui.f_Main.SplitContainer1.Size(1865,807)
Gui.f_Main.SplitContainer1.Position(0,0)
Gui.f_Main.SplitContainer1.Orientation(1)
Gui.f_Main.SplitContainer1.SplitterPosition(358)
Gui.f_Main.SplitContainer1.Collapsed(False)
Gui.f_Main.SplitContainer1.Parent("tab1",0)
Gui.f_Main.SplitContainer1.Dock(5)
Gui.f_Main.frameTruckBuild.Create(Frame)
Gui.f_Main.frameTruckBuild.Enabled(True)
Gui.f_Main.frameTruckBuild.Visible(True)
Gui.f_Main.frameTruckBuild.Zorder(0)
Gui.f_Main.frameTruckBuild.Size(1865,435)
Gui.f_Main.frameTruckBuild.Position(0,0)
Gui.f_Main.frameTruckBuild.Caption("Currently Selected Load")
Gui.f_Main.frameTruckBuild.FontName("Tahoma")
Gui.f_Main.frameTruckBuild.FontSize(8.25)
Gui.f_Main.frameTruckBuild.Dock(5)
Gui.f_Main.frameTruckBuild.Parent("SplitContainer1",1)
Gui.f_Main.frameTruckBuild.BorderStyle(1)
Gui.f_Main.txtLoadNo.Create(TextBox,"",True,109,20,0,490,40,True,0,"Tahoma",8.25,,1)
Gui.f_Main.txtLoadNo.Parent("frameTruckBuild")
Gui.f_Main.txtLoadNo.Mask("0000")
Gui.f_Main.txtLoadNo.TabStop(True)
Gui.f_Main.txtLoadNo.TabIndex(5)
Gui.f_Main.txtLoadNo.Locked(True)
Gui.f_Main.cmdDriverBrws.Create(Button)
Gui.f_Main.cmdDriverBrws.Enabled(True)
Gui.f_Main.cmdDriverBrws.Visible(True)
Gui.f_Main.cmdDriverBrws.Zorder(0)
Gui.f_Main.cmdDriverBrws.Size(24,23)
Gui.f_Main.cmdDriverBrws.Position(399,38)
Gui.f_Main.cmdDriverBrws.Caption("^")
Gui.f_Main.cmdDriverBrws.FontName("Tahoma")
Gui.f_Main.cmdDriverBrws.FontSize(8.25)
Gui.f_Main.cmdDriverBrws.Parent("frameTruckBuild")
Gui.f_Main.cmdDriverBrws.Event(Click,cmdDriverBrws_Click)
Gui.f_Main.cmdDriverBrws.TabStop(True)
Gui.f_Main.cmdDriverBrws.TabIndex(4)
Gui.f_Main.lblLoadNo.Create(Label,"Load No:",True,43,13,0,444,44,True,0,"Tahoma",8.25,,0,0)
Gui.f_Main.lblLoadNo.BorderStyle(0)
Gui.f_Main.lblLoadNo.Parent("frameTruckBuild")
Gui.f_Main.cmdDelete.Create(Button)
Gui.f_Main.cmdDelete.Enabled(True)
Gui.f_Main.cmdDelete.Visible(True)
Gui.f_Main.cmdDelete.Zorder(0)
Gui.f_Main.cmdDelete.Size(141,23)
Gui.f_Main.cmdDelete.Position(1396,74)
Gui.f_Main.cmdDelete.Caption("Delete Truck Load")
Gui.f_Main.cmdDelete.FontName("Tahoma")
Gui.f_Main.cmdDelete.FontSize(8.25)
Gui.f_Main.cmdDelete.Parent("frameTruckBuild")
Gui.f_Main.cmdDelete.Anchor(9)
Gui.f_Main.cmdDelete.Event(Click,cmdDelete_Click)
Gui.f_Main.cmdDelete.TabStop(True)
Gui.f_Main.cmdDelete.TabIndex(14)
Gui.f_Main.dtpShipDate.Create(DatePicker)
Gui.f_Main.dtpShipDate.Enabled(True)
Gui.f_Main.dtpShipDate.Visible(True)
Gui.f_Main.dtpShipDate.Zorder(0)
Gui.f_Main.dtpShipDate.Size(87,20)
Gui.f_Main.dtpShipDate.Position(785,75)
Gui.f_Main.dtpShipDate.CheckBox(False)
Gui.f_Main.dtpShipDate.FontName("Tahoma")
Gui.f_Main.dtpShipDate.FontSize(8.25)
Gui.f_Main.dtpShipDate.Parent("frameTruckBuild")
Gui.f_Main.dtpShipDate.TabStop(True)
Gui.f_Main.dtpShipDate.TabIndex(10)
Gui.f_Main.lblShipDate.Create(Label,"Ship Date:",True,50,13,0,733,78,True,0,"Tahoma",8.25,,0,0)
Gui.f_Main.lblShipDate.BorderStyle(0)
Gui.f_Main.lblShipDate.Parent("frameTruckBuild")
Gui.f_Main.cmdTrckBrw.Create(Button)
Gui.f_Main.cmdTrckBrw.Enabled(True)
Gui.f_Main.cmdTrckBrw.Visible(True)
Gui.f_Main.cmdTrckBrw.Zorder(0)
Gui.f_Main.cmdTrckBrw.Size(24,23)
Gui.f_Main.cmdTrckBrw.Position(171,38)
Gui.f_Main.cmdTrckBrw.Caption("^")
Gui.f_Main.cmdTrckBrw.FontName("Tahoma")
Gui.f_Main.cmdTrckBrw.FontSize(8.25)
Gui.f_Main.cmdTrckBrw.Parent("frameTruckBuild")
Gui.f_Main.cmdTrckBrw.Event(Click,cmdTrckBrw_Click)
Gui.f_Main.cmdTrckBrw.TabStop(True)
Gui.f_Main.cmdTrckBrw.TabIndex(2)
Gui.f_Main.txtTruckNo.Create(TextBox,"",True,109,20,0,58,40,True,0,"Tahoma",8.25,,1)
Gui.f_Main.txtTruckNo.Parent("frameTruckBuild")
Gui.f_Main.txtTruckNo.TabStop(True)
Gui.f_Main.txtTruckNo.TabIndex(1)
Gui.f_Main.lblRemWt.Create(Label,"Remaining Weight:",True,90,13,0,528,78,True,0,"Tahoma",8.25,,0,0)
Gui.f_Main.lblRemWt.BorderStyle(0)
Gui.f_Main.lblRemWt.Parent("frameTruckBuild")
Gui.f_Main.txtRemWt.Create(TextBox,"",True,87,20,0,620,75,False,0,"Tahoma",8.25,,1)
Gui.f_Main.txtRemWt.Parent("frameTruckBuild")
Gui.f_Main.txtRemWt.TabStop(True)
Gui.f_Main.txtRemWt.TabIndex(9)
Gui.f_Main.txtRemWt.Locked(True)
Gui.f_Main.cmdEmail.Create(Button)
Gui.f_Main.cmdEmail.Enabled(True)
Gui.f_Main.cmdEmail.Visible(True)
Gui.f_Main.cmdEmail.Zorder(0)
Gui.f_Main.cmdEmail.Size(141,23)
Gui.f_Main.cmdEmail.Position(1553,74)
Gui.f_Main.cmdEmail.Caption("Email Shuttle Truck")
Gui.f_Main.cmdEmail.FontName("Tahoma")
Gui.f_Main.cmdEmail.FontSize(8.25)
Gui.f_Main.cmdEmail.Parent("frameTruckBuild")
Gui.f_Main.cmdEmail.Event(Click,cmdEmail_Click)
Gui.f_Main.cmdEmail.Anchor(9)
Gui.f_Main.cmdConvert.Create(Button)
Gui.f_Main.cmdConvert.Enabled(True)
Gui.f_Main.cmdConvert.Visible(True)
Gui.f_Main.cmdConvert.Zorder(0)
Gui.f_Main.cmdConvert.Size(141,23)
Gui.f_Main.cmdConvert.Position(1713,38)
Gui.f_Main.cmdConvert.Caption("Convert Staged Shipment")
Gui.f_Main.cmdConvert.FontName("Tahoma")
Gui.f_Main.cmdConvert.FontSize(8.25)
Gui.f_Main.cmdConvert.Parent("frameTruckBuild")
Gui.f_Main.cmdConvert.Anchor(9)
Gui.f_Main.cmdConvert.Event(Click,cmdConvert_Click)
Gui.f_Main.cmdConvert.TabStop(True)
Gui.f_Main.cmdConvert.TabIndex(13)
Gui.f_Main.cmdSave.Create(Button)
Gui.f_Main.cmdSave.Enabled(True)
Gui.f_Main.cmdSave.Visible(True)
Gui.f_Main.cmdSave.Zorder(0)
Gui.f_Main.cmdSave.Size(141,23)
Gui.f_Main.cmdSave.Position(1553,38)
Gui.f_Main.cmdSave.Caption("Save Current Truck Load")
Gui.f_Main.cmdSave.FontName("Tahoma")
Gui.f_Main.cmdSave.FontSize(8.25)
Gui.f_Main.cmdSave.Parent("frameTruckBuild")
Gui.f_Main.cmdSave.Anchor(9)
Gui.f_Main.cmdSave.Event(Click,cmdSave_Click)
Gui.f_Main.cmdSave.TabStop(True)
Gui.f_Main.cmdSave.TabIndex(12)
Gui.f_Main.txtDriver.Create(TextBox,"",True,149,20,0,248,40,True,0,"Tahoma",8.25,,1)
Gui.f_Main.txtDriver.Parent("frameTruckBuild")
Gui.f_Main.txtDriver.TabStop(True)
Gui.f_Main.txtDriver.TabIndex(3)
Gui.f_Main.txtLength.Create(TextBox,"",True,87,20,0,248,75,False,0,"Tahoma",8.25,,1)
Gui.f_Main.txtLength.Parent("frameTruckBuild")
Gui.f_Main.txtLength.TabStop(True)
Gui.f_Main.txtLength.TabIndex(7)
Gui.f_Main.txtLength.Locked(True)
Gui.f_Main.lblLoader.Create(Label,"Loader:",True,37,13,0,628,44,True,0,"Tahoma",8.25,,0,0)
Gui.f_Main.lblLoader.BorderStyle(0)
Gui.f_Main.lblLoader.Parent("frameTruckBuild")
Gui.f_Main.lblLength.Create(Label,"Truck Length:",True,66,13,0,179,78,True,0,"Tahoma",8.25,,0,0)
Gui.f_Main.lblLength.BorderStyle(0)
Gui.f_Main.lblLength.Parent("frameTruckBuild")
Gui.f_Main.cmdNew.Create(Button)
Gui.f_Main.cmdNew.Enabled(True)
Gui.f_Main.cmdNew.Visible(True)
Gui.f_Main.cmdNew.Zorder(0)
Gui.f_Main.cmdNew.Size(141,23)
Gui.f_Main.cmdNew.Position(1396,38)
Gui.f_Main.cmdNew.Caption("New Truck Load")
Gui.f_Main.cmdNew.FontName("Tahoma")
Gui.f_Main.cmdNew.FontSize(8.25)
Gui.f_Main.cmdNew.Parent("frameTruckBuild")
Gui.f_Main.cmdNew.Anchor(9)
Gui.f_Main.cmdNew.Event(Click,cmdNew_Click)
Gui.f_Main.cmdNew.TabStop(True)
Gui.f_Main.cmdNew.TabIndex(11)
Gui.f_Main.lblDriver.Create(Label,"Driver:",True,33,13,0,212,44,True,0,"Tahoma",8.25,,0,0)
Gui.f_Main.lblDriver.BorderStyle(0)
Gui.f_Main.lblDriver.Parent("frameTruckBuild")
Gui.f_Main.txtWidth.Create(TextBox,"",True,87,20,0,424,75,False,0,"Tahoma",8.25,,1)
Gui.f_Main.txtWidth.Parent("frameTruckBuild")
Gui.f_Main.txtWidth.TabStop(True)
Gui.f_Main.txtWidth.TabIndex(8)
Gui.f_Main.txtWidth.Locked(True)
Gui.f_Main.lblWidth.Create(Label,"Truck Width:",True,61,13,0,361,78,True,0,"Tahoma",8.25,,0,0)
Gui.f_Main.lblWidth.BorderStyle(0)
Gui.f_Main.lblWidth.Parent("frameTruckBuild")
Gui.f_Main.lblTruckNo.Create(Label,"Truck No:",True,46,13,0,9,44,True,0,"Tahoma",8.25,,0,0)
Gui.f_Main.lblTruckNo.BorderStyle(0)
Gui.f_Main.lblTruckNo.Parent("frameTruckBuild")
Gui.f_Main.cmdLoadBrws.Create(Button)
Gui.f_Main.cmdLoadBrws.Enabled(True)
Gui.f_Main.cmdLoadBrws.Visible(True)
Gui.f_Main.cmdLoadBrws.Zorder(0)
Gui.f_Main.cmdLoadBrws.Size(24,23)
Gui.f_Main.cmdLoadBrws.Position(819,38)
Gui.f_Main.cmdLoadBrws.Caption("^")
Gui.f_Main.cmdLoadBrws.FontName("Tahoma")
Gui.f_Main.cmdLoadBrws.FontSize(8.25)
Gui.f_Main.cmdLoadBrws.Parent("frameTruckBuild")
Gui.f_Main.cmdLoadBrws.Event(Click,cmdLoadBrws_Click)
Gui.f_Main.GsGcTruckBuild.Create(GsGridControl)
Gui.f_Main.GsGcTruckBuild.Enabled(True)
Gui.f_Main.GsGcTruckBuild.Visible(True)
Gui.f_Main.GsGcTruckBuild.Zorder(0)
Gui.f_Main.GsGcTruckBuild.Size(1865,320)
Gui.f_Main.GsGcTruckBuild.Position(0,115)
Gui.f_Main.GsGcTruckBuild.Parent("frameTruckBuild")
Gui.f_Main.GsGcTruckBuild.Dock(2)
Gui.f_Main.GsGcTruckBuild.Anchor(15)
Gui.f_Main.GsGcTruckBuild.Event(RowCellClick,GsGcTruckBuild_RowCellClick)
Gui.f_Main.GsGcTruckBuild.Event(CellValueChanged,GsGcTruckBuild_CellValueChanged)
Gui.f_Main.cmdPrint.Create(Button)
Gui.f_Main.cmdPrint.Enabled(True)
Gui.f_Main.cmdPrint.Visible(True)
Gui.f_Main.cmdPrint.Zorder(0)
Gui.f_Main.cmdPrint.Size(141,23)
Gui.f_Main.cmdPrint.Position(1713,74)
Gui.f_Main.cmdPrint.Caption("Print")
Gui.f_Main.cmdPrint.FontName("Tahoma")
Gui.f_Main.cmdPrint.FontSize(8.25)
Gui.f_Main.cmdPrint.Parent("frameTruckBuild")
Gui.f_Main.cmdPrint.Event(Click,cmdPrint_Click)
Gui.f_Main.cmdPrint.Anchor(9)
Gui.f_Main.chkShuttle.Create(CheckBox)
Gui.f_Main.chkShuttle.Enabled(True)
Gui.f_Main.chkShuttle.Visible(True)
Gui.f_Main.chkShuttle.Zorder(0)
Gui.f_Main.chkShuttle.Size(97,20)
Gui.f_Main.chkShuttle.Position(56,75)
Gui.f_Main.chkShuttle.Caption("Shuttle Truck?")
Gui.f_Main.chkShuttle.FontName("Tahoma")
Gui.f_Main.chkShuttle.FontSize(8.25)
Gui.f_Main.chkShuttle.Parent("frameTruckBuild")
Gui.f_Main.txtLoader.Create(TextBox,"",True,149,20,0,667,40,True,0,"Tahoma",8.25,,1)
Gui.f_Main.txtLoader.Parent("frameTruckBuild")
Gui.f_Main.txtLoader.TabStop(True)
Gui.f_Main.txtLoader.TabIndex(6)
Gui.f_Main.frameNoLoad.Create(Frame)
Gui.f_Main.frameNoLoad.Enabled(True)
Gui.f_Main.frameNoLoad.Visible(True)
Gui.f_Main.frameNoLoad.Zorder(0)
Gui.f_Main.frameNoLoad.Size(1865,358)
Gui.f_Main.frameNoLoad.Position(0,0)
Gui.f_Main.frameNoLoad.Caption("Open Staged Shipments without Load")
Gui.f_Main.frameNoLoad.FontName("Tahoma")
Gui.f_Main.frameNoLoad.FontSize(8.25)
Gui.f_Main.frameNoLoad.Parent("SplitContainer1",0)
Gui.f_Main.frameNoLoad.Dock(5)
Gui.f_Main.frameNoLoad.BorderStyle(1)
Gui.f_Main.GsGcNoLoad.Create(GsGridControl)
Gui.f_Main.GsGcNoLoad.Enabled(True)
Gui.f_Main.GsGcNoLoad.Visible(True)
Gui.f_Main.GsGcNoLoad.Zorder(0)
Gui.f_Main.GsGcNoLoad.Size(1865,332)
Gui.f_Main.GsGcNoLoad.Position(0,26)
Gui.f_Main.GsGcNoLoad.Parent("frameNoLoad")
Gui.f_Main.GsGcNoLoad.Dock(5)
Gui.f_Main.GsGcNoLoad.Event(RowCellClick,GsGcNoLoad_RowCellClick)
Gui.f_Main.frameInProcess.Create(Frame)
Gui.f_Main.frameInProcess.Enabled(True)
Gui.f_Main.frameInProcess.Visible(True)
Gui.f_Main.frameInProcess.Zorder(0)
Gui.f_Main.frameInProcess.Size(1865,805)
Gui.f_Main.frameInProcess.Position(0,0)
Gui.f_Main.frameInProcess.Caption("Truck Loads Currently in Process")
Gui.f_Main.frameInProcess.FontName("Tahoma")
Gui.f_Main.frameInProcess.FontSize(8.25)
Gui.f_Main.frameInProcess.Parent("tab1",1)
Gui.f_Main.frameInProcess.BorderStyle(2)
Gui.f_Main.frameInProcess.Dock(5)
Gui.f_Main.GsGcInProcess.Create(GsGridControl)
Gui.f_Main.GsGcInProcess.Enabled(True)
Gui.f_Main.GsGcInProcess.Visible(True)
Gui.f_Main.GsGcInProcess.Zorder(0)
Gui.f_Main.GsGcInProcess.Size(1865,779)
Gui.f_Main.GsGcInProcess.Position(0,26)
Gui.f_Main.GsGcInProcess.Parent("frameInProcess")
Gui.f_Main.GsGcInProcess.Dock(5)
Gui.f_Main.GsGcInProcess.Event(RowClick,GsGcInProcess_RowClick)
Gui.F_TruckDtl..Create(BaseForm)
Gui.F_TruckDtl..Caption("Truck Load Detail (6880)")
Gui.F_TruckDtl..Size(1398,765)
Gui.F_TruckDtl..MinX(0)
Gui.F_TruckDtl..MinY(0)
Gui.F_TruckDtl..Position(0,0)
Gui.F_TruckDtl..AlwaysOnTop(False)
Gui.F_TruckDtl..FontName("Tahoma")
Gui.F_TruckDtl..FontSize(8.25)
Gui.F_TruckDtl..ControlBox(True)
Gui.F_TruckDtl..MaxButton(True)
Gui.F_TruckDtl..MinButton(False)
Gui.F_TruckDtl..MousePointer(0)
Gui.F_TruckDtl..Moveable(True)
Gui.F_TruckDtl..Sizeable(True)
Gui.F_TruckDtl..ShowInTaskBar(True)
Gui.F_TruckDtl..TitleBar(True)
Gui.F_TruckDtl..Event(UnLoad,F_TruckDtl_UnLoad)
Gui.F_TruckDtl.GsGcTruckDetail.Create(GsGridControl)
Gui.F_TruckDtl.GsGcTruckDetail.Enabled(True)
Gui.F_TruckDtl.GsGcTruckDetail.Visible(True)
Gui.F_TruckDtl.GsGcTruckDetail.Zorder(0)
Gui.F_TruckDtl.GsGcTruckDetail.Size(1398,735)
Gui.F_TruckDtl.GsGcTruckDetail.Position(0,0)
Gui.F_TruckDtl.GsGcTruckDetail.Dock(5)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
V.Global.bError.Declare(Boolean)
V.Global.bUnattended.Declare(Boolean)
V.Global.bLoadData.Declare(Boolean, False)
V.Global.sFulFail.Declare(String)
V.Global.sFulSuccess.Declare(String)
V.Global.bFail.Declare(Boolean)
V.Global.bExistingLoad.Declare(Boolean, False)
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.Try
V.Local.bAdmin.Declare(Boolean)
V.Local.dShipDate.Declare(Date)
Function.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout

'open connecton to the db
F.ODBC.Connection!con.OpenConnection(V.Ambient.PDSN, V.Ambient.PUser, V.Ambient.PPass)


'check to see if the user is in the TRKADMIN security group
F.Global.Security.IsInGroup(V.Caller.User, "TRKADMIN", V.Caller.CompanyCode, V.Local.bAdmin)

F.Intrinsic.Control.If(V.Local.bAdmin,=,True)
	
	F.Intrinsic.UI.InvokeWaitDialog("Loading Grids...", "Please Wait")
	'if they are, load the dashboard as usual
	'Load No Load Grid
	F.Intrinsic.Control.CallSub(LoadNoLoadGrid)
	'Format No Load Grid
	F.Intrinsic.Control.CallSub(FormatNoLoadGrid)
	
	'Load Existing Load Grid
	F.Intrinsic.Control.CallSub(LoadExistGrid)
	'Format Existing Load Grid
	F.Intrinsic.Control.CallSub(FormatExistGrid)
	
	'Load Truck Builder Grid
	F.Intrinsic.Control.CallSub(LoadBuilderGrid)
	'Format Builder Grid
	F.Intrinsic.Control.CallSub(FormatBuilderGrid)
	
	'load in process grid
	F.Intrinsic.Control.CallSub(LoadInProcessGrid)
	'Format In Process Grid
	F.Intrinsic.Control.CallSub(FormatInProcessGrid)
	
	'set the context menu
	F.Intrinsic.Control.CallSub(SetContextMenu)
	
	'callsub to deserialize columns
	F.Intrinsic.Control.CallSub(Deserialize)
	V.Global.bLoadData.Set(True)
	
	V.Global.bExistingLoad.Set(False)
	Gui.f_Main.cmdSave.Enabled(True)
	Gui.f_Main.cmdConvert.Enabled(True)
	Gui.f_Main.cmdDelete.Enabled(True)
	Gui.f_Main.cmdTrckBrw.Enabled(True)
	Gui.f_Main.cmdDriverBrws.Enabled(True)
	Gui.f_Main.cmdLoadBrws.Enabled(True)
	
	Gui.f_Main.txtTruckNo.Enabled(True)
	Gui.f_Main.txtDriver.Enabled(True)
	Gui.f_Main.txtLoader.Enabled(True)
	Gui.f_Main.chkShuttle.Enabled(True)
	Gui.f_Main.dtpShipDate.Enabled(True)
	
	F.Intrinsic.UI.CloseWaitDialog
	
	'Set the ship date to the next business day
	F.Intrinsic.Date.DateAddWorkdays(V.Ambient.Date, 1,V.Local.dShipDate)
	Gui.f_Main.dtpShipDate.Value(V.Local.dShipDate)
	
	'apply the theme and show the form
	Gui.f_Main..ApplyTheme()
	Gui.f_Main.tab1.SetTab(0)
	Gui.f_Main..Show
	
F.Intrinsic.Control.ElseIf(V.Local.bAdmin,=,False)
	'if they are not, only load the "view mode"
	f.Intrinsic.UI.InvokeWaitDialog("Loading View Only Dashboard...", "Please Wait")
	
	'show the view only mode of the dashboard
	
	Gui.f_Main.tab1.TabEnabled(0, False)
	Gui.f_Main.tab1.TabEnabled(1, False)
	Gui.f_Main.tab1.SetTab(2)
	
	'Load Existing Load Grid
	F.Intrinsic.Control.CallSub(LoadExistGrid)
	'Format Existing Load Grid
	F.Intrinsic.Control.CallSub(FormatExistGrid)
	
	Gui.f_Main..Show
	
	F.Intrinsic.UI.CloseWaitDialog
F.Intrinsic.Control.EndIf



F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.LoadNoLoadGrid.Start
F.Intrinsic.Control.Try
V.Local.iCnt.Declare(Long)
V.Local.sSQL.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sRet2.Declare(String)

'check to see if the datatable exists
F.Intrinsic.Control.If(V.DataTable.dtNoLoad.Exists)
	F.Data.DataTable.Close("dtNoLoad")
F.Intrinsic.Control.EndIf

'create datatable
F.Data.DataTable.Create("dtNoLoad", True)
'add columns
F.Data.DataTable.AddColumn("dtNoLoad", "ADD_LINE", "STRING")
f.Data.DataTable.AddColumn("dtNoLoad","PCK_NO","String")
f.Data.DataTable.AddColumn("dtNoLoad","ORDER_NO","String")
f.Data.DataTable.AddColumn("dtNoLoad","ORDER_LINE","String")
f.Data.DataTable.AddColumn("dtNoLoad","CUSTOMER","String")
f.Data.DataTable.AddColumn("dtNoLoad","CUST_NAME","String")
f.Data.DataTable.AddColumn("dtNoLoad","ZONE","Long")
F.Data.DataTable.AddColumn("dtNoLoad", "ZONE_SEQ", "Long")
f.Data.DataTable.AddColumn("dtNoLoad","ADDRESS_1","String")
f.Data.DataTable.AddColumn("dtNoLoad","ADDRESS_2","String")
'f.Data.DataTable.AddColumn("dtNoLoad","ADDRESS_3","String")
'f.Data.DataTable.AddColumn("dtNoLoad","ADDRESS_4","String")
'f.Data.DataTable.AddColumn("dtNoLoad","ADDRESS_5","String")
f.Data.DataTable.AddColumn("dtNoLoad","CITY","String")
f.Data.DataTable.AddColumn("dtNoLoad","STATE","String")
f.Data.DataTable.AddColumn("dtNoLoad","ZIP","String")
f.Data.DataTable.AddColumn("dtNoLoad","PART","String")
f.Data.DataTable.AddColumn("dtNoLoad","DESCRIPTION","String")
F.Data.DataTable.AddColumn("dtNoLoad", "LIST_INFO", "STRING")
f.Data.DataTable.AddColumn("dtNoLoad","QTY","Float")
f.Data.DataTable.AddColumn("dtNoLoad","UM","String")
f.Data.DataTable.AddColumn("dtNoLoad","WEIGHT","Float")
F.Data.DataTable.AddColumn("dtNoLoad", "STATUS", "String")


'query staged shipments table to get those orders that are staged but not in a load
'check to see if the temp table exits. If it does, close it
F.Intrinsic.Control.If(V.DataTable.dtTempNoLoad.Exists,=,True)
	F.Data.DataTable.Close("dtTempNoLoad")
F.Intrinsic.Control.EndIf

'Create temp table
F.Data.DataTable.CreateFromSQL("dtTempNoLoad", "con", "SELECT A.PCK_NO, A.ORDER_NO, A.LINE AS ORDER_LINE, B.CUST AS CUSTOMER, C.NAME_CUSTOMER AS CUST_NAME, B.SHIPTO, 'STAGED' AS STATUS, A.PART, D.DESCRIPTION, CAST(A.QTY_ORD AS FLOAT) AS QTY, E.UM_ORDER AS UM, CAST(E.WEIGHT AS FLOAT) AS WEIGHT FROM V_STAGING_QUANTITY A LEFT JOIN V_STAGING_HEADER B ON A.PCK_NO = B.PCK_NO LEFT JOIN V_CUSTOMER_MASTER C ON B.CUST = C.CUSTOMER LEFT JOIN V_INVENTORY_MSTR D ON A.PART = D.PART AND A.LOC = D.LOCATION  LEFT JOIN V_ORDER_LINES E ON A.ORDER_NO = E.ORDER_NO AND A.LINE = E.RECORD_NO WHERE A.PCK_NO NOT IN (SELECT F.PCK_NO FROM GCG_6880_EXIST_LOADS F WHERE A.PCK_NO = F.PCK_NO) AND A.PCK_NO NOT IN (SELECT G.PCK_NO FROM GCG_6880_LOAD_DTL G WHERE A.PCK_NO = G.PCK_NO)  ORDER BY A.PCK_NO, A.ORDER_NO, A.LINE", True)

'merge temp table into the dtNoLoad table
F.Data.DataTable.Merge("dtTempNoLoad", "dtNoLoad", True, 1)
F.Data.DataTable.Close("dtTempNoLoad")

'fill address information from order ship to table
F.Data.Dictionary.CreateFromSQL("dictAddr1", "con", "SELECT SHIP_ID AS SHIPTO, ADDRESS_1_SHIP AS ADDRESS_1 FROM V_ORDER_SHIP_TO")
F.Data.Dictionary.SetDefaultReturn("dictAddr1", " ")
F.Data.DataTable.FillFromDictionary("dtNoLoad", "dictAddr1", "SHIPTO", "ADDRESS_1")
F.Data.Dictionary.Close("dictAddr1")

F.Data.Dictionary.CreateFromSQL("dictAddr2", "con", "SELECT SHIP_ID AS SHIPTO, ADDRESS_2_SHIP AS ADDRESS_2 FROM V_ORDER_SHIP_TO")
F.Data.Dictionary.SetDefaultReturn("dictAddr2", " ")
F.Data.DataTable.FillFromDictionary("dtNoLoad", "dictAddr2", "SHIPTO", "ADDRESS_2")
F.Data.Dictionary.Close("dictAddr2")

'F.Data.Dictionary.CreateFromSQL("dictAddr3", "con", "SELECT SHIP_ID AS SHIPTO, ADDRESS_3_SHIP AS ADDRESS_3 FROM V_ORDER_SHIP_TO")
'F.Data.Dictionary.SetDefaultReturn("dictAddr3", " ")
'F.Data.DataTable.FillFromDictionary("dtNoLoad", "dictAddr3", "SHIPTO", "ADDRESS_3")
'F.Data.Dictionary.Close("dictAddr3")

'F.Data.Dictionary.CreateFromSQL("dictAddr4", "con", "SELECT SHIP_ID AS SHIPTO, ADDRESS_4_SHIP AS ADDRESS_4 FROM V_ORDER_SHIP_TO")
'F.Data.Dictionary.SetDefaultReturn("dictAddr4", " ")
'F.Data.DataTable.FillFromDictionary("dtNoLoad", "dictAddr4", "SHIPTO", "ADDRESS_4")
'F.Data.Dictionary.Close("dictAddr4")

'F.Data.Dictionary.CreateFromSQL("dictAddr5", "con", "SELECT SHIP_ID AS SHIPTO, ADDRESS_5_SHIP AS ADDRESS_5 FROM V_ORDER_SHIP_TO")
'F.Data.Dictionary.SetDefaultReturn("dictAddr5", " ")
'F.Data.DataTable.FillFromDictionary("dtNoLoad", "dictAddr5", "SHIPTO", "ADDRESS_5")
'F.Data.Dictionary.Close("dictAddr5")

F.Data.Dictionary.CreateFromSQL("dictCity", "con", "SELECT SHIP_ID AS SHIPTO, CITY_SHIP AS CITY FROM V_ORDER_SHIP_TO")
F.Data.Dictionary.SetDefaultReturn("dictCity", " ")
F.Data.DataTable.FillFromDictionary("dtNoLoad", "dictCity", "SHIPTO", "CITY")
F.Data.Dictionary.Close("dictCity")

F.Data.Dictionary.CreateFromSQL("dictState", "con", "SELECT SHIP_ID AS SHIPTO, STATE_SHIP AS CITY FROM V_ORDER_SHIP_TO")
F.Data.Dictionary.SetDefaultReturn("dictState", " ")
F.Data.DataTable.FillFromDictionary("dtNoLoad", "dictState", "SHIPTO", "STATE")
F.Data.Dictionary.Close("dictState")

F.Data.Dictionary.CreateFromSQL("dictZip", "con", "SELECT SHIP_ID AS SHIPTO, CODE_ZIP_SHIP AS ZIP FROM V_ORDER_SHIP_TO")
F.Data.Dictionary.SetDefaultReturn("dictZip", " ")
F.Data.DataTable.FillFromDictionary("dtNoLoad", "dictZip", "SHIPTO", "ZIP")
F.Data.Dictionary.Close("dictZip")

'populate zone
F.Intrinsic.Control.For(V.Local.iCnt,0, V.DataTable.dtNoLoad.RowCount--,1)
	F.Intrinsic.String.Build("SELECT ZONE_NO, ZONE_SEQ FROM GCG_6880_SHIP_ZONE WHERE BEG_ZIP_CODE >= '{0}' AND END_ZIP_CODE <= '{0}' ORDER BY ZONE_NO, ZONE_SEQ", v.DataTable.dtNoLoad(V.Local.iCnt).ZIP!FieldValtrim, V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
		F.Intrinsic.String.Split(V.Local.sRet, "$#$", V.Local.sRet)
		F.Intrinsic.Control.If(V.Local.sRet.UBound,=,0)
			F.Intrinsic.String.Split(V.Local.sRet(0), "*!*", V.Local.sRet2)
			F.Data.DataTable.SetValue("dtNoLoad",v.Local.iCnt, "ZONE", V.Local.sRet2(0), "ZONE_SEQ", V.Local.sRet2(1))
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iCnt)

'Populate list information
F.Intrinsic.Control.For(V.Local.iCnt, 0, V.DataTable.dtNoLoad.RowCount--,1)
	F.Intrinsic.String.Build("SELECT LTRIM(RTRIM(TEXT)) AS LIST_INFO FROM V_ORDER_LN_TEXT WHERE ORDER_NUM = '{0}' AND ORDER_LINE = '{1}' AND ORDER_TYPE = '9999'", V.DataTable.dtNoLoad(V.Local.iCnt).ORDER_NO!FieldValTrim, V.DataTable.dtNoLoad(V.Local.iCnt).ORDER_LINE!FieldValTrim, V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
		F.Intrinsic.String.Split(V.Local.sRet,"*!*", V.Local.sRet)
		F.Data.DataTable.SetValue("dtNoLoad", V.Local.iCnt, "LIST_INFO", V.Local.sRet.Trim)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iCnt)

F.Data.DataTable.RemoveColumn("dtNoLoad", "SHIPTO")

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.LoadNoLoadGrid.End

Program.Sub.LoadExistGrid.Start
F.Intrinsic.Control.Try

'check to see if the datatable exists
F.Intrinsic.Control.If(V.DataTable.dtExistingLoads.Exists)
	F.Data.DataTable.Close("dtExistingLoads")
F.Intrinsic.Control.EndIf
'create datatable
F.Data.DataTable.Create("dtExistingLoads",True)
'add columns
f.Data.DataTable.AddColumn("dtExistingLoads","TRUCK_NO", "String")
f.Data.DataTable.AddColumn("dtExistingLoads","LOAD_NO","Long")
f.Data.DataTable.AddColumn("dtExistingLoads","SHIP_DATE","Date")
'f.Data.DataTable.AddColumn("dtExistingLoads","PCK_NO","String")
F.Data.DataTable.AddColumn("dtExistingLoads", "DRIVER_BRWS", "STRING")
F.Data.DataTable.AddColumn("dtExistingLoads", "TRUCK_DRIVER", "String")
'f.Data.DataTable.AddColumn("dtExistingLoads","LOADER","String")
'f.Data.DataTable.AddColumn("dtExistingLoads","ORDER_NO","String")
'f.Data.DataTable.AddColumn("dtExistingLoads","ORDER_LINE","String")
'f.Data.DataTable.AddColumn("dtExistingLoads","CUSTOMER","String")
'f.Data.DataTable.AddColumn("dtExistingLoads","CUST_NAME","String")
'f.Data.DataTable.AddColumn("dtExistingLoads","ZONE","Long")
'f.Data.DataTable.AddColumn("dtExistingLoads","ZONE_SEQ","Long")
'f.Data.DataTable.AddColumn("dtExistingLoads","PART","String")
'f.Data.DataTable.AddColumn("dtExistingLoads","DESCRIPTION","String")
'f.Data.DataTable.AddColumn("dtExistingLoads","QTY","Float")
'f.Data.DataTable.AddColumn("dtExistingLoads","UM","String")
'f.Data.DataTable.AddColumn("dtExistingLoads","WEIGHT","Float")
'F.Data.DataTable.AddColumn("dtExistingLoads", "STATUS", "String")

'query the existing loads table
'check to see if the temp table exits. If it does, close it
F.Intrinsic.Control.If(V.DataTable.dtTempExist.Exists,=,True)
	F.Data.DataTable.Close("dtTempExist")
F.Intrinsic.Control.EndIf

'Create temp table
F.Data.DataTable.CreateFromSQL("dtTempExist","con", "SELECT DISTINCT A.TRUCK_NO,A.LOAD_NO, A.SHIP_DATE ,RTRIM(LTRIM(A.TRUCK_DRIVER)) AS TRUCK_DRIVER FROM GCG_6880_EXIST_LOADS A WHERE (A.ORDER_NO + A.ORDER_LINE) NOT IN (SELECT (B.ORDER_NO + B.ORDER_LINE) AS ORDER_KEY FROM V_ORDER_HIST_LINE B WHERE (A.ORDER_NO + A.ORDER_LINE) = (B.ORDER_NO + B.ORDER_LINE)) ORDER BY LOAD_NO", True)
'F.Data.DataTable.CreateFromSQL("dtTempExist","con", "SELECT A.TRUCK_NO,A.LOAD_NO, A.SHIP_DATE, A.PCK_NO, RTRIM(LTRIM(A.LOADER)) AS LOADER,RTRIM(LTRIM(A.TRUCK_DRIVER)) AS TRUCK_DRIVER, RTRIM(LTRIM(A.ORDER_NO)) AS ORDER_NO, A.ORDER_LINE, (ORDER_NO + ORDER_LINE) AS ORDER_KEY, A.CUSTOMER, RTRIM(LTRIM(A.CUST_NAME)) AS CUST_NAME, A.ZONE, A.ZONE_SEQ, A.PART, RTRIM(LTRIM(A.DESCRIPTION)) AS DESCRIPTION, A.QTY, A.UM, A.WEIGHT, 'OPEN' AS STATUS FROM GCG_6880_EXIST_LOADS A WHERE (A.ORDER_NO + A.ORDER_LINE) NOT IN (SELECT (B.ORDER_NO + B.ORDER_LINE) AS ORDER_KEY FROM V_ORDER_HIST_LINE B WHERE (A.ORDER_NO + A.ORDER_LINE) = (B.ORDER_NO + B.ORDER_LINE)) ORDER BY LOAD_NO", True)

'fill status from dictionary
'F.Data.Dictionary.CreateFromSQL("dictInvoiced", "con", "SELECT (ORDER_NO + ORDER_LINE) AS ORDER_KEY, 'INVOICED' AS STATUS FROM V_ORDER_HIST_LINE")
'F.Data.Dictionary.SetDefaultReturn("dictInvoiced", "OPEN")
'F.Data.DataTable.FillFromDictionary("dtTempExist", "dictInvoiced", "ORDER_KEY", "STATUS")
'F.Data.Dictionary.Close("dictInvoiced")

'F.Data.DataTable.RemoveColumn("dtTempExist", "ORDER_KEY")

'merge temp table into the dtExistingLoads table
F.Data.DataTable.Merge("dtTempExist", "dtExistingLoads", True, 1)
F.Data.DataTable.Close("dtTempExist")

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.LoadExistGrid.End

Program.Sub.LoadBuilderGrid.Start
F.Intrinsic.Control.Try
V.Local.iCnt.Declare(Long)
V.Local.iCnt2.Declare(Long)
V.Local.sRet.Declare(String)
V.Local.sRet2.Declare(String)
V.Local.sCustomer.Declare(String)
V.Local.sOrderNo.Declare(String)
V.Local.sOrderLine.Declare(String)
V.Local.sPckNo.Declare(String)
V.Local.sSQL.Declare(String)

'check to see if the datatable exists
F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.Exists)
	F.Data.DataTable.Close("dtCurrentLoad")
F.Intrinsic.Control.EndIf

'create datatable
F.Data.DataTable.Create("dtCurrentLoad",True)
'add columns
f.Data.DataTable.AddColumn("dtCurrentLoad","STOP_NO","Long")
F.Data.DataTable.AddColumn("dtCurrentLoad", "PCK_NO", "String")
f.Data.DataTable.AddColumn("dtCurrentLoad","ORDER_NO","String")
f.Data.DataTable.AddColumn("dtCurrentLoad","ORDER_LINE","String")
f.Data.DataTable.AddColumn("dtCurrentLoad","CUSTOMER","String")
f.Data.DataTable.AddColumn("dtCurrentLoad","CUST_NAME","String")
f.Data.DataTable.AddColumn("dtCurrentLoad","ZONE","Long")
f.Data.DataTable.AddColumn("dtCurrentLoad","ZONE_SEQ","Long")
f.Data.DataTable.AddColumn("dtCurrentLoad","ADDRESS_1","String")
f.Data.DataTable.AddColumn("dtCurrentLoad","ADDRESS_2","String")
'f.Data.DataTable.AddColumn("dtCurrentLoad","ADDRESS_3","String")
'f.Data.DataTable.AddColumn("dtCurrentLoad","ADDRESS_4","String")
'f.Data.DataTable.AddColumn("dtCurrentLoad","ADDRESS_5","String")
f.Data.DataTable.AddColumn("dtCurrentLoad","CITY","String")
f.Data.DataTable.AddColumn("dtCurrentLoad","STATE","String")
f.Data.DataTable.AddColumn("dtCurrentLoad","ZIP","String")
f.Data.DataTable.AddColumn("dtCurrentLoad","PART","String")
f.Data.DataTable.AddColumn("dtCurrentLoad","DESCRIPTION","String")
F.Data.DataTable.AddColumn("dtCurrentLoad", "LIST_INFO", "String")
f.Data.DataTable.AddColumn("dtCurrentLoad","QTY","Float")
f.Data.DataTable.AddColumn("dtCurrentLoad","UM","String")
f.Data.DataTable.AddColumn("dtCurrentLoad","WEIGHT","Float")
F.Data.DataTable.AddColumn("dtCurrentLoad", "DELETE_LINE", "STRING")
F.Data.DataTable.AddColumn("dtCurrentLoad", "OVERWT_FLAG", "BOOLEAN")


'check to see if temp table exists
'F.Intrinsic.Control.If(V.DataTable.dtTempCurrLoad.Exists)
'	F.Data.DataTable.Close("dtTempCurrLoad")
'F.Intrinsic.Control.EndIf

'query load detail table to find those loads that don't exist in the EXIST Load table
'F.Data.DataTable.CreateFromSQL("dtTempCurrLoad", "con", "SELECT A.STOP_NO, A.PCK_NO, A.ORDER_NO, A.ORDER_LINE, A.CUSTOMER, A.CUST_NAME, A.ZONE, A.ZONE_SEQ,A. ADDRESS_1, A.ADDRESS_2, A.ADDRESS_3, A.ADDRESS_4, A.ADDRESS_5, A.CITY, A.STATE, A.ZIP, A.PART, A.DESCRIPTION, A.QTY, A.UM, A.WEIGHT, '' AS DELETE_LINE FROM GCG_6880_LOAD_DTL A WHERE A.LOAD_NO NOT IN (SELECT B.LOAD_NO FROM GCG_6880_EXIST_LOADS B WHERE A.LOAD_NO = B.LOAD_NO) ORDER BY A.STOP_NO", True)
'F.Intrinsic.Control.If(V.DataTable.dtTempCurrLoad.RowCount--,>,-1)
'	F.ODBC.Connection!con.ExecuteAndReturn("SELECT DISTINCT LOAD_NO, TRUCK_NO,TRUCK_DRIVER, TRUCK_LOADER, TRUCK_LENGTH, TRUCK_WIDTH, REM_WEIGHT, SHIP_DATE FROM GCG_6880_LOAD_DTL WHERE LOAD_NO NOT IN (SELECT LOAD_NO FROM GCG_6880_EXIST_LOADS)", v.Local.sRet)
'	f.Intrinsic.String.Split(V.Local.sRet, "*!*", v.Local.sRet)
'	Gui.f_Main.txtLoadNo.Text(V.Local.sRet(0).Trim)
'	Gui.f_Main.txtTruckNo.Text(V.Local.sRet(1).Trim)
'	Gui.f_Main.txtDriver.Text(V.Local.sRet(2).Trim)
'	Gui.f_Main.txtLoader.Text(V.Local.sRet(3).Trim)
'	Gui.f_Main.txtLength.Text(V.Local.sRet(4))
'	Gui.f_Main.txtWidth.Text(V.Local.sRet(5))
'	Gui.f_Main.txtRemWt.Text(V.Local.sRet(6))
'	Gui.f_Main.dtpShipDate.Value(V.Local.sRet(7).PervasiveDate)
'	F.Data.DataTable.Merge("dtTempCurrLoad", "dtCurrentLoad", True, 1)
'	F.Data.DataTable.Close("dtTempCurrLoad")
'F.Intrinsic.Control.Else
'	F.Data.DataTable.Close("dtTempCurrLoad")
'F.Intrinsic.Control.EndIf

	'add child grid to Current Load Table
F.Data.DataTable.AddTable("dtCurrentLoad", "dtNotes")
F.Data.DataTable.AddColumn("dtCurrentLoad$dtNotes", "CUSTOMER", "STRING")
F.Data.DataTable.AddColumn("dtCurrentLoad$dtNotes", "ORDER_NO", "STRING")
F.Data.DataTable.AddColumn("dtCurrentLoad$dtNotes", "ORDER_LINE", "STRING")
F.Data.DataTable.AddColumn("dtCurrentLoad$dtNotes", "SHIPMENT_NOTES", "STRING")
'F.Data.DataTable.AddColumn("dtCurrentLoad$dtNotes", "PCK_NO", "STRING")
F.Data.DataTable.AddColumn("dtCurrentLoad$dtNotes", "ORDER_NOTES", "STRING")
F.Data.DataTable.AddColumn("dtCurrentLoad$dtNotes", "CUST_NOTES", "STRING")

F.Data.DataTable.AcceptChanges("dtCurrentLoad")


F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.LoadBuilderGrid.End

Program.Sub.LoadInProcessGrid.Start
F.Intrinsic.Control.Try
V.Local.iCnt.Declare(Long)
V.Local.iCnt2.Declare(Long)
V.Local.sRet.Declare(String)
V.Local.sRet2.Declare(String)
V.Local.sCustomer.Declare(String)
V.Local.sOrderNo.Declare(String)
V.Local.sOrderLine.Declare(String)
V.Local.sPckNo.Declare(String)
V.Local.sSQL.Declare(String)

'check to see if the datatable exists
F.Intrinsic.Control.If(V.DataTable.dtInProcess.Exists)
	F.Data.DataTable.Close("dtInProcess")
F.Intrinsic.Control.EndIf

'create datatable
F.Data.DataTable.Create("dtInProcess",True)
'add columns
f.Data.DataTable.AddColumn("dtInprocess","TRUCK_NO", "String")
F.Data.DataTable.AddColumn("dtInprocess", "LOAD_NO", "Long")
f.Data.DataTable.AddColumn("dtInprocess","SHIP_DATE","Date")
f.Data.DataTable.AddColumn("dtInProcess","STOP_NO","Long")
F.Data.DataTable.AddColumn("dtInProcess", "PCK_NO", "String")
f.Data.DataTable.AddColumn("dtInProcess","ORDER_NO","String")
f.Data.DataTable.AddColumn("dtInProcess","ORDER_LINE","String")
f.Data.DataTable.AddColumn("dtInProcess","CUSTOMER","String")
f.Data.DataTable.AddColumn("dtInProcess","CUST_NAME","String")
f.Data.DataTable.AddColumn("dtInProcess","ZONE","Long")
f.Data.DataTable.AddColumn("dtInProcess","ZONE_SEQ","Long")
f.Data.DataTable.AddColumn("dtInProcess","ADDRESS_1","String")
f.Data.DataTable.AddColumn("dtInProcess","ADDRESS_2","String")
'f.Data.DataTable.AddColumn("dtInProcess","ADDRESS_3","String")
'f.Data.DataTable.AddColumn("dtInProcess","ADDRESS_4","String")
'f.Data.DataTable.AddColumn("dtInProcess","ADDRESS_5","String")
f.Data.DataTable.AddColumn("dtInProcess","CITY","String")
f.Data.DataTable.AddColumn("dtInProcess","STATE","String")
f.Data.DataTable.AddColumn("dtInProcess","ZIP","String")
f.Data.DataTable.AddColumn("dtInProcess","PART","String")
f.Data.DataTable.AddColumn("dtInProcess","DESCRIPTION","String")
f.Data.DataTable.AddColumn("dtInProcess","LIST_INFO","String")
f.Data.DataTable.AddColumn("dtInProcess","QTY","Float")
f.Data.DataTable.AddColumn("dtInProcess","UM","String")
f.Data.DataTable.AddColumn("dtInProcess","WEIGHT","Float")

'add child grid to the dtInprocess Load Table
F.Data.DataTable.AddTable("dtInProcess", "dtInProcessNotes")
F.Data.DataTable.AddColumn("dtInProcess$dtInProcessNotes", "CUSTOMER", "STRING")
F.Data.DataTable.AddColumn("dtInProcess$dtInProcessNotes", "ORDER_NO", "STRING")
F.Data.DataTable.AddColumn("dtInProcess$dtInProcessNotes", "ORDER_LINE", "STRING")
F.Data.DataTable.AddColumn("dtInProcess$dtInProcessNotes", "SHIPMENT_NOTES", "STRING")
'F.Data.DataTable.AddColumn("dtCurrentLoad$dtInProcessNotes", "PCK_NO", "STRING")
F.Data.DataTable.AddColumn("dtInProcess$dtInProcessNotes", "ORDER_NOTES", "STRING")
F.Data.DataTable.AddColumn("dtInProcess$dtInProcessNotes", "CUST_NOTES", "STRING")

'F.Data.DataTable.AddRelation("dtInProcess", "CUSTOMER*!*ORDER_NO*!*ORDER_LINE", "dtInProcess$dtInProcessNotes", "CUSTOMER*!*ORDER_NO*!*ORDER_LINE")

'check to see if temp table exists
F.Intrinsic.Control.If(V.DataTable.dtTempCurrLoad.Exists)
	F.Data.DataTable.Close("dtTempInProcess")
F.Intrinsic.Control.EndIf

'query load detail table to find those loads that don't exist in the EXIST Load table

F.Data.DataTable.CreateFromSQL("dtTempInProcess", "con", "SELECT A.LOAD_NO, A.TRUCK_NO, A.SHIP_DATE, A.STOP_NO, A.PCK_NO, A.ORDER_NO, A.ORDER_LINE, A.CUSTOMER, A.CUST_NAME, A.ZONE, A.ZONE_SEQ,A. ADDRESS_1, A.ADDRESS_2,  A.CITY, A.STATE, A.ZIP, A.PART, A.DESCRIPTION, A.QTY, A.UM, A.WEIGHT FROM GCG_6880_LOAD_DTL A WHERE A.LOAD_NO NOT IN (SELECT B.LOAD_NO FROM GCG_6880_EXIST_LOADS B WHERE A.LOAD_NO = B.LOAD_NO) ORDER BY A.STOP_NO", True)

'F.Data.DataTable.CreateFromSQL("dtTempInProcess", "con", "SELECT A.LOAD_NO, A.TRUCK_NO, A.SHIP_DATE, A.STOP_NO, A.PCK_NO, A.ORDER_NO, A.ORDER_LINE, A.CUSTOMER, A.CUST_NAME, A.ZONE, A.ZONE_SEQ,A. ADDRESS_1, A.ADDRESS_2, A.ADDRESS_3, A.ADDRESS_4, A.ADDRESS_5, A.CITY, A.STATE, A.ZIP, A.PART, A.DESCRIPTION, A.QTY, A.UM, A.WEIGHT FROM GCG_6880_LOAD_DTL A WHERE A.LOAD_NO NOT IN (SELECT B.LOAD_NO FROM GCG_6880_EXIST_LOADS B WHERE A.LOAD_NO = B.LOAD_NO) ORDER BY A.STOP_NO", True)
F.Intrinsic.Control.If(V.DataTable.dtTempInProcess.RowCount--,>,-1)
'	F.ODBC.Connection!con.ExecuteAndReturn("SELECT DISTINCT LOAD_NO, TRUCK_NO,TRUCK_DRIVER, TRUCK_LOADER, TRUCK_LENGTH, TRUCK_WIDTH, REM_WEIGHT, SHIP_DATE FROM GCG_6880_LOAD_DTL WHERE LOAD_NO NOT IN (SELECT LOAD_NO FROM GCG_6880_EXIST_LOADS)", v.Local.sRet)
'	f.Intrinsic.String.Split(V.Local.sRet, "*!*", v.Local.sRet)
'	Gui.f_Main.txtLoadNo.Text(V.Local.sRet(0).Trim)
'	Gui.f_Main.txtTruckNo.Text(V.Local.sRet(1).Trim)
'	Gui.f_Main.txtDriver.Text(V.Local.sRet(2).Trim)
'	Gui.f_Main.txtLoader.Text(V.Local.sRet(3).Trim)
'	Gui.f_Main.txtLength.Text(V.Local.sRet(4))
'	Gui.f_Main.txtWidth.Text(V.Local.sRet(5))
'	Gui.f_Main.txtRemWt.Text(V.Local.sRet(6))
'	Gui.f_Main.dtpShipDate.Value(V.Local.sRet(7).PervasiveDate)
	F.Data.DataTable.Merge("dtTempInProcess", "dtInProcess", True, 4)
	F.Data.DataTable.Close("dtTempInProcess")
F.Intrinsic.Control.Else
	F.Data.DataTable.Close("dtTempInProcess")
F.Intrinsic.Control.EndIf

'loop through the datatable and populate the list information
F.Intrinsic.Control.For(V.Local.iCnt,0, V.DataTable.dtInProcess.RowCount--,1)
	F.Intrinsic.String.Build("SELECT RTRIM(LTRIM(TEXT)) AS LIST_INFO FROM V_ORDER_LN_TEXT WHERE ORDER_NUM = '{0}' AND ORDER_LINE = '{1}' AND ORDER_TYPE = '9999'", V.DataTable.dtInProcess(V.Local.iCnt).ORDER_NO!FieldValTrim, V.DataTable.dtInProcess(V.Local.iCnt).ORDER_LINE!FieldValTrim, V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
		f.Data.DataTable.SetValue("dtInProcess", V.Local.iCnt, "LIST_INFO", V.Local.sRet.Trim)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iCnt)

'F.Data.DataTable.AcceptChanges("dtInProcess")


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.LoadInProcessGrid.End

Program.Sub.FormatNoLoadGrid.Start
F.Intrinsic.Control.Try
V.Local.sDefault.Declare(String)
V.Local.sGV.Declare(String)
V.Local.sProperty.Declare(String)


Gui.f_Main.GsGcNoLoad.AddGridviewFromDatatable("gvNoLoad", "dtNoLoad")
V.Local.sGV.Set("gvNoLoad")

'set gridview properties
Gui.f_Main.GsGcNoLoad.SetGridviewProperty(V.Local.sGV, "AllowSort", True)
Gui.f_Main.GsGcNoLoad.SetGridviewProperty(V.Local.sGV, "AllowFilter", False)
Gui.f_Main.GsGcNoLoad.SetGridviewProperty(V.Local.sGV, "OptionsViewShowGroupPanel", False)
Gui.f_Main.GsGcNoLoad.SetGridviewProperty(V.Local.sGV, "OptionsViewColumnAutoWidth", False)
Gui.f_Main.GsGcNoLoad.SetGridviewProperty(V.Local.sGV, "MultiSelect", True)

V.Local.sProperty.Set("Visible")
V.Local.sDefault.Set("False")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)

'set properites for the columns
V.Local.sProperty.Set("Caption")
V.Local.sDefault.Set(" ")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, "Packing List")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, "Order")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, "Order Line")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, "Customer")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, "Customer Name")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, "Zone")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, "Zone Seq")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_1", V.Local.sProperty, "Address 1")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_2", V.Local.sProperty, "Address 2")
'Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_3", V.Local.sProperty, "Address 3")
'Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_4", V.Local.sProperty, "Address 4")
'Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_5", V.Local.sProperty, "Address 5")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty, "City")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, "State")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ZIP", V.Local.sProperty, "Zip")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, "Part")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, "Description")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "LIST_INFO", V.Local.sProperty, "List Details")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, "Qty")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, "UM")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, "Weight")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADD_LINE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "STATUS", V.Local.sProperty, "Status")

V.Local.sProperty.Set("HeaderHAlignment")
V.Local.sDefault.Set("Left")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_1", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_2", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_3", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_4", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_5", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ZIP", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "LIST_INFO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADD_LINE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "STATUS", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("HeaderFontBold")
V.Local.sDefault.Set("True")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_1", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_2", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_3", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_4", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_5", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ZIP", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "LIST_INFO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADD_LINE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "STATUS", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("AllowEdit")
V.Local.sDefault.Set("False")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_1", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_2", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_3", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_4", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_5", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ZIP", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "LIST_INFO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADD_LINE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "STATUS", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("ReadOnly")
V.Local.sDefault.Set("True")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_1", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_2", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_3", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_4", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_5", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ZIP", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "LIST_INFO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADD_LINE", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("MinWidth")
V.Local.sDefault.Set("200")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, 100)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, 75)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, 75)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, 75)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, 150)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, 65)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, 75)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_1", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_2", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_3", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_4", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADDRESS_5", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty, 100)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, 65)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ZIP", V.Local.sProperty, 65)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty,100)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "LIST_INFO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, 55)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, 50)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, 75)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADD_LINE", V.Local.sProperty, 30)
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "STATUS", V.Local.sProperty, 75)

V.Local.sProperty.Set("MaxWidth")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADD_LINE", V.Local.sProperty, 30)

V.Local.sProperty.Set("CellBackColor")
V.Local.sDefault.Set("LightYellow")
Gui.f_Main.GsGcNoLoad.SetColumnProperty(V.Local.sGV, "ADD_LINE", V.Local.sProperty, V.Local.sDefault)

Gui.f_Main.GsGcNoLoad.ColumnEdit(V.Local.sGV, "ADD_LINE", "EditorButton", "Add")

Gui.f_Main.GsGcNoLoad.MainView(V.Local.sGV)

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.FormatNoLoadGrid.End

Program.Sub.FormatExistGrid.Start
F.Intrinsic.Control.Try
V.Local.bAdmin.Declare(Boolean)
V.Local.sDefault.Declare(String)
V.Local.sGV.Declare(String)
V.Local.sProperty.Declare(String)

'check to see if the user is in the TRKADMIN security group
F.Global.Security.IsInGroup(V.Caller.User, "TRKADMIN", V.Caller.CompanyCode, V.Local.bAdmin)

Gui.f_Main.GsGcExistLoad.AddGridviewFromDatatable("gvExistLoad", "dtExistingLoads")
V.Local.sGV.Set("gvExistLoad")

'set gridview properties
Gui.f_Main.GsGcExistLoad.SetGridviewProperty(V.Local.sGV, "AllowSort", True)
Gui.f_Main.GsGcExistLoad.SetGridviewProperty(V.Local.sGV, "AllowFilter", False)
Gui.f_Main.GsGcExistLoad.SetGridviewProperty(V.Local.sGV, "OptionsViewShowGroupPanel", False)
Gui.f_Main.GsGcExistLoad.SetGridviewProperty(V.Local.sGV, "OptionsViewColumnAutoWidth", False)
Gui.f_Main.GsGcExistLoad.SetGridviewProperty(V.Local.sGV, "MultiSelect", True)

V.Local.sProperty.Set("Visible")
V.Local.sDefault.Set("False")
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)

'set properites for the columns
V.Local.sProperty.Set("Caption")
V.Local.sDefault.Set(" ")
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "TRUCK_NO", V.Local.sProperty, "Truck Number")
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "LOAD_NO", V.Local.sProperty, "Load Number")
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "SHIP_DATE", V.Local.sProperty, "Ship Date")
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, "Packing List")
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "DRIVER_BRWS", V.Local.sProperty, " ")
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "TRUCK_DRIVER", V.Local.sProperty, "Truck Driver")
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "LOADER", V.Local.sProperty, "Loader")
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, "Order")
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, "Order Line")
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, "Customer")
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, "Customer Name")
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, "Zone")
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, "Zone Seq")
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, "Part")
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, "Description")
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, "Qty")
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, "UM")
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, "Weight")
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "STATUS", V.Local.sProperty, "Status")

V.Local.sProperty.Set("HeaderHAlignment")
V.Local.sDefault.Set("Left")
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "TRUCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "LOAD_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "SHIP_DATE", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "DRIVER_BRWS", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "TRUCK_DRIVER", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "LOADER", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "STATUS", V.Local.sProperty, v.Local.sDefault)

V.Local.sProperty.Set("HeaderFontBold")
V.Local.sDefault.Set("True")
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "TRUCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "LOAD_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "SHIP_DATE", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "LOADER", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "DRIVER_BRWS", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "TRUCK_DRIVER", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "STATUS", V.Local.sProperty, v.Local.sDefault)

V.Local.sProperty.Set("AllowEdit")
V.Local.sDefault.Set("False")
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "TRUCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "LOAD_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "SHIP_DATE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "DRIVER_BRWS", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, V.Local.sDefault)
F.Intrinsic.Control.If(V.Local.bAdmin,=,True)
	Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "TRUCK_DRIVER", V.Local.sProperty, True)
	V.Local.sProperty.Set("Visible")
	V.Local.sDefault.Set("True")
	Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "DRIVER_BRWS", V.Local.sProperty, V.Local.sDefault)
F.Intrinsic.Control.Else
	Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "TRUCK_DRIVER", V.Local.sProperty, False)
	V.Local.sProperty.Set("Visible")
	V.Local.sDefault.Set("False")
	Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "DRIVER_BRWS", V.Local.sProperty, V.Local.sDefault)
F.Intrinsic.Control.EndIf
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "LOADER", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "STATUS", V.Local.sProperty, v.Local.sDefault)

V.Local.sProperty.Set("ReadOnly")
V.Local.sDefault.Set("True")
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "TRUCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "LOAD_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "SHIP_DATE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "DRIVER_BRWS", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, V.Local.sDefault)
F.Intrinsic.Control.If(V.Local.bAdmin,=,True)
	Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "TRUCK_DRIVER", V.Local.sProperty, False)
F.Intrinsic.Control.Else
	Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "TRUCK_DRIVER", V.Local.sProperty, V.Local.sDefault)
F.Intrinsic.Control.EndIf
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "LOADER", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "STATUS", V.Local.sProperty, v.Local.sDefault)

V.Local.sProperty.Set("MinWidth")
V.Local.sDefault.Set("150")
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "TRUCK_NO", V.Local.sProperty, 100)
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "LOAD_NO", V.Local.sProperty, 100)
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "SHIP_DATE", V.Local.sProperty, 75)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, 95)
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "DRIVER_BRWS", V.Local.sProperty, 30)
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "TRUCK_DRIVER", V.Local.sProperty,100)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "LOADER", V.Local.sProperty, 100)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, 75)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, 75)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, 75)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, 65)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, 75)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, 100)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, 55)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, 75)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, 75)
'Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "STATUS", V.Local.sProperty, 100)

V.Local.sProperty.Set("CellBackColor")
V.Local.sDefault.Set("LightYellow")
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "TRUCK_DRIVER", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("DisplayCustomDatetime")
V.Local.sDefault.Set("d")
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "SHIP_DATE", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("MaxWidth")
Gui.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV, "DRIVER_BRWS", V.Local.sProperty, 30)

GUI.f_Main.GsGcExistLoad.SetColumnProperty(V.Local.sGV,"DRIVER_BRWS","Icon","^")
'Gui.f_Main.GsGcExistLoad.ColumnEdit(V.Local.sGV, "DRIVER_BRWS", "EditorButton", "^")

Gui.f_Main.GsGcExistLoad.MainView(V.Local.sGV)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.FormatExistGrid.End

Program.Sub.FormatBuilderGrid.Start
F.Intrinsic.Control.Try
V.Local.iCnt.Declare(Long)
V.Local.sDefault.Declare(String)
V.Local.sGV.Declare(String)
V.Local.sProperty.Declare(String)

Gui.f_Main.GsGcTruckBuild.AddGridviewFromDatatable("gvBuilder", "dtCurrentLoad")
V.Local.sGV.Set("gvBuilder")

'set gridview properties
Gui.f_Main.GsGcTruckBuild.SetGridviewProperty(V.Local.sGV, "AllowSort", False)
Gui.f_Main.GsGcTruckBuild.SetGridviewProperty(V.Local.sGV, "AllowFilter", False)
Gui.f_Main.GsGcTruckBuild.SetGridviewProperty(V.Local.sGV, "OptionsViewShowGroupPanel", False)
Gui.f_Main.GsGcTruckBuild.SetGridviewProperty(V.Local.sGV, "OptionsViewColumnAutoWidth", False)
Gui.f_Main.GsGcTruckBuild.SetGridviewProperty(V.Local.sGV, "MultiSelect", False)
Gui.f_Main.GsGcTruckBuild.SetGridviewProperty(V.Local.sGV, "ShowDetailTabs", True)

V.Local.sProperty.Set("Visible")
V.Local.sDefault.Set("False")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "OVERWT_FLAG", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)

'set properites for the columns
V.Local.sProperty.Set("Caption")
V.Local.sDefault.Set(" ")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "STOP_NO", V.Local.sProperty, "Stop Number")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, "Packing List")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, "Order")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, "Order Line")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, "Customer")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, "Customer Name")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, "Zone")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, "Zone Seq")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_1", V.Local.sProperty, "Address 1")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_2", V.Local.sProperty, "Address 2")
'Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_3", V.Local.sProperty, "Address 3")
'Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_4", V.Local.sProperty, "Address 4")
'Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_5", V.Local.sProperty, "Address 5")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty, "City")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, "State")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ZIP", V.Local.sProperty, "Zip")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, "Part")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, "Description")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "LIST_INFO", V.Local.sProperty, "List Details")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, "Qty")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, "UM")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, "Weight")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "DELETE_LINE", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("HeaderHAlignment")
V.Local.sDefault.Set("Left")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "STOP_NO", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_1", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_2", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_3", V.Local.sProperty,V.Local.sDefault)
'Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_4", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_5", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ZIP", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "LIST_INFO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "DELETE_LINE", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("HeaderFontBold")
V.Local.sDefault.Set("True")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "STOP_NO", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_1", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_2", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_3", V.Local.sProperty,V.Local.sDefault)
'Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_4", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_5", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ZIP", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "LIST_INFO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "DELETE_LINE", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("AllowEdit")
V.Local.sDefault.Set("False")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "STOP_NO", V.Local.sProperty,True)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_1", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_2", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_3", V.Local.sProperty,V.Local.sDefault)
'Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_4", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_5", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ZIP", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "LIST_INFO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "DELETE_LINE", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("ReadOnly")
V.Local.sDefault.Set("True")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "STOP_NO", V.Local.sProperty,False)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_1", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_2", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_3", V.Local.sProperty,V.Local.sDefault)
'Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_4", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_5", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ZIP", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "LIST_INFO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "DELETE_LINE", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("MinWidth")
V.Local.sDefault.Set("150")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "STOP_NO", V.Local.sProperty,100)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, 95)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, 75)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, 75)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, 75)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, 65)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, 75)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_1", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_2", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_3", V.Local.sProperty,V.Local.sDefault)
'Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_4", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ADDRESS_5", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty,100)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, 55)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ZIP", V.Local.sProperty,65)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty,100)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "LIST_INFO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, 55)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, 55)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, 75)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "DELETE_LINE", V.Local.sProperty, 50)

V.Local.sProperty.Set("MaxWidth")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "DELETE_LINE", V.Local.sProperty, 50)

V.Local.sProperty.Set("SortOrder")
V.Local.sDefault.Set("Ascending")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "STOP_NO", V.Local.sProperty,V.Local.sDefault)


V.Local.sProperty.Set("CellBackColor")
V.Local.sDefault.Set("LightYellow")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "STOP_NO", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "DELETE_LINE", V.Local.sProperty, V.Local.sDefault)


Gui.f_Main.GsGcTruckBuild.ColumnEdit(V.Local.sGV, "DELETE_LINE", "EditorButton", "Delete")

Gui.f_Main.GsGcTruckBuild.AddStyleFormatCondition(V.Local.sGV, "OVERWT_FLAG", "OVERWTFLAG", "Equal", "True")
Gui.f_Main.GsGcTruckBuild.SetStyleFormatConditionProperty(V.Local.sGV, "OVERWT_FLAG", "OVERWTFLAG", "BackColor", "Orange")

'Format Child datatable
Gui.f_Main.GsGcTruckBuild.AddGridviewFromDatatable("gvNotes", "dtCurrentLoad$dtNotes")
V.Local.sGV.Set("gvNotes")
Gui.f_Main.GsGcTruckBuild.SetGridviewPrintOptions(V.Local.sGV, "printdetails", True)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "CUSTOMER", "Visible", False)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ORDER_NO", "Visible", False)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ORDER_LINE", "Visible", False)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ORDER_NOTES", "Visible", False)
'Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "PCK_NO", "Visible", False)

V.Local.sProperty.Set("Caption")
V.Local.sDefault.Set(" ")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "SHIPMENT_NOTES", V.Local.sProperty, "Shipment Notes")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ORDER_NOTES", V.Local.sProperty, "Order Notes")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "CUST_NOTES", V.Local.sProperty, "Customer Notes")

V.Local.sProperty.Set("HeaderBackColor")
V.Local.sDefault.Set("Green")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "CUST_NOTES", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ORDER_NOTES", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "SHIPMENT_NOTES", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("HeaderForeColor")
V.Local.sDefault.Set("White")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "CUST_NOTES", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ORDER_NOTES", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "SHIPMENT_NOTES", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("AllowEdit")
V.Local.sDefault.Set("False")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "CUST_NOTES", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ORDER_NOTES", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "SHIPMENT_NOTES", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("ReadOnly")
V.Local.sDefault.Set("True")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "CUST_NOTES", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ORDER_NOTES", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "SHIPMENT_NOTES", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("CellWordWrap")
V.Local.sDefault.Set("Wrap")
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "CUST_NOTES", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "ORDER_NOTES", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "SHIPMENT_NOTES", V.Local.sProperty, V.Local.sDefault)

'F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.RowCount--,>,-1)
	Gui.f_Main.GsGcTruckBuild.AddRelation("gvBuilder", "gvNotes", "CUSTOMER*!*ORDER_NO*!*ORDER_LINE", "CUSTOMER*!*ORDER_NO*!*ORDER_LINE", "Notes")
'	Gui.f_Main.GsGcTruckBuild.AddRelation("gvBuilder", "gvNotes", "CUSTOMER*!*ORDER_NO*!*ORDER_LINE*!*PCK_NO", "CUSTOMER*!*ORDER_NO*!*ORDER_LINE*!*PCK_NO", "NotesRel")
'F.Intrinsic.Control.EndIf

Gui.f_Main.GsGcTruckBuild.MainView("gvBuilder")


F.Intrinsic.Control.For(V.Local.iCnt, 0, V.DataTable.dtCurrentLoad.RowCount--, 1)
	Gui.f_Main.GsGcTruckBuild.ExpandMasterRow("gvBuilder", V.Local.iCnt)
	
F.Intrinsic.Control.Next(V.Local.iCnt)

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.FormatBuilderGrid.End

Program.Sub.FormatInProcessGrid.Start
F.Intrinsic.Control.Try
V.Local.iCnt.Declare(Long)
V.Local.sDefault.Declare(String)
V.Local.sGV.Declare(String)
V.Local.sProperty.Declare(String)

Gui.f_Main.GsGcInProcess.AddGridviewFromDatatable("gvInProcess", "dtInProcess")
V.Local.sGV.Set("gvInProcess")

'set gridview properties
Gui.f_Main.GsGcInProcess.SetGridviewProperty(V.Local.sGV, "AllowSort", False)
Gui.f_Main.GsGcInProcess.SetGridviewProperty(V.Local.sGV, "AllowFilter", False)
Gui.f_Main.GsGcInProcess.SetGridviewProperty(V.Local.sGV, "OptionsViewShowGroupPanel", False)
Gui.f_Main.GsGcInProcess.SetGridviewProperty(V.Local.sGV, "OptionsViewColumnAutoWidth", False)
Gui.f_Main.GsGcInProcess.SetGridviewProperty(V.Local.sGV, "MultiSelect", False)
Gui.f_Main.GsGcInProcess.SetGridviewProperty(V.Local.sGV, "ShowDetailTabs", True)


V.Local.sProperty.Set("Visible")
V.Local.sDefault.Set("False")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)

'set properites for the columns
V.Local.sProperty.Set("Caption")
V.Local.sDefault.Set(" ")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "STOP_NO", V.Local.sProperty, "Stop Number")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "TRUCK_NO", V.Local.sProperty, "Truck No")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "LOAD_NO", V.Local.sProperty, "Load No")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "SHIP_DATE", V.Local.sProperty, "Ship Date")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, "Packing List")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, "Order")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, "Order Line")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, "Customer")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, "Customer Name")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, "Zone")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, "Zone Seq")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_1", V.Local.sProperty, "Address 1")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_2", V.Local.sProperty, "Address 2")
'Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_3", V.Local.sProperty, "Address 3")
'Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_4", V.Local.sProperty, "Address 4")
'Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_5", V.Local.sProperty, "Address 5")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty, "City")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, "State")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ZIP", V.Local.sProperty, "Zip")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, "Part")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, "Description")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "LIST_INFO", V.Local.sProperty, "List Details")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, "Qty")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, "UM")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, "Weight")

V.Local.sProperty.Set("HeaderHAlignment")
V.Local.sDefault.Set("Left")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "STOP_NO", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "TRUCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "LOAD_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "SHIP_DATE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_1", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_2", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_3", V.Local.sProperty,V.Local.sDefault)
'Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_4", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_5", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ZIP", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "LIST_INFO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("HeaderFontBold")
V.Local.sDefault.Set("True")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "STOP_NO", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "TRUCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "LOAD_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "SHIP_DATE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_1", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_2", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_3", V.Local.sProperty,V.Local.sDefault)
'Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_4", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_5", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ZIP", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "LIST_INFO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("AllowEdit")
V.Local.sDefault.Set("False")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "STOP_NO", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "TRUCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "LOAD_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "SHIP_DATE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_1", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_2", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_3", V.Local.sProperty,V.Local.sDefault)
'Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_4", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_5", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ZIP", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "LIST_INFO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("ReadOnly")
V.Local.sDefault.Set("True")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "STOP_NO", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "TRUCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "LOAD_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "SHIP_DATE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_1", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_2", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_3", V.Local.sProperty,V.Local.sDefault)
'Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_4", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_5", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ZIP", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "LIST_INFO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("MinWidth")
V.Local.sDefault.Set("150")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "STOP_NO", V.Local.sProperty,75)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "TRUCK_NO", V.Local.sProperty, 75)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "LOAD_NO", V.Local.sProperty, 75)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "SHIP_DATE", V.Local.sProperty, 75)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, 95)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, 75)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, 75)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, 75)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, 65)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, 75)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_1", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_2", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_3", V.Local.sProperty,V.Local.sDefault)
'Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_4", V.Local.sProperty, V.Local.sDefault)
'Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ADDRESS_5", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty,100)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, 45)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ZIP", V.Local.sProperty,65)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty,100)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "LIST_INFO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, 55)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, 55)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, 75)

V.Local.sProperty.Set("DisplayCustomDatetime")
V.Local.sDefault.Set("d")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "SHIP_DATE", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("SortOrder")
V.Local.sDefault.Set("Ascending")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "STOP_NO", V.Local.sProperty,V.Local.sDefault)

V.Local.sProperty.Set("GroupIndex")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "LOAD_NO", V.Local.sProperty, 0)


'Format Child datatable
Gui.f_Main.GsGcInProcess.AddGridviewFromDatatable("gvInProcessNotes", "dtInProcess$dtInProcessNotes")
V.Local.sGV.Set("gvInProcessNotes")
Gui.f_Main.GsGcInProcess.SetGridviewPrintOptions(V.Local.sGV, "printdetails", True)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "CUSTOMER", "Visible", False)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ORDER_NO", "Visible", False)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ORDER_LINE", "Visible", False)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ORDER_NOTES", "Visible", False)
'Gui.f_Main.GsGcTruckBuild.SetColumnProperty(V.Local.sGV, "PCK_NO", "Visible", False)

V.Local.sProperty.Set("Caption")
V.Local.sDefault.Set(" ")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "SHIPMENT_NOTES", V.Local.sProperty, "Shipment Notes")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "CUST_NOTES", V.Local.sProperty, "Customer Notes")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ORDER_NOTES", V.Local.sProperty, "Order Notes")

V.Local.sProperty.Set("HeaderBackColor")
V.Local.sDefault.Set("Green")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "CUST_NOTES", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ORDER_NOTES", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "SHIPMENT_NOTES", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("HeaderForeColor")
V.Local.sDefault.Set("White")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "CUST_NOTES", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ORDER_NOTES", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "SHIPMENT_NOTES", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("AllowEdit")
V.Local.sDefault.Set("False")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "CUST_NOTES", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ORDER_NOTES", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "SHIPMENT_NOTES", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("ReadOnly")
V.Local.sDefault.Set("True")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "CUST_NOTES", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ORDER_NOTES", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "SHIPMENT_NOTES", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("CellWordWrap")
V.Local.sDefault.Set("Wrap")
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "CUST_NOTES", V.Local.sProperty,V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "ORDER_NOTES", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcInProcess.SetColumnProperty(V.Local.sGV, "SHIPMENT_NOTES", V.Local.sProperty, V.Local.sDefault)


F.Data.DataTable.AddRelation("dtInProcess", "CUSTOMER*!*ORDER_NO*!*ORDER_LINE", "dtInProcess$dtInProcessNotes", "CUSTOMER*!*ORDER_NO*!*ORDER_LINE", "Notes")
F.Intrinsic.Control.If(V.DataTable.dtInProcess.RowCount--,>,-1)
	F.Data.DataTable.AcceptChanges("dtInProcess")
'	Gui.f_Main.GsGcInProcess.AddRelation("gvInProcess","gvInProcessNotes",  "CUSTOMER*!*ORDER_NO*!*ORDER_LINE", "CUSTOMER*!*ORDER_NO*!*ORDER_LINE", "NotesRelInProcess")
	F.Intrinsic.Control.CallSub(GetNotes, "DATATABLE", "dtInProcess", "CHILD_DATATABLE", "dtInProcess$dtInProcessNotes")

F.Intrinsic.Control.EndIf

Gui.f_Main.GsGcInProcess.MainView("gvInProcess")

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.FormatInProcessGrid.End

Program.Sub.SetContextMenu.Start
F.Intrinsic.Control.Try

Gui.f_Main..ContextMenuCreate("ctxMove")
Gui.f_Main.GsGcNoLoad.ContextMenuAttach("ctxMove")
Gui.f_Main..ContextMenuAddItem("ctxMove", "MoveSelected", 0, "Move Selected Rows to Truck Load")
Gui.f_Main..ContextMenuAddItem("ctxMove", "MoveZone",0, "Move Entire Zone to Truck Load")
Gui.f_Main..ContextMenuSetItemEventHandler("ctxMove", "MoveSelected", "MenuClickMoveSelected")
Gui.f_Main..ContextMenuSetItemEventHandler("ctxMove", "MoveZone", "MenuClickMoveZone")

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.SetContextMenu.End

Program.Sub.MenuClickMoveSelected.Start
F.Intrinsic.Control.Try
V.Local.iCnt.Declare(Long)
V.Local.iCnt2.Declare(Long)
V.Local.iRet.Declare(Long)
V.Local.iRow.Declare(Long)
V.Local.sZone.Declare(String)
V.Local.sSelRow.Declare(String)
V.Local.fWeight.Declare(Float)
V.Local.fRemWt.Declare(Float)
V.Local.fLength.Declare(Float)
V.Local.sSQL.Declare(String)
V.Local.sUser5.Declare(String)
V.Local.iStopNo.Declare(Long)

'check to make sure the user has entered all the required information before they can add records to the truck
F.Intrinsic.Control.If(V.Screen.f_Main!txtTruckNo.Text,<>,"", "AND", V.Screen.f_Main!txtLoadNo.Text,<>,"")
	Gui.f_Main.GsGcNoLoad.GetSelectedRows("gvNoLoad", V.Local.sSelRow)
	F.Intrinsic.Control.If(V.Local.sSelRow.Trim,<>,"")
		'split the row values 
		F.Intrinsic.String.Split(V.Local.sSelRow, "*!*", V.Local.sSelRow)
		'loop through the rows to get the information needed for moving to the truck load
		F.Intrinsic.Control.For(V.Local.iCnt, 0, V.Local.sSelRow.UBound,1)
			V.Local.iRow.Set(V.Local.sSelRow(V.Local.iCnt).Long)
			'pull the remaining weight from the textbox on the screen
			V.Local.fRemWt.Set(V.Screen.f_Main!txtRemWt.Text)
			
			'pull the weight value for the line selected
			V.Local.fWeight.Set(V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
			
			'subtract the weight from the remaining weight. If the value is greater than 0, allow the record to be added. If it's not, inform the user that the weight being added exceeds the remaining weight for the truck
			F.Intrinsic.Math.Sub(V.Local.fRemWt, V.Local.fWeight, V.Local.fRemWt)
			
			F.Intrinsic.Control.If(V.Local.fRemWt,>=,0)
				'pull user 5 field from order lines to see if it needs to be in a 30+ foot truck
				F.Intrinsic.String.Build("SELECT USER_5 FROM V_ORDER_LINES WHERE ORDER_NO = '{0}' AND RECORD_NO = '{1}'", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValTrim, V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, V.Local.sSQL)
				F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Local.sUser5)
				F.Intrinsic.Control.If(V.Local.sUser5.Trim,=,"Y")
					V.Local.fLength.Set(V.Screen.f_Main!txtLength.Text)
					F.Intrinsic.Control.If(V.Local.fLength,>=,30)
						'if it requires a 30+ foot truck, check to make sure the truck is 30 feet
						
						'check to see if there are any rows, if there aren't set the stop number to 1
						F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.RowCount--,<,0)
							'Add record to the current builder gridview
						
							'F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", 1, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "ADDRESS_3", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_3!FieldValtrim, "ADDRESS_4", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
							
							F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", 1, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
							
							'remove from current grid
							F.Data.DataTable.DeleteRow("dtNoLoad", V.Local.iRow)
				
							Gui.f_Main.txtRemWt.Text(V.Local.fRemWt)
						f.Intrinsic.Control.Else
							V.Local.iStopNo.Set(V.DataTable.dtCurrentLoad(V.DataTable.dtCurrentLoad.RowCount--).STOP_NO!FieldVal)
							F.Intrinsic.Math.Add(V.Local.iStopNo, 1, V.Local.iStopNo)
							
							F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", V.Local.iStopNo,"PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
							
						'	F.Data.DataTable.AddRow("dtCurrentLoad", "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "ADDRESS_3", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_3!FieldValtrim, "ADDRESS_4", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
						
							'remove from current grid
							F.Data.DataTable.DeleteRow("dtNoLoad", V.Local.iRow)
							
							F.Data.DataTable.AcceptChanges("dtCurrentLoad")
				
							Gui.f_Main.txtRemWt.Text(V.Local.fRemWt)
							
							'create a dataview with the zones 
							'order by the zone, zone seq
							'reorder the stops based on the zone, zone sequence order
						
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.Else
						F.Intrinsic.UI.Msgbox("The Order Line requirs a 30+ Foot Truck for shipment. It cannot be added to the Truck Load", "Warning")
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.ElseIf(V.Local.sUser5.Trim,=,"N", "OR", V.Local.sUser5.Trim,=,"")
					'check to see if there are any rows, if there aren't set the stop number to 1
					F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.RowCount--,<,0)
						'Add record to the current builder gridview
						
						F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", 1, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
						
					'	F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", 1, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "ADDRESS_3", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_3!FieldValtrim, "ADDRESS_4", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
						
						'remove from current grid
						F.Data.DataTable.DeleteRow("dtNoLoad", V.Local.iRow)
				
						Gui.f_Main.txtRemWt.Text(V.Local.fRemWt)
					f.Intrinsic.Control.Else
						
						V.Local.iStopNo.Set(V.DataTable.dtCurrentLoad(V.DataTable.dtCurrentLoad.RowCount--).STOP_NO!FieldVal)
						F.Intrinsic.Math.Add(V.Local.iStopNo, 1, V.Local.iStopNo)
						
						F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", v.Local.iStopNo,"PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim,  "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
						
						'F.Data.DataTable.AddRow("dtCurrentLoad", "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "ADDRESS_3", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_3!FieldValtrim, "ADDRESS_4", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
						
						'remove from current grid
						F.Data.DataTable.DeleteRow("dtNoLoad", V.Local.iRow)
						
						F.Data.DataTable.AcceptChanges("dtCurrentLoad")
				
						Gui.f_Main.txtRemWt.Text(V.Local.fRemWt)
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
				
				F.Data.DataTable.AcceptChanges("dtCurrentLoad")
				
				
				F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.RowCount--,<,0)
					'create a dataview with the zones 
					'order by the zone, zone seq
					'reorder the stops based on the zone, zone sequence order
					F.Intrinsic.Control.If(V.DataView.dtCurrentLoad!dvTempStops.Exists,=,True)
						F.Data.DataView.Close("dtCurrentLoad", "dvTempStops")
					F.Intrinsic.Control.EndIf
					
					F.Data.DataView.Create("dtCurrentLoad", "dvTempStops", 22, "", "[ZONE] ASC, [ZONE_SEQ] ASC")
					
					F.Intrinsic.Control.If(V.DataTable.dtTempCurrentLoad.Exists,=,True)
						F.Data.DataTable.Close("dtTempCurrentLoad")
					F.Intrinsic.Control.EndIf
					
					F.Data.DataView.ToDataTable("dtCurrentLoad", "dvTempStops", "dtTempCurrentLoad")
					F.Data.DataView.Close("dtCurrentLoad", "dvTempStops")
					'loop through and set the stop numbers
					F.Intrinsic.Control.For(V.Local.iCnt2, 0, V.DataTable.dtTempCurrentLoad.RowCount--,1)
						F.Intrinsic.Math.Add(V.Local.iCnt2, 1, V.Local.iRow)
						F.Data.DataTable.SetValue("dtTempCurrentLoad", V.Local.iCnt2, "STOP_NO", v.Local.iRow)
					F.Intrinsic.Control.Next(V.Local.iCnt2)
					
					F.Data.DataTable.DeleteRow("dtCurrentLoad")
					'merge the temp datatable into the current load
					F.Data.DataTable.Merge("dtTempCurrentLoad", "dtCurrentLoad", True, 1)
					
					F.Data.DataTable.Close("dtTempCurrentLoad")
				F.Intrinsic.Control.EndIf
				
					
			F.Intrinsic.Control.Else
				F.Intrinsic.UI.Msgbox("The line you are trying to add exceeds the remaining weight for the Truck. Would you like to override the Weight and proceed with adding the line?", "Warning", 4, V.Local.iRet)
				'check to see if the user replied with yes or no
				F.Intrinsic.Control.If(V.Local.iRet,=,6)
				
					'pull user 5 field from order lines to see if it needs to be in a 30+ foot truck
					F.Intrinsic.String.Build("SELECT USER_5 FROM V_ORDER_LINES WHERE ORDER_NO = '{0}' AND RECORD_NO = '{1}'", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValTrim, V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, V.Local.sSQL)
					F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Local.sUser5)
					F.Intrinsic.Control.If(V.Local.sUser5.Trim,=,"Y")
						V.Local.fLength.Set(V.Screen.f_Main!txtLength.Text)
						F.Intrinsic.Control.If(V.Local.fLength,>=,30)
							'if it requires a 30+ foot truck, check to make sure the truck is 30 feet
							
							'check to see if there are any rows, if there aren't set the stop number to 1
							F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.RowCount--,<,0)
								'Add record to the current builder gridview
							
								F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", 1, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat, "OVERWT_FLAG", True)
								
								'F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", 1, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "ADDRESS_3", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_3!FieldValtrim, "ADDRESS_4", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat, "OVERWT_FLAG", True)
								
								'remove from current grid
								F.Data.DataTable.DeleteRow("dtNoLoad", V.Local.iRow)
					
								Gui.f_Main.txtRemWt.Text(V.Local.fRemWt)
							f.Intrinsic.Control.Else
								V.Local.iStopNo.Set(V.DataTable.dtCurrentLoad(V.DataTable.dtCurrentLoad.RowCount--).STOP_NO!FieldVal)
								F.Intrinsic.Math.Add(V.Local.iStopNo, 1, V.Local.iStopNo)
								
								F.Data.DataTable.AddRow("dtCurrentLoad","STOP_NO", V.Local.iStopNo, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat, "OVERWT_FLAG", True)
								
								'F.Data.DataTable.AddRow("dtCurrentLoad", "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "ADDRESS_3", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_3!FieldValtrim, "ADDRESS_4", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat, "OVERWT_FLAG", True)
							
								'remove from current grid
								F.Data.DataTable.DeleteRow("dtNoLoad", V.Local.iRow)
					
								Gui.f_Main.txtRemWt.Text(V.Local.fRemWt)
								
								F.Data.DataTable.AcceptChanges("dtCurrentLoad")
								
								'create a dataview with the zones 
								'order by the zone, zone seq
								'reorder the stops based on the zone, zone sequence order
							
							F.Intrinsic.Control.EndIf
						F.Intrinsic.Control.Else
							F.Intrinsic.UI.Msgbox("The Order Line requirs a 30+ Foot Truck for shipment. It cannot be added to the Truck Load", "Warning")
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.ElseIf(V.Local.sUser5.Trim,=,"N", "OR", V.Local.sUser5.Trim,=,"")
						'check to see if there are any rows, if there aren't set the stop number to 1
						F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.RowCount--,<,0)
							'Add record to the current builder gridview
							
							F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", 1, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat, "OVERWT_FLAG", True)
							'F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", 1, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "ADDRESS_3", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_3!FieldValtrim, "ADDRESS_4", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat, "OVERWT_FLAG", True)
							
							'remove from current grid
							F.Data.DataTable.DeleteRow("dtNoLoad", V.Local.iRow)
					
							Gui.f_Main.txtRemWt.Text(V.Local.fRemWt)
						f.Intrinsic.Control.Else
							V.Local.iStopNo.Set(V.DataTable.dtCurrentLoad(V.DataTable.dtCurrentLoad.RowCount--).STOP_NO!FieldVal)
							F.Intrinsic.Math.Add(V.Local.iStopNo, 1, V.Local.iStopNo)
						
							F.Data.DataTable.AddRow("dtCurrentLoad","STOP_NO", V.Local.iStopNo, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat, "OVERWT_FLAG", True)
							'F.Data.DataTable.AddRow("dtCurrentLoad", "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "ADDRESS_3", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_3!FieldValtrim, "ADDRESS_4", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat, "OVERWT_FLAG", True)
							
							'remove from current grid
							F.Data.DataTable.DeleteRow("dtNoLoad", V.Local.iRow)
							
							F.Data.DataTable.AcceptChanges("dtCurrentLoad")
							
							Gui.f_Main.txtRemWt.Text(V.Local.fRemWt)
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
					
					F.Data.DataTable.AcceptChanges("dtCurrentLoad")
						
					
					F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.RowCount--,<,0)
						'create a dataview with the zones 
						'order by the zone, zone seq
						'reorder the stops based on the zone, zone sequence order
						F.Intrinsic.Control.If(V.DataView.dtCurrentLoad!dvTempStops.Exists,=,True)
							F.Data.DataView.Close("dtCurrentLoad", "dvTempStops")
						F.Intrinsic.Control.EndIf
						
						F.Data.DataView.Create("dtCurrentLoad", "dvTempStops", 22, "", "[ZONE] ASC, [ZONE_SEQ] ASC")
						
						F.Intrinsic.Control.If(V.DataTable.dtTempCurrentLoad.Exists,=,True)
							F.Data.DataTable.Close("dtTempCurrentLoad")
						F.Intrinsic.Control.EndIf
						
						F.Data.DataView.ToDataTable("dtCurrentLoad", "dvTempStops", "dtTempCurrentLoad")
						F.Data.DataView.Close("dtCurrentLoad", "dvTempStops")
						'loop through and set the stop numbers
						F.Intrinsic.Control.For(V.Local.iCnt2, 0, V.DataTable.dtTempCurrentLoad.RowCount--,1)
							F.Intrinsic.Math.Add(V.Local.iCnt2, 1, V.Local.iRow)
							F.Data.DataTable.SetValue("dtTempCurrentLoad", V.Local.iCnt2, "STOP_NO", v.Local.iRow)
						F.Intrinsic.Control.Next(V.Local.iCnt2)
						
						F.Data.DataTable.DeleteRow("dtCurrentLoad")
						'merge the temp datatable into the current load
						F.Data.DataTable.Merge("dtTempCurrentLoad", "dtCurrentLoad", True, 1)
						
						F.Data.DataTable.Close("dtTempCurrentLoad")
						
						F.Data.DataTable.AcceptChanges("dtCurrentLoad")
					F.Intrinsic.Control.EndIf
					
				
					'highlight the line that was added with red so the user knows it's what caused the truckload to be overweight
				'	Gui.f_Main.GsGcTruckBuild.AddStyleFormatCondition("gvBuilder", "OVERWT_FLAG", "OVERWTFLAG", "Equal", "True")
					Gui.f_Main.GsGcTruckBuild.SetStyleFormatConditionProperty("gvBuilder", "OVERWT_FLAG", "OVERWTFLAG", "ApplyToRow", True)
					
				F.Intrinsic.Control.ElseIf(V.Local.iRet,=,7)
					'user clicked 'No'
					F.Intrinsic.Control.Next(V.Local.iCnt)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.Next(V.Local.iCnt)
		
			
		F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.RowCount--,>,-1)
			F.Intrinsic.Control.CallSub(GetNotes, "DATATABLE", "dtCurrentLoad", "CHILD_DATATABLE", "dtCurrentLoad$dtNotes")

		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	
F.Intrinsic.Control.ElseIf(V.Screen.f_Main!txtTruckNo.Text,=,"", "AND", V.Screen.f_Main!txtLoadNo.Text,=,"")
	F.Intrinsic.UI.Msgbox("You must select a Truck Number and create a New Load before you can continue.", "Required Fields")
F.Intrinsic.Control.ElseIf(V.Screen.f_Main!txtTruckNo.Text,<>,"", "AND", V.Screen.f_Main!txtLoadNo.Text,=,"")
	F.Intrinsic.UI.Msgbox("You must create a New Load before you can continue.", "Required Field")
F.Intrinsic.Control.ElseIf(V.Screen.f_Main!txtTruckNo.Text,=,"", "AND", V.Screen.f_Main!txtLoadNo.Text,<>,"")
	F.Intrinsic.UI.Msgbox("You must select a Truck Number before you can continue.", "Required Field")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.MenuClickMoveSelected.End

Program.Sub.MenuClickMoveZone.Start
F.Intrinsic.Control.Try
V.Local.iCnt.Declare(Long)
V.Local.iCnt2.Declare(Long)
V.Local.iCnt3.Declare(Long)
V.Local.iRow.Declare(Long)
V.Local.iRow2.Declare(Long)
V.Local.IZone.Declare(String)
V.Local.sSelRow.Declare(String)
V.Local.sFilter.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sUser5.Declare(String)
V.Local.fRemWt.Declare(Float)
V.Local.fWeight.Declare(Float)
V.Local.fLength.Declare(Float)
v.Local.iRet.Declare(Long)
V.Local.iStopNo.Declare(Long)

'check to make sure the user has entered all the required information before they can add records to the truck
F.Intrinsic.Control.If(V.Screen.f_Main!txtTruckNo.Text,<>,"", "AND", V.Screen.f_Main!txtLoadNo.Text,<>,"")
	Gui.f_Main.GsGcNoLoad.GetSelectedRows("gvNoLoad", V.Local.sSelRow)
	F.Intrinsic.Control.If(V.Local.sSelRow.Trim,<>,"")
		'split the row values 
		F.Intrinsic.String.Split(V.Local.sSelRow, "*!*", V.Local.sSelRow)
		'loop through the rows to get the information needed for moving to the truck load
		F.Intrinsic.Control.For(V.Local.iCnt, 0, V.Local.sSelRow.UBound,1)
			V.Local.iRow2.Set(V.Local.sSelRow(V.Local.iCnt).Long)
			'get the zone number
			v.Local.IZone.Set(v.DataTable.dtNoLoad(V.Local.iRow2).ZONE!FieldVal)
			
			F.Intrinsic.String.Build("[ZONE] = '{0}'", V.Local.IZone, V.Local.sFilter)
			'select all the rows in the no load grid that match the zone 
			F.Data.DataTable.Select("dtNoLoad", V.Local.sFilter, V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"***NORETURN***")
				F.Intrinsic.String.Split(V.Local.sRet, "*!*", V.Local.sRet)
				'loop through the rows that match the zone the user selected
				F.Intrinsic.Control.For(V.Local.iCnt2,0, V.Local.sRet.UBound,1)
					V.Local.iRow.Set(V.Local.sRet(V.Local.iCnt2).Long)
					V.Local.fRemWt.Set(V.Screen.f_Main!txtRemWt.Text)
			
					'pull the weight value for the line selected
					V.Local.fWeight.Set(V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
					
					'subtract the weight from the remaining weight. If the value is greater than 0, allow the record to be added. If it's not, inform the user that the weight being added exceeds the remaining weight for the truck
					F.Intrinsic.Math.Sub(V.Local.fRemWt, V.Local.fWeight, V.Local.fRemWt)
					
					F.Intrinsic.Control.If(V.Local.fRemWt,>=,0)
						'pull user 5 field from order lines to see if it needs to be in a 30+ foot truck
						F.Intrinsic.String.Build("SELECT USER_5 FROM V_ORDER_LINES WHERE ORDER_NO = '{0}' AND RECORD_NO = '{1}'", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValTrim, V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, V.Local.sSQL)
						F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Local.sUser5)
						F.Intrinsic.Control.If(V.Local.sUser5.Trim,=,"Y")
							V.Local.fLength.Set(V.Screen.f_Main!txtLength.Text)
							F.Intrinsic.Control.If(V.Local.fLength,>=,30)
								'if it requires a 30+ foot truck, check to make sure the truck is 30 feet
								
								'check to see if there are any rows, if there aren't set the stop number to 1
								F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.RowCount--,<,0)
									'Add record to the current builder gridview
									
									F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", 1, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
									
									'F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", 1, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "ADDRESS_3", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_3!FieldValtrim, "ADDRESS_4", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
									
									'remove from current grid
									F.Data.DataTable.DeleteRow("dtNoLoad", V.Local.iRow)
									
								'	
						
									Gui.f_Main.txtRemWt.Text(V.Local.fRemWt)
								f.Intrinsic.Control.Else
									
									V.Local.iStopNo.Set(V.DataTable.dtCurrentLoad(V.DataTable.dtCurrentLoad.RowCount--).STOP_NO!FieldVal)
									F.Intrinsic.Math.Add(V.Local.iStopNo, 1, V.Local.iStopNo)
									F.Data.DataTable.AddRow("dtCurrentLoad","STOP_NO", V.Local.iStopNo, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
									
									'F.Data.DataTable.AddRow("dtCurrentLoad", "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "ADDRESS_3", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_3!FieldValtrim, "ADDRESS_4", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
								
									'remove from current grid
									F.Data.DataTable.DeleteRow("dtNoLoad", V.Local.iRow)
									
					
						
									Gui.f_Main.txtRemWt.Text(V.Local.fRemWt)
									
									'create a dataview with the zones 
									'order by the zone, zone seq
									'reorder the stops based on the zone, zone sequence order
								
								F.Intrinsic.Control.EndIf
							F.Intrinsic.Control.Else
								F.Intrinsic.UI.Msgbox("The Order Line requirs a 30+ Foot Truck for shipment. It cannot be added to the Truck Load", "Warning")
							F.Intrinsic.Control.EndIf
						F.Intrinsic.Control.ElseIf(V.Local.sUser5.Trim,=,"N", "OR", V.Local.sUser5.Trim,=,"")
							'check to see if there are any rows, if there aren't set the stop number to 1
							F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.RowCount--,<,0)
								'Add record to the current builder gridview
								F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", 1, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim,  "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
								
								'F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", 1, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "ADDRESS_3", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_3!FieldValtrim, "ADDRESS_4", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
								
								'remove from current grid
								F.Data.DataTable.DeleteRow("dtNoLoad", V.Local.iRow)
				
						
								Gui.f_Main.txtRemWt.Text(V.Local.fRemWt)
							f.Intrinsic.Control.Else
								
								V.Local.iStopNo.Set(V.DataTable.dtCurrentLoad(V.DataTable.dtCurrentLoad.RowCount--).STOP_NO!FieldVal)
								F.Intrinsic.Math.Add(V.Local.iStopNo, 1, V.Local.iStopNo)
								F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", V.Local.iStopNo,"PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim,  "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
								
								'F.Data.DataTable.AddRow("dtCurrentLoad", "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "ADDRESS_3", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_3!FieldValtrim, "ADDRESS_4", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
								
								'remove from current grid
								F.Data.DataTable.DeleteRow("dtNoLoad", V.Local.iRow)
	
								Gui.f_Main.txtRemWt.Text(V.Local.fRemWt)
							F.Intrinsic.Control.EndIf
						F.Intrinsic.Control.EndIf
						
						F.Data.DataTable.AcceptChanges("dtCurrentLoad")
						
						'create a dataview with the zones 
						'order by the zone, zone seq
						'reorder the stops based on the zone, zone sequence order
'						F.Intrinsic.Control.If(V.DataView.dtCurrentLoad!dvTempStops.Exists,=,True)
'							F.Data.DataView.Close("dtCurrentLoad", "dvTempStops")
'						F.Intrinsic.Control.EndIf
'						
'						F.Data.DataView.Create("dtCurrentLoad", "dvTempStops", 22, "", "[ZONE] ASC, [ZONE_SEQ] ASC")
'						
'						F.Intrinsic.Control.If(V.DataTable.dtTempCurrentLoad.Exists,=,True)
'							F.Data.DataTable.Close("dtTempCurrentLoad")
'						F.Intrinsic.Control.EndIf
'						
'						F.Data.DataView.ToDataTable("dtCurrentLoad", "dvTempStops", "dtTempCurrentLoad")
'						F.Data.DataView.Close("dtCurrentLoad", "dvTempStops")
'						'loop through and set the stop numbers
'						F.Intrinsic.Control.For(V.Local.iCnt3, 0, V.DataTable.dtTempCurrentLoad.RowCount--,1)
'							F.Intrinsic.Math.Add(V.Local.iCnt3, 1, V.Local.iRow)
'							F.Data.DataTable.SetValue("dtTempCurrentLoad", V.Local.iCnt3, "STOP_NO", v.Local.iRow)
'						F.Intrinsic.Control.Next(V.Local.iCnt2)
'						
'						F.Data.DataTable.DeleteRow("dtCurrentLoad")
'						
'						'merge the temp datatable into the current load
'						F.Data.DataTable.Merge("dtTempCurrentLoad", "dtCurrentLoad", True, 1)
'						
'					'	F.Data.DataTable.Close("dtTempCurrentLoad")
							
					F.Intrinsic.Control.Else
						F.Intrinsic.UI.Msgbox("The line you are trying to add exceeds the remaining weight for the Truck. Would you like to override the Weight and proceed with adding the line?", "Warning", 4, V.Local.iRet)
						'check to see if the user replied with yes or no
						F.Intrinsic.Control.If(V.Local.iRet,=,6)
						
							'pull user 5 field from order lines to see if it needs to be in a 30+ foot truck
							F.Intrinsic.String.Build("SELECT USER_5 FROM V_ORDER_LINES WHERE ORDER_NO = '{0}' AND RECORD_NO = '{1}'", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValTrim, V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, V.Local.sSQL)
							F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Local.sUser5)
							F.Intrinsic.Control.If(V.Local.sUser5.Trim,=,"Y")
								V.Local.fLength.Set(V.Screen.f_Main!txtLength.Text)
								F.Intrinsic.Control.If(V.Local.fLength,>=,30)
									'if it requires a 30+ foot truck, check to make sure the truck is 30 feet
									
									'check to see if there are any rows, if there aren't set the stop number to 1
									F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.RowCount--,<,0)
										'Add record to the current builder gridview
										
										F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", 1, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat, "OVERWT_FLAG", True)
										
										'F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", 1, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "ADDRESS_3", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_3!FieldValtrim, "ADDRESS_4", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat, "OVERWT_FLAG", True)
										
										'remove from current grid
										F.Data.DataTable.DeleteRow("dtNoLoad", V.Local.iRow)

							
										Gui.f_Main.txtRemWt.Text(V.Local.fRemWt)
									f.Intrinsic.Control.Else
										
										V.Local.iStopNo.Set(V.DataTable.dtCurrentLoad(V.DataTable.dtCurrentLoad.RowCount--).STOP_NO!FieldVal)
										F.Intrinsic.Math.Add(V.Local.iStopNo, 1, V.Local.iStopNo)
										F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", V.Local.iStopNo,"PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim,  "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat, "OVERWT_FLAG", True)
										
										'F.Data.DataTable.AddRow("dtCurrentLoad", "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "ADDRESS_3", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_3!FieldValtrim, "ADDRESS_4", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat, "OVERWT_FLAG", True)
									
										'remove from current grid
										F.Data.DataTable.DeleteRow("dtNoLoad", V.Local.iRow)

							
										Gui.f_Main.txtRemWt.Text(V.Local.fRemWt)
										
										'create a dataview with the zones 
										'order by the zone, zone seq
										'reorder the stops based on the zone, zone sequence order
									
									F.Intrinsic.Control.EndIf
								F.Intrinsic.Control.Else
									F.Intrinsic.UI.Msgbox("The Order Line requirs a 30+ Foot Truck for shipment. It cannot be added to the Truck Load", "Warning")
								F.Intrinsic.Control.EndIf
							F.Intrinsic.Control.ElseIf(V.Local.sUser5.Trim,=,"N", "OR", V.Local.sUser5.Trim,=,"")
								'check to see if there are any rows, if there aren't set the stop number to 1
								F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.RowCount--,<,0)
									'Add record to the current builder gridview
									F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", 1, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim,  "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat, "OVERWT_FLAG", True)
									
									'F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", 1, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "ADDRESS_3", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_3!FieldValtrim, "ADDRESS_4", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat, "OVERWT_FLAG", True)
									
									'remove from current grid
									F.Data.DataTable.DeleteRow("dtNoLoad", V.Local.iRow)

							
									Gui.f_Main.txtRemWt.Text(V.Local.fRemWt)
								f.Intrinsic.Control.Else
									
									V.Local.iStopNo.Set(V.DataTable.dtCurrentLoad(V.DataTable.dtCurrentLoad.RowCount--).STOP_NO!FieldVal)
									F.Intrinsic.Math.Add(V.Local.iStopNo, 1, V.Local.iStopNo)
									
									F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", V.Local.iStopNo,"PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat, "OVERWT_FLAG", True)
									
									'F.Data.DataTable.AddRow("dtCurrentLoad", "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "ADDRESS_3", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_3!FieldValtrim, "ADDRESS_4", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat, "OVERWT_FLAG", True)
									
									'remove from current grid
									F.Data.DataTable.DeleteRow("dtNoLoad", V.Local.iRow)

							
									Gui.f_Main.txtRemWt.Text(V.Local.fRemWt)
								F.Intrinsic.Control.EndIf
							F.Intrinsic.Control.EndIf
							
							F.Data.DataTable.AcceptChanges("dtCurrentLoad")
								
						
						
							'highlight the line that was added with red so the user knows it's what caused the truckload to be overweight
						'	Gui.f_Main.GsGcTruckBuild.AddStyleFormatCondition("gvBuilder", "OVERWT_FLAG", "OVERWTFLAG", "Equal", "True")
							Gui.f_Main.GsGcTruckBuild.SetStyleFormatConditionProperty("gvBuilder", "OVERWT_FLAG", "OVERWTFLAG", "ApplyToRow", True)
							
						F.Intrinsic.Control.ElseIf(V.Local.iRet,=,7)
							'user clicked 'No'
							F.Intrinsic.Control.Next(V.Local.iCnt2)
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.Next(V.Local.iCnt2)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Next(V.Local.iCnt)
	
		'create a dataview with the zones 
		'order by the zone, zone seq
		'reorder the stops based on the zone, zone sequence order
		
		F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.RowCount--,<,0)
			F.Intrinsic.Control.If(V.DataView.dtCurrentLoad!dvTempStops.Exists,=,True)
				F.Data.DataView.Close("dtCurrentLoad", "dvTempStops")
			F.Intrinsic.Control.EndIf
								
			F.Data.DataView.Create("dtCurrentLoad", "dvTempStops", 22, "", "[ZONE] ASC, [ZONE_SEQ] ASC")
								
			F.Intrinsic.Control.If(V.DataTable.dtTempCurrentLoad.Exists,=,True)
				F.Data.DataTable.Close("dtTempCurrentLoad")
			F.Intrinsic.Control.EndIf
								
			F.Data.DataView.ToDataTable("dtCurrentLoad", "dvTempStops", "dtTempCurrentLoad")
			F.Data.DataView.Close("dtCurrentLoad", "dvTempStops")
			'loop through and set the stop numbers
			F.Intrinsic.Control.For(V.Local.iCnt3, 0, V.DataTable.dtTempCurrentLoad.RowCount--,1)
				F.Intrinsic.Math.Add(V.Local.iCnt3, 1, V.Local.iRow)
				F.Data.DataTable.SetValue("dtTempCurrentLoad", V.Local.iCnt3, "STOP_NO", v.Local.iRow)
			F.Intrinsic.Control.Next(V.Local.iCnt3)
								
			F.Data.DataTable.DeleteRow("dtCurrentLoad")
			'merge the temp datatable into the current load
			F.Data.DataTable.Merge("dtTempCurrentLoad", "dtCurrentLoad", True, 1)
							
			F.Data.DataTable.Close("dtTempCurrentLoad")
							
			F.Data.DataTable.AcceptChanges("dtCurrentLoad")
		F.Intrinsic.Control.EndIf
		
		
		F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.RowCount--,>,-1)
			F.Intrinsic.Control.CallSub(GetNotes, "DATATABLE", "dtCurrentLoad", "CHILD_DATATABLE", "dtCurrentLoad$dtNotes")

		F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ElseIf(V.Screen.f_Main!txtTruckNo.Text,=,"", "AND", V.Screen.f_Main!txtLoadNo.Text,=,"")
	F.Intrinsic.UI.Msgbox("You must select a Truck Number and create a New Load before you can continue.", "Required Fields")
F.Intrinsic.Control.ElseIf(V.Screen.f_Main!txtTruckNo.Text,<>,"", "AND", V.Screen.f_Main!txtLoadNo.Text,=,"")
	F.Intrinsic.UI.Msgbox("You must create a New Load before you can continue.", "Required Field")
F.Intrinsic.Control.ElseIf(V.Screen.f_Main!txtTruckNo.Text,=,"", "AND", V.Screen.f_Main!txtLoadNo.Text,<>,"")
	F.Intrinsic.UI.Msgbox("You must select a Truck Number before you can continue.", "Required Field")
F.Intrinsic.Control.EndIf

f.Data.DataTable.AcceptChanges("dtNoLoad")
F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.MenuClickMoveZone.End

Program.Sub.cmdTrckBrw_Click.Start
F.Intrinsic.Control.Try
V.Local.sRet.Declare(String)
V.Local.sTruckNo.Declare(String)

'build truck browser using the TRUCK_TYPE table or the carrier table
F.Intrinsic.UI.Browser("Select a Truck", "con", "SELECT TYPE_ID, RTRIM(LTRIM(DESCRIPTION)) AS DESCRIPTION, LENGTH, WIDTH, LENGTH_INCHES, WIDTH_INCHES, MAX_WEIGHT_LBS FROM TRUCK_TYPE ORDER BY TYPE_ID", "Truck ID*!*Description*!*Legnth*!*Width*!*Length in Inches*!*Width in Inches*!*Max Weight LBS", "500*!*1000*!*500*!*500*!*800*!*750*!*750", V.Local.sRet)
F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"***CANCEL***")
	F.Intrinsic.String.Split(V.Local.sRet, "*!*", V.Local.sRet)
	'set the truck number variable
	V.Local.sTruckNo.Set(V.Local.sRet(0).Trim)
	
	'set the value in the textbox
	Gui.f_Main.txtTruckNo.Text(V.Local.sTruckNo.Trim)
	
	'set the length, width and weight textboxes
	Gui.f_Main.txtLength.Text(V.Local.sRet(2).Float)
	Gui.f_Main.txtWidth.Text(V.Local.sRet(3).Float)
	Gui.f_Main.txtRemWt.Text(V.Local.sRet(6).Float)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.cmdTrckBrw_Click.End

Program.Sub.cmdDriverBrws_Click.Start
F.Intrinsic.Control.Try
V.Local.sRet.Declare(String)
V.Local.sLoader.Declare(String)
V.Local.sDriver.Declare(String)

'build driver browser using the employee master where dept_id = 'DRIV'
F.Intrinsic.UI.Browser("Select a Driver", "con","SELECT EMPLOYEE, UCASE(NAME) AS NAME, DEPT_EMPLOYEE, COMMENTS_3  FROM V_EMPLOYEE_MSTR WHERE DEPT_EMPLOYEE = 'DRIV' OR (COMMENTS_3 = 'CDL:LDR' OR COMMENTS_3 = 'CDL') ORDER BY COMMENTS_3 DESC, EMPLOYEE", "Employee No*!*Employee Name*!*Department*!*CDL License", "750*!*1500*!*750*!*750", V.Local.sRet)
F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"***CANCEL***")
	F.Intrinsic.String.Split(V.Local.sRet, "*!*", V.Local.sRet)
	V.Local.sDriver.Set(V.Local.sRet(1).Trim)
	
	'if they want the user name displayed as First Name MI, Last Name, we can transform that here
	'set the driver text box
	Gui.f_Main.txtDriver.Text(V.Local.sDriver.Trim)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.cmdDriverBrws_Click.End

Program.Sub.cmdLoadBrws_Click.Start
F.Intrinsic.Control.Try
V.Local.sRet.Declare(String)
V.Local.sLoader.Declare(String)

'build driver browser using the employee master where dept_id = 'DRIV'
F.Intrinsic.UI.Browser("Select a Loader", "con","SELECT EMPLOYEE, UCASE(NAME) AS NAME, DEPT_EMPLOYEE, COMMENTS_3  FROM V_EMPLOYEE_MSTR WHERE DEPT_EMPLOYEE = 'WHSE' OR COMMENTS_3 = 'CLD:LDR' ORDER BY COMMENTS_3 DESC, EMPLOYEE", "Employee No*!*Employee Name*!*Department*!*CDL License", "750*!*1500*!*750*!*750", V.Local.sRet)
F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"***CANCEL***")
	F.Intrinsic.String.Split(V.Local.sRet, "*!*", V.Local.sRet)
	V.Local.sLoader.Set(V.Local.sRet(1).Trim)
	
	'if they want the user name displayed as First Name MI, Last Name, we can transform that here
	'set the driver text box
	Gui.f_Main.txtLoader.Text(V.Local.sLoader.Trim)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.cmdLoadBrws_Click.End

Program.Sub.GsGcNoLoad_RowCellClick.Start
F.Intrinsic.Control.Try
V.Local.iCnt.Declare(Long)
V.Local.iRet.Declare(Long)
V.Local.fRemWt.Declare(Float)
V.Local.fQty.Declare(Float)
V.Local.fWeight.Declare(Float)
V.Local.iRow.Declare(Long)
V.Local.sSQL.Declare(String)
V.Local.sUser5.Declare(String)
V.Local.fLength.Declare(Float)
V.Local.iStopNo.Declare(Long)

F.Intrinsic.Control.BlockEvents
'check to see which column is being clicked
F.Intrinsic.Control.SelectCase(V.Args.Column.Trim)
	F.Intrinsic.Control.Case("ADD_LINE")
		'frist check that a truck has been selected and a load exists for what they're trying to add
		F.Intrinsic.Control.If(V.Screen.f_Main!txtTruckNo.Text,<>,"", "AND", V.Screen.f_Main!txtLoadNo.Text,<>,"")
			'set the row value for the row that was clicked
			V.Local.iRow.Set(V.Args.RowIndex)
			'pull the remaining weight from the textbox on the screen
			V.Local.fRemWt.Set(V.Screen.f_Main!txtRemWt.Text)
			
			'pull the weight value for the line selected
			V.Local.fWeight.Set(V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
			
			'subtract the weight from the remaining weight. If the value is greater than 0, allow the record to be added. If it's not, inform the user that the weight being added exceeds the remaining weight for the truck
			F.Intrinsic.Math.Sub(V.Local.fRemWt, V.Local.fWeight, V.Local.fRemWt)
			
			F.Intrinsic.Control.If(V.Local.fRemWt,>=,0)
				'pull user 5 field from order lines to see if it needs to be in a 30+ foot truck
				F.Intrinsic.String.Build("SELECT USER_5 FROM V_ORDER_LINES WHERE ORDER_NO = '{0}' AND RECORD_NO = '{1}'", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValTrim, V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, V.Local.sSQL)
				F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Local.sUser5)
				F.Intrinsic.Control.If(V.Local.sUser5.Trim,=,"Y")
					V.Local.fLength.Set(V.Screen.f_Main!txtLength.Text)
					F.Intrinsic.Control.If(V.Local.fLength,>=,30)
						'if it requires a 30+ foot truck, check to make sure the truck is 30 feet
						
						'check to see if there are any rows, if there aren't set the stop number to 1
						F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.RowCount--,<,0)
							'Add record to the current builder gridview
							
							F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", 1, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "LIST_INFO", v.DataTable.dtNoLoad(V.Local.iRow).LIST_INFO!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
							
							'F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", 1, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "ADDRESS_3", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_3!FieldValtrim, "ADDRESS_4", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
							
							'remove from current grid
							F.Data.DataTable.DeleteRow("dtNoLoad", V.Local.iRow)
				
							Gui.f_Main.txtRemWt.Text(V.Local.fRemWt)
						f.Intrinsic.Control.Else
							V.Local.iStopNo.Set(V.DataTable.dtCurrentLoad(V.DataTable.dtCurrentLoad.RowCount--).STOP_NO!FieldVal)
							F.Intrinsic.Math.Add(V.Local.iStopNo, 1, V.Local.iStopNo)
							
							F.Data.DataTable.AddRow("dtCurrentLoad", "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "LIST_INFO", v.DataTable.dtNoLoad(V.Local.iRow).LIST_INFO!FieldValTrim,"QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
							
							'F.Data.DataTable.AddRow("dtCurrentLoad", "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "ADDRESS_3", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_3!FieldValtrim, "ADDRESS_4", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
						
							'remove from current grid
							F.Data.DataTable.DeleteRow("dtNoLoad", V.Local.iRow)
				
							Gui.f_Main.txtRemWt.Text(V.Local.fRemWt)
							
							'create a dataview with the zones 
							'order by the zone, zone seq
							'reorder the stops based on the zone, zone sequence order
						
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.Else
						F.Intrinsic.UI.Msgbox("The Order Line requirs a 30+ Foot Truck for shipment. It cannot be added to the Truck Load", "Warning")
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.ElseIf(V.Local.sUser5.Trim,=,"N", "OR", V.Local.sUser5.Trim,=,"")
					'check to see if there are any rows, if there aren't set the stop number to 1
					F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.RowCount--,<,0)
						'Add record to the current builder gridview
						F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", 1, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "LIST_INFO", v.DataTable.dtNoLoad(V.Local.iRow).LIST_INFO!FieldValTrim,"QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
						
						'F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", 1, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "ADDRESS_3", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_3!FieldValtrim, "ADDRESS_4", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
						
						'remove from current grid
						F.Data.DataTable.DeleteRow("dtNoLoad", V.Local.iRow)
				
						Gui.f_Main.txtRemWt.Text(V.Local.fRemWt)
					f.Intrinsic.Control.Else
					
						V.Local.iStopNo.Set(V.DataTable.dtCurrentLoad(V.DataTable.dtCurrentLoad.RowCount--).STOP_NO!FieldVal)
						F.Intrinsic.Math.Add(V.Local.iStopNo, 1, V.Local.iStopNo)
						F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", V.Local.iStopNo,"PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim,"LIST_INFO", v.DataTable.dtNoLoad(V.Local.iRow).LIST_INFO!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
						'F.Data.DataTable.AddRow("dtCurrentLoad", "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "ADDRESS_3", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_3!FieldValtrim, "ADDRESS_4", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat)
						
						'remove from current grid
						F.Data.DataTable.DeleteRow("dtNoLoad", V.Local.iRow)
				
						Gui.f_Main.txtRemWt.Text(V.Local.fRemWt)
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
				
				F.Data.DataTable.AcceptChanges("dtCurrentLoad")
		
				F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.RowCount--,=,0)
					'create a dataview with the zones 
					'order by the zone, zone seq
					'reorder the stops based on the zone, zone sequence order
					F.Intrinsic.Control.If(V.DataView.dtCurrentLoad!dvTempStops.Exists,=,True)
						F.Data.DataView.Close("dtCurrentLoad", "dvTempStops")
					F.Intrinsic.Control.EndIf
					F.Data.DataView.Create("dtCurrentLoad", "dvTempStops", 22, "", "[ZONE] ASC, [ZONE_SEQ] ASC")
					
					F.Intrinsic.Control.If(V.DataTable.dtTempCurrentLoad.Exists,=,True)
						F.Data.DataTable.Close("dtTempCurrentLoad")
					F.Intrinsic.Control.EndIf
					
					F.Data.DataView.ToDataTable("dtCurrentLoad", "dvTempStops", "dtTempCurrentLoad")
					F.Data.DataView.Close("dtCurrentLoad", "dvTempStops")
					'loop through and set the stop numbers
					F.Intrinsic.Control.For(V.Local.iCnt, 0, V.DataTable.dtTempCurrentLoad.RowCount--,1)
						F.Intrinsic.Math.Add(V.Local.iCnt, 1, V.Local.iRow)
						F.Data.DataTable.SetValue("dtTempCurrentLoad", V.Local.iCnt, "STOP_NO", v.Local.iRow)
					F.Intrinsic.Control.Next(V.Local.iCnt)
					
					F.Data.DataTable.DeleteRow("dtCurrentLoad")
					'merge the temp datatable into the current load
					F.Data.DataTable.Merge("dtTempCurrentLoad", "dtCurrentLoad", True, 1)
					F.Data.DataTable.Close("dtTempCurrentLoad")
				F.Intrinsic.Control.EndIf
				
	
					
			F.Intrinsic.Control.Else
				F.Intrinsic.UI.Msgbox("The line you are trying to add exceeds the remaining weight for the Truck. Would you like to override the Weight and proceed with adding the line?", "Warning", 4, V.Local.iRet)
				'check to see if the user replied with yes or no
				F.Intrinsic.Control.If(V.Local.iRet,=,6)
				
					'pull user 5 field from order lines to see if it needs to be in a 30+ foot truck
					F.Intrinsic.String.Build("SELECT USER_5 FROM V_ORDER_LINES WHERE ORDER_NO = '{0}' AND RECORD_NO = '{1}'", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValTrim, V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, V.Local.sSQL)
					F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Local.sUser5)
					F.Intrinsic.Control.If(V.Local.sUser5.Trim,=,"Y")
						V.Local.fLength.Set(V.Screen.f_Main!txtLength.Text)
						F.Intrinsic.Control.If(V.Local.fLength,>=,30)
							'if it requires a 30+ foot truck, check to make sure the truck is 30 feet
							
							'check to see if there are any rows, if there aren't set the stop number to 1
							F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.RowCount--,<,0)
								'Add record to the current builder gridview
							
								F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", 1, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim,  "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim,"LIST_INFO", v.DataTable.dtNoLoad(V.Local.iRow).LIST_INFO!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat, "OVERWT_FLAG", True)
								
								'F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", 1, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "ADDRESS_3", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_3!FieldValtrim, "ADDRESS_4", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat, "OVERWT_FLAG", True)
								
								'remove from current grid
								F.Data.DataTable.DeleteRow("dtNoLoad", V.Local.iRow)
					
								Gui.f_Main.txtRemWt.Text(V.Local.fRemWt)
							f.Intrinsic.Control.Else
								
								V.Local.iStopNo.Set(V.DataTable.dtCurrentLoad(V.DataTable.dtCurrentLoad.RowCount--).STOP_NO!FieldVal)
								F.Intrinsic.Math.Add(V.Local.iStopNo, 1, V.Local.iStopNo)
								F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", V.Local.iStopNo,"PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim,  "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "LIST_INFO", v.DataTable.dtNoLoad(V.Local.iRow).LIST_INFO!FieldValTrim,"QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat, "OVERWT_FLAG", True)
								
								'F.Data.DataTable.AddRow("dtCurrentLoad", "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "ADDRESS_3", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_3!FieldValtrim, "ADDRESS_4", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat, "OVERWT_FLAG", True)
							
								'remove from current grid
								F.Data.DataTable.DeleteRow("dtNoLoad", V.Local.iRow)
					
								Gui.f_Main.txtRemWt.Text(V.Local.fRemWt)
								
								'create a dataview with the zones 
								'order by the zone, zone seq
								'reorder the stops based on the zone, zone sequence order
							
							F.Intrinsic.Control.EndIf
						F.Intrinsic.Control.Else
							F.Intrinsic.UI.Msgbox("The Order Line requirs a 30+ Foot Truck for shipment. It cannot be added to the Truck Load", "Warning")
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.ElseIf(V.Local.sUser5.Trim,=,"N", "OR", V.Local.sUser5.Trim,=,"")
						'check to see if there are any rows, if there aren't set the stop number to 1
						F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.RowCount--,<,0)
							'Add record to the current builder gridview
							F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", 1, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim,  "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "LIST_INFO", v.DataTable.dtNoLoad(V.Local.iRow).LIST_INFO!FieldValTrim,"QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat, "OVERWT_FLAG", True)
							
							'F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", 1, "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "ADDRESS_3", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_3!FieldValtrim, "ADDRESS_4", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat, "OVERWT_FLAG", True)
							
							'remove from current grid
							F.Data.DataTable.DeleteRow("dtNoLoad", V.Local.iRow)
					
							Gui.f_Main.txtRemWt.Text(V.Local.fRemWt)
						f.Intrinsic.Control.Else
							V.Local.iStopNo.Set(V.DataTable.dtCurrentLoad(V.DataTable.dtCurrentLoad.RowCount--).STOP_NO!FieldVal)
							F.Intrinsic.Math.Add(V.Local.iStopNo, 1, V.Local.iStopNo)
							F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", V.Local.iStopNo,"PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "LIST_INFO", v.DataTable.dtNoLoad(V.Local.iRow).LIST_INFO!FieldValTrim,"QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat, "OVERWT_FLAG", True)
							'F.Data.DataTable.AddRow("dtCurrentLoad", "PCK_NO", V.DataTable.dtNoLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtNoLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtNoLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtNoLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtNoLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtNoLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "ADDRESS_3", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_3!FieldValtrim, "ADDRESS_4", V.DataTable.dtNoLoad(v.Local.iRow).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtNoLoad(V.Local.iRow).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtNoLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtNoLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtNoLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtNoLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtNoLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtNoLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtNoLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtNoLoad(V.Local.iRow).WEIGHT!FieldValFloat, "OVERWT_FLAG", True)
							
							'remove from current grid
							F.Data.DataTable.DeleteRow("dtNoLoad", V.Local.iRow)
					
							Gui.f_Main.txtRemWt.Text(V.Local.fRemWt)
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
					
					F.Data.DataTable.AcceptChanges("dtCurrentLoad")
						
					
					F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.RowCount--,=,0)
						'create a dataview with the zones 
						'order by the zone, zone seq
						'reorder the stops based on the zone, zone sequence order
						F.Intrinsic.Control.If(V.DataView.dtCurrentLoad!dvTempStops.Exists,=,True)
							F.Data.DataView.Close("dtCurrentLoad", "dvTempStops")
						F.Intrinsic.Control.EndIf
						F.Data.DataView.Create("dtCurrentLoad", "dvTempStops", 22, "", "[ZONE] ASC, [ZONE_SEQ] ASC")
					
						F.Intrinsic.Control.If(V.DataTable.dtTempCurrentLoad.Exists,=,True)
							F.Data.DataTable.Close("dtTempCurrentLoad")
						F.Intrinsic.Control.EndIf
					
						F.Data.DataView.ToDataTable("dtCurrentLoad", "dvTempStops", "dtTempCurrentLoad")
						F.Data.DataView.Close("dtCurrentLoad", "dvTempStops")
						'loop through and set the stop numbers
						F.Intrinsic.Control.For(V.Local.iCnt, 0, V.DataTable.dtTempCurrentLoad.RowCount--,1)
							F.Intrinsic.Math.Add(V.Local.iCnt, 1, V.Local.iRow)
							F.Data.DataTable.SetValue("dtTempCurrentLoad", V.Local.iCnt, "STOP_NO", v.Local.iRow)
						F.Intrinsic.Control.Next(V.Local.iCnt)
					
						F.Data.DataTable.DeleteRow("dtCurrentLoad")
						'merge the temp datatable into the current load
						F.Data.DataTable.Merge("dtTempCurrentLoad", "dtCurrentLoad", True, 1)
						F.Data.DataTable.Close("dtTempCurrentLoad")
						
						F.Data.DataTable.AcceptChanges("dtCurrentLoad")
					F.Intrinsic.Control.EndIf
				
					'highlight the line that was added with red so the user knows it's what caused the truckload to be overweight
				'	Gui.f_Main.GsGcTruckBuild.AddStyleFormatCondition("gvBuilder", "OVERWT_FLAG", "OVERWTFLAG", "Equal", "True")
					Gui.f_Main.GsGcTruckBuild.SetStyleFormatConditionProperty("gvBuilder", "OVERWT_FLAG", "OVERWTFLAG", "ApplyToRow", True)
					
				F.Intrinsic.Control.ElseIf(V.Local.iRet,=,7)
					'user clicked 'No'
					F.Intrinsic.Control.UnBlockEvents
					F.Intrinsic.Control.ExitSub
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.ElseIf(V.Screen.f_Main!txtTruckNo.Text,=,"", "AND", V.Screen.f_Main!txtLoadNo.Text,=,"")
			F.Intrinsic.UI.Msgbox("You must select a Truck Number and create a New Load before you can continue.", "Required Fields")
		F.Intrinsic.Control.ElseIf(V.Screen.f_Main!txtTruckNo.Text,<>,"", "AND", V.Screen.f_Main!txtLoadNo.Text,=,"")
			F.Intrinsic.UI.Msgbox("You must create a New Load before you can continue.", "Required Field")
		F.Intrinsic.Control.ElseIf(V.Screen.f_Main!txtTruckNo.Text,=,"", "AND", V.Screen.f_Main!txtLoadNo.Text,<>,"")
			F.Intrinsic.UI.Msgbox("You must select a Truck Number before you can continue.", "Required Field")
		F.Intrinsic.Control.EndIf
		
F.Intrinsic.Control.EndSelect

F.Data.DataTable.AcceptChanges("dtCurrentLoad")

F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.RowCount--,>,-1)
	F.Intrinsic.Control.CallSub(GetNotes, "DATATABLE", "dtCurrentLoad", "CHILD_DATATABLE", "dtCurrentLoad$dtNotes")

F.Intrinsic.Control.EndIf

F.Intrinsic.Control.UnBlockEvents
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.GsGcNoLoad_RowCellClick.End

Program.Sub.GsGcTruckBuild_RowCellClick.Start
F.Intrinsic.Control.Try
V.Local.fRemWt.Declare(Float)
V.Local.fQty.Declare(Float)
V.Local.fWeight.Declare(Float)
V.Local.iRow.Declare(Long)

F.Intrinsic.Control.BlockEvents
'check to see which column is being clicked
F.Intrinsic.Control.SelectCase(V.Args.Column.Trim)
	F.Intrinsic.Control.Case("DELETE_LINE")
		'set the row value for the row that was clicked
		V.Local.iRow.Set(V.Args.RowIndex)
		'pull the remaining weight from the textbox on the screen
		V.Local.fRemWt.Set(V.Screen.f_Main!txtRemWt.Text)
			
		'pull the weight value for the line selected
		V.Local.fWeight.Set(V.DataTable.dtCurrentLoad(V.Local.iRow).WEIGHT!FieldValFloat)
			
		'ADD the weight to the remaining weight. 
		F.Intrinsic.Math.Add(V.Local.fRemWt, V.Local.fWeight, V.Local.fRemWt)
		

		'Add record to the No load gridview
		F.Data.DataTable.AddRow("dtNoLoad", "PCK_NO", V.DataTable.dtCurrentLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtCurrentLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtCurrentLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtCurrentLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtCurrentLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtCurrentLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtCurrentLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtCurrentLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtCurrentLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "CITY", V.DataTable.dtCurrentLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtCurrentLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtCurrentLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtCurrentLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtCurrentLoad(v.Local.iRow).DESCRIPTION!FieldValTrim,"LIST_INFO",V.DataTable.dtCurrentLoad(V.Local.iRow).LIST_INFO!FieldValTrim, "QTY", V.DataTable.dtCurrentLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtCurrentLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtCurrentLoad(V.Local.iRow).WEIGHT!FieldValFloat, "STATUS", "STAGED")
		
		'F.Data.DataTable.AddRow("dtNoLoad", "PCK_NO", V.DataTable.dtCurrentLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtCurrentLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtCurrentLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtCurrentLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtCurrentLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtCurrentLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtCurrentLoad(V.Local.iRow).ZONE_SEQ!FieldVal,"ADDRESS_1", v.DataTable.dtCurrentLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtCurrentLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "ADDRESS_3", V.DataTable.dtCurrentLoad(v.Local.iRow).ADDRESS_3!FieldValtrim, "ADDRESS_4", V.DataTable.dtCurrentLoad(v.Local.iRow).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtCurrentLoad(V.Local.iRow).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtCurrentLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtCurrentLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtCurrentLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtCurrentLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtCurrentLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtCurrentLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtCurrentLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtCurrentLoad(V.Local.iRow).WEIGHT!FieldValFloat, "STATUS", "STAGED")
		
		'remove from current grid
		F.Data.DataTable.DeleteRow("dtCurrentLoad", V.Local.iRow)
			
		Gui.f_Main.txtRemWt.Text(V.Local.fRemWt)
		
		F.Data.DataTable.AcceptChanges("dtCurrentLoad")
		
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.UnBlockEvents
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.GsGcTruckBuild_RowCellClick.End

Program.Sub.GsGcTruckBuild_CellValueChanged.Start
F.Intrinsic.Control.Try
V.Local.iRow.Declare(Long)
V.Local.iNextRow.Declare(Long)
V.Local.iCnt.Declare(Long)
V.Local.iStopNo.Declare(Long)
V.Local.iNextStop.Declare(Long)

F.Intrinsic.Control.BlockEvents
'check to see which columnis being changed
F.Intrinsic.Control.SelectCase(V.Args.Column.Trim)
	F.Intrinsic.Control.Case("STOP_NO")

		V.Local.iRow.Set(V.Args.RowIndex)
		V.Local.iStopNo.Set(V.DataTable.dtCurrentLoad(V.Local.iRow).STOP_NO!FieldVal)
		
		'loop through the datatable from where the user changed the stop number and set the new stop numbers
		F.Intrinsic.Control.For(V.Local.iCnt, V.Local.iRow, V.DataTable.dtCurrentLoad.RowCount--,1)
			F.Intrinsic.Control.If(V.Local.iCnt,=,V.Local.iRow)
				F.Data.DataTable.SetValue("dtCurrentLoad", V.Local.iRow, "STOP_NO", V.Local.iStopNo)
				F.Data.DataTable.AcceptChanges("dtCurrentLoad")
				
			F.Intrinsic.Control.Else
				F.Intrinsic.Math.Add(V.Local.iStopNo, 1, V.Local.iStopNo)
			'	F.Intrinsic.Math.Add(V.Local.iRow, V.Local.iCnt, V.Local.iNextRow)
				F.Data.DataTable.SetValue("dtCurrentLoad", v.Local.iCnt, "STOP_NO", V.Local.iStopNo)
				F.Data.DataTable.AcceptChanges("dtCurrentLoad")
					
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Next(V.Local.iCnt)
	
		
		F.Intrinsic.Control.If(V.DataView.dtCurrentLoad!dvTempStops.Exists,=,True)
			F.Data.DataView.Close("dtCurrentLoad", "dvTempStops")
		F.Intrinsic.Control.EndIf
		
		F.Data.DataView.Create("dtCurrentLoad", "dvTempStops", 22, "", "[STOP_NO] ASC")
			
		F.Intrinsic.Control.If(V.DataTable.dtTempCurrentLoad.Exists,=,True)
			F.Data.DataTable.Close("dtTempCurrentLoad")
		F.Intrinsic.Control.EndIf
			
		F.Data.DataView.ToDataTable("dtCurrentLoad", "dvTempStops", "dtTempCurrentLoad")
		F.Data.DataView.Close("dtCurrentLoad", "dvTempStops")
	
		F.Data.DataTable.DeleteRow("dtCurrentLoad")
		F.Data.DataTable.AcceptChanges("dtCurrentLoad")
		
		'merge the temp datatable into the current load
		F.Data.DataTable.Merge("dtTempCurrentLoad", "dtCurrentLoad", True, 1)
		F.Data.DataTable.AcceptChanges("dtCurrentLoad")
	
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.UnBlockEvents
F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.GsGcTruckBuild_CellValueChanged.End

Program.Sub.GsGcExistLoad_CellValueChanged.Start
f.Intrinsic.Control.Try
V.Local.iRow.Declare(Long)
V.Local.iNextRow.Declare(Long)
V.Local.iCnt.Declare(Long)
V.Local.iStopNo.Declare(Long)
V.Local.iNextStop.Declare(Long)
V.Local.bAdmin.Declare(Boolean)
V.Local.sTruckDriver.Declare(String)
V.Local.iLoadNo.Declare(String)
V.Local.sTruckNo.Declare(String)
V.Local.sShipDate.Declare(String)
V.Local.sOrderNo.Declare(String)
V.Local.sOrderLine.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sRet.Declare(String)
V.Local.dShipDate.Declare(Date)

'check to see if the user is in the TRKADMIN security group
F.Global.Security.IsInGroup(V.Caller.User, "TRKADMIN", V.Caller.CompanyCode, V.Local.bAdmin)

F.Intrinsic.Control.If(V.Local.bAdmin,=,True)

	F.Intrinsic.Control.BlockEvents
	'check to see which columnis being changed
	F.Intrinsic.Control.SelectCase(V.Args.Column.Trim)
		F.Intrinsic.Control.Case("TRUCK_DRIVER")
			V.Local.iRow.Set(V.Args.RowIndex)
			V.Local.sTruckDriver.Set(V.DataTable.dtExistingLoads(V.Local.iRow).TRUCK_DRIVER!FieldValTrim)
			V.Local.iLoadNo.Set(V.DataTable.dtExistingLoads(V.Local.iRow).LOAD_NO!FieldVal)
			V.Local.sTruckNo.Set(V.DataTable.dtExistingLoads(V.Local.iRow).TRUCK_NO!FieldValTrim)
			V.Local.dShipDate.Set(V.DataTable.dtExistingLoads(V.Local.iRow).SHIP_DATE!FieldVal)
		
			F.Intrinsic.String.Build("SELECT * FROM GCG_6880_EXIST_LOADS WHERE LOAD_NO = '{0}' AND TRUCK_NO = '{1}' AND SHIP_DATE = '{2}'", V.Local.iLoadNo, V.Local.sTruckNo.Trim, V.Local.dShipDate.PervasiveDate, V.Local.sSQL)
			F.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL, V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
				'update the driver for the record
				F.Intrinsic.String.Build("UPDATE GCG_6880_EXIST_LOADS SET TRUCK_DRIVER = '{0}' WHERE LOAD_NO = '{1}' AND TRUCK_NO = '{2}'  AND SHIP_DATE = '{3}'", v.Local.sTruckDriver, V.Local.iLoadNo, V.Local.sTruckNo.Trim, V.Local.dShipDate.PervasiveDate, V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			
			'Update the detail table as well
			F.Intrinsic.String.Build("SELECT * FROM GCG_6880_LOAD_DTL WHERE LOAD_NO = '{0}' AND TRUCK_NO = '{1}' AND SHIP_DATE = '{2}'", V.Local.iLoadNo, V.Local.sTruckNo.Trim, V.Local.dShipDate.PervasiveDate, V.Local.sSQL)
			F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
			'	update the driver for the record
				F.Intrinsic.String.Build("UPDATE GCG_6880_LOAD_DTL SET TRUCK_DRIVER = '{0}' WHERE LOAD_NO = '{1}' AND TRUCK_NO = '{2}'  AND SHIP_DATE = '{3}'", v.Local.sTruckDriver, V.Local.iLoadNo, V.Local.sTruckNo.Trim, V.Local.dShipDate.PervasiveDate, V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndSelect

	F.Intrinsic.Control.UnBlockEvents
F.Intrinsic.Control.ElseIf(V.Local.bAdmin,=,False)
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.GsGcExistLoad_CellValueChanged.End

Program.Sub.GsGcExistLoad_RowClick.Start
F.Intrinsic.Control.Try
V.Local.bAdmin.Declare(Boolean)
V.Local.iCnt.Declare(Long)
V.Local.iCnt2.Declare(Long)
V.Local.iRow.Declare(Long)
V.Local.iLoadNo.Declare(Long)
V.Local.sPckNo.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sRet2.Declare(String)
V.Local.sTruckNo.Declare(String)
V.Local.sShipDate.Declare(String)
V.Local.dShipDate.Declare(Date)
v.Local.sCustomer.Declare(String)
V.Local.sOrderNo.Declare(String)
V.Local.sOrderLine.Declare(String)
V.Local.sDriver.Declare(String)


F.Intrinsic.Control.BlockEvents
'check to see if the user is in the TRKADMIN security group
F.Global.Security.IsInGroup(V.Caller.User, "TRKADMIN", V.Caller.CompanyCode, V.Local.bAdmin)
F.Intrinsic.Control.If(V.Local.bAdmin,=,True)
	F.Intrinsic.Control.BlockEvents
	F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.RowCount--,>,-1)
		F.Data.DataTable.DeleteRow("dtCurrentLoad")
	F.Intrinsic.Control.EndIf
	V.Local.iRow.Set(V.Args.RowIndex)
	
	'check to see if the datatable exists
	F.Intrinsic.Control.If(V.DataTable.dtTempDtl.Exists)
		F.Data.DataTable.Close("dtTempDtl")
	F.Intrinsic.Control.EndIf
	
	'V.Local.sPckNo.Set(V.DataTable.dtExistingLoads(V.Local.iRow).PCK_NO!FieldValTrim)
	V.Local.iLoadNo.Set(V.DataTable.dtExistingLoads(V.Local.iRow).LOAD_NO!FieldVal)
	V.Local.sTruckNo.Set(V.DataTable.dtExistingLoads(V.Local.iRow).TRUCK_NO!FieldValTrim)
	
	F.Intrinsic.String.Build("SELECT * FROM GCG_6880_LOAD_DTL WHERE LOAD_NO = '{0}'AND TRUCK_NO = '{1}' ORDER BY STOP_NO", v.Local.iLoadNo, V.Local.sTruckNo.Trim, v.Local.sSQL)
	'create temp datatable 
	F.Data.DataTable.CreateFromSQL("dtTempDtl", "con", V.Local.sSQL, True)
	
	'loop through temp datatbale and add to the current builder grid
	F.Intrinsic.Control.For(V.Local.iCnt, 0, V.DataTable.dtTempDtl.RowCount--,1)
		F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", v.DataTable.dtTempDtl(V.Local.iCnt).STOP_NO!Fieldval, "PCK_NO", v.DataTable.dtTempDtl(v.Local.iCnt).PCK_NO!FieldValtrim, "ORDER_NO", v.DataTable.dtTempDtl(v.Local.iCnt).ORDER_NO!FieldValTrim, "ORDER_LINE",V.DataTable.dtTempDtl(V.Local.iCnt).ORDER_LINE!FieldValTrim, "CUSTOMER",V.DataTable.dtTempDtl(V.Local.iCnt).CUSTOMER!FieldValTrim, "CUST_NAME",V.DataTable.dtTempDtl(V.Local.iCnt).CUST_NAME!FieldValTrim, "ZONE",V.DataTable.dtTempDtl(V.Local.iCnt).ZONE!FieldVal,"ZONE_SEQ", V.DataTable.dtTempDtl(V.Local.iCnt).ZONE_SEQ!FieldVal, "PART", V.DataTable.dtTempDtl(V.Local.iCnt).PART!FieldVal, "DESCRIPTION", V.DataTable.dtTempDtl(V.Local.iCnt).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtTempDtl(V.Local.iCnt).QTY!FieldValFloat, "UM", V.DataTable.dtTempDtl(V.Local.iCnt).UM!FieldValTrim, "WEIGHT", V.DataTable.dtTempDtl(V.Local.iCnt).WEIGHT!FieldValFloat, "ADDRESS_1", v.DataTable.dtTempDtl(v.Local.iCnt).ADDRESS_1!FieldValTrim,"ADDRESS_2", v.DataTable.dtTempDtl(v.Local.iCnt).ADDRESS_2!FieldValTrim,  "CITY", V.DataTable.dtTempDtl(V.Local.iCnt).CITY!FieldValTrim, "STATE", V.DataTable.dtTempDtl(V.Local.iCnt).STATE!FieldvalTrim, "ZIP", V.DataTable.dtTempDtl(V.Local.iCnt).ZIP!FieldValTrim)
		
		'F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", v.DataTable.dtTempDtl(V.Local.iCnt).STOP_NO!Fieldval, "PCK_NO", v.DataTable.dtTempDtl(v.Local.iCnt).PCK_NO!FieldValtrim, "ORDER_NO", v.DataTable.dtTempDtl(v.Local.iCnt).ORDER_NO!FieldValTrim, "ORDER_LINE",V.DataTable.dtTempDtl(V.Local.iCnt).ORDER_LINE!FieldValTrim, "CUSTOMER",V.DataTable.dtTempDtl(V.Local.iCnt).CUSTOMER!FieldValTrim, "CUST_NAME",V.DataTable.dtTempDtl(V.Local.iCnt).CUST_NAME!FieldValTrim, "ZONE",V.DataTable.dtTempDtl(V.Local.iCnt).ZONE!FieldVal,"ZONE_SEQ", V.DataTable.dtTempDtl(V.Local.iCnt).ZONE_SEQ!FieldVal, "PART", V.DataTable.dtTempDtl(V.Local.iCnt).PART!FieldVal, "DESCRIPTION", V.DataTable.dtTempDtl(V.Local.iCnt).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtTempDtl(V.Local.iCnt).QTY!FieldValFloat, "UM", V.DataTable.dtTempDtl(V.Local.iCnt).UM!FieldValTrim, "WEIGHT", V.DataTable.dtTempDtl(V.Local.iCnt).WEIGHT!FieldValFloat, "ADDRESS_1", v.DataTable.dtTempDtl(v.Local.iCnt).ADDRESS_1!FieldValTrim,"ADDRESS_2", v.DataTable.dtTempDtl(v.Local.iCnt).ADDRESS_2!FieldValTrim, "ADDRESS_3", v.DataTable.dtTempDtl(v.Local.iCnt).ADDRESS_3!FieldValTrim, "ADDRESS_4", v.DataTable.dtTempDtl(v.Local.iCnt).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtTempDtl(v.Local.iCnt).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtTempDtl(V.Local.iCnt).CITY!FieldValTrim, "STATE", V.DataTable.dtTempDtl(V.Local.iCnt).STATE!FieldvalTrim, "ZIP", V.DataTable.dtTempDtl(V.Local.iCnt).ZIP!FieldValTrim)
		
		'remove the row from existing
	'	F.Data.DataTable.DeleteRow("dtExistingLoads", V.Local.iRow)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	Gui.f_Main.txtLoadNo.Text(V.Local.iLoadNo)
	Gui.f_Main.txtTruckNo.Text(V.Local.sTruckNo.Trim)
	
	'sum up the remaining weight
	'query distinct record to get truck information
	F.Intrinsic.String.Build("SELECT DISTINCT TRUCK_LOADER,TRUCK_DRIVER, TRUCK_LENGTH, TRUCK_WIDTH, SHIP_DATE, REM_WEIGHT, SHUTTLE_TRCK FROM GCG_6880_LOAD_DTL WHERE LOAD_NO = '{0}' AND TRUCK_NO = '{1}' ORDER BY STOP_NO DESC", v.Local.iLoadNo, v.Local.sTruckNo.Trim, V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
		F.Intrinsic.String.Split(V.Local.sRet, "*!*", V.Local.sRet)
		Gui.f_Main.txtLoader.Text(V.Local.sRet(0).Trim)
		Gui.f_Main.txtDriver.Text(V.Local.sRet(1).Trim)
		Gui.f_Main.txtLength.Text(V.Local.sRet(2).Float)
		Gui.f_Main.txtWidth.Text(V.Local.sRet(3).Float)
		V.Local.dShipDate.Set(V.Local.sRet(4).PervasiveDate)
		F.Intrinsic.String.Format(V.Local.dShipDate, "YYYY-MM-DD", V.Local.sShipDate)
		Gui.f_Main.dtpShipDate.Value(V.Local.sShipDate)
		Gui.f_Main.txtRemWt.Text(V.Local.sRet(5).Float)
		Gui.f_Main.chkShuttle.Value(V.Local.sRet(6).Long)
	F.Intrinsic.Control.EndIf
	
	'close temp datatable
	F.Data.DataTable.Close("dtTempDtl")
	
	F.Data.DataTable.AcceptChanges("dtCurrentLoad")
	
	'callsub to load notes
	F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.RowCount--,>,-1)
		F.Intrinsic.Control.CallSub(GetNotes, "DATATABLE", "dtCurrentLoad", "CHILD_DATATABLE", "dtCurrentLoad$dtNotes")
	
	F.Intrinsic.Control.EndIf
	
	V.Global.bExistingLoad.Set(True)
	
	'lock the buttons so the user can't make any changes
	Gui.f_Main.cmdSave.Enabled(False)
	Gui.f_Main.cmdConvert.Enabled(False)
	Gui.f_Main.cmdDelete.Enabled(False)
	Gui.f_Main.cmdTrckBrw.Enabled(False)
	Gui.f_Main.cmdDriverBrws.Enabled(False)
	Gui.f_Main.cmdLoadBrws.Enabled(False)
	
	Gui.f_Main.txtTruckNo.Enabled(False)
	Gui.f_Main.txtDriver.Enabled(False)
	Gui.f_Main.txtLoader.Enabled(False)
	Gui.f_Main.chkShuttle.Enabled(False)
	Gui.f_Main.dtpShipDate.Enabled(False)
	
	F.Intrinsic.Control.UnBlockEvents
	
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.ElseIf(V.Local.bAdmin,=,False)
	F.Intrinsic.Control.If(V.DataTable.dtTempViewDtl.Exists,=,True)
		F.Intrinsic.Control.If(V.DataTable.dtTempViewDtl.RowCount--,>,-1)
			F.Data.DataTable.DeleteRow("dtTempViewDtl")
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	'load the detail for the selected truck load
	V.Local.dShipDate.Set(V.DataTable.dtExistingLoads(V.Local.iRow).SHIP_DATE!FieldVal)
	F.Intrinsic.String.Format(V.Local.dShipDate, "YYYY-MM-DD", V.Local.sShipDate)
	V.Local.iLoadNo.Set(V.DataTable.dtExistingLoads(V.Local.iRow).LOAD_NO!FieldVal)
	V.Local.sTruckNo.Set(V.DataTable.dtExistingLoads(V.Local.iRow).TRUCK_NO!FieldValTrim)
	
	F.Intrinsic.String.Build("SELECT  TRUCK_NO, LOAD_NO, STOP_NO, SHIP_DATE,LTRIM(RTRIM(TRUCK_DRIVER)) AS TRUCK_DRIVER, LTRIM(RTRIM(TRUCK_LOADER)) AS TRUCK_LOADER,  ORDER_NO, ORDER_LINE, CUSTOMER, LTRIM(RTRIM(CUST_NAME)) AS CUST_NAME, PART, '' AS LIST_INFO, LTRIM(RTRIM(DESCRIPTION)) AS DESCRIPTION, QTY, UM, WEIGHT, PCK_NO, LTRIM(RTRIM(ADDRESS_1)) AS ADDRESS_1, LTRIM(RTRIM(ADDRESS_2)) AS ADDRESS_2, CITY, STATE, ZIP, ZONE, ZONE_SEQ FROM GCG_6880_LOAD_DTL WHERE LOAD_NO = '{0}' AND TRUCK_NO = '{1}' AND SHIP_DATE = '{2}' ORDER BY STOP_NO", V.Local.iLoadNo, V.Local.sTruckNo.Trim, V.Local.sShipDate, V.Local.sSQL)
	
	F.Intrinsic.Control.If(V.DataTable.dtTempViewDtl.Exists)
		F.Data.DataTable.Close("dtTempViewDtl")
	F.Intrinsic.Control.EndIf
	
	'create the datatable
	F.Data.DataTable.CreateFromSQL("dtTempViewDtl", "con", V.Local.sSQL, True)
	
	'Populate list information
	F.Intrinsic.Control.For(V.Local.iCnt, 0, V.DataTable.dtTempViewDtl.RowCount--,1)
		F.Intrinsic.String.Build("SELECT LTRIM(RTRIM(TEXT)) AS LIST_INFO FROM V_ORDER_LN_TEXT WHERE ORDER_NUM = '{0}' AND ORDER_LINE = '{1}' AND ORDER_TYPE = '9999'", V.DataTable.dtTempViewDtl(V.Local.iCnt).ORDER_NO!FieldValTrim, V.DataTable.dtTempViewDtl(V.Local.iCnt).ORDER_LINE!FieldValTrim, V.Local.sSQL)
		F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Local.sRet)
		F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
			F.Intrinsic.String.Split(V.Local.sRet,"*!*", V.Local.sRet)
			F.Data.DataTable.SetValue("dtTempViewDtl", V.Local.iCnt, "LIST_INFO", V.Local.sRet.Trim)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	'callsub to format the grid
	F.Intrinsic.Control.CallSub(FormatViewDtl)
	
	'show the extra screen with the truck load detail
	Gui.F_TruckDtl..Show
	Gui.F_TruckDtl..Visible(True)
	'this will allow the non-admin users to drill into the information about that truck load
	F.Intrinsic.Control.UnBlockEvents
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf


F.Intrinsic.Control.UnBlockEvents
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.GsGcExistLoad_RowClick.End

Program.Sub.GsGcExistLoad_RowCellClick.Start
F.Intrinsic.Control.Try
V.Local.bAdmin.Declare(Boolean)
V.Local.iCnt.Declare(Long)
V.Local.iCnt2.Declare(Long)
V.Local.iRow.Declare(Long)
V.Local.iLoadNo.Declare(Long)
V.Local.sPckNo.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sRet2.Declare(String)
V.Local.sTruckNo.Declare(String)
V.Local.sShipDate.Declare(String)
V.Local.dShipDate.Declare(Date)
v.Local.sCustomer.Declare(String)
V.Local.sOrderNo.Declare(String)
V.Local.sOrderLine.Declare(String)
V.Local.sDriver.Declare(String)
V.Local.sTruckDriver.Declare(String)

F.Intrinsic.Control.BlockEvents
'check to see if the user is in the TRKADMIN security group
F.Global.Security.IsInGroup(V.Caller.User, "TRKADMIN", V.Caller.CompanyCode, V.Local.bAdmin)
F.Intrinsic.Control.If(V.Local.bAdmin,=,True)
	F.Intrinsic.Control.SelectCase(V.Args.Column.Trim)
		F.Intrinsic.Control.Case("DRIVER_BRWS")
		'build driver browser using the employee master where dept_id = 'DRIV'
		F.Intrinsic.UI.Browser("Select a Driver", "con","SELECT EMPLOYEE, UCASE(NAME) AS NAME, DEPT_EMPLOYEE, COMMENTS_3  FROM V_EMPLOYEE_MSTR WHERE DEPT_EMPLOYEE = 'DRIV' OR (COMMENTS_3 = 'CDL:LDR' OR COMMENTS_3 = 'CDL') ORDER BY COMMENTS_3 DESC, EMPLOYEE", "Employee No*!*Employee Name*!*Department*!*CDL License", "750*!*1500*!*750*!*750", V.Local.sRet)
		F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"***CANCEL***")
			F.Intrinsic.String.Split(V.Local.sRet, "*!*", V.Local.sRet)
			V.Local.sDriver.Set(V.Local.sRet(1).Trim)
			Gui.f_Main.txtDriver.Text(V.Local.sDriver.Trim)
			'if they want the user name displayed as First Name MI, Last Name, we can transform that here
			'set the driver text box
			F.Data.DataTable.SetValue("dtExistingLoads", V.Args.RowIndex, "TRUCK_DRIVER", V.Local.sDriver.Trim)
			F.Data.DataTable.AcceptChanges("dtExistingLoads")
			
			V.Local.iRow.Set(V.Args.RowIndex)
			V.Local.sTruckDriver.Set(V.DataTable.dtExistingLoads(V.Local.iRow).TRUCK_DRIVER!FieldValTrim)
			V.Local.iLoadNo.Set(V.DataTable.dtExistingLoads(V.Local.iRow).LOAD_NO!FieldVal)
			V.Local.sTruckNo.Set(V.DataTable.dtExistingLoads(V.Local.iRow).TRUCK_NO!FieldValTrim)
			V.Local.dShipDate.Set(V.DataTable.dtExistingLoads(V.Local.iRow).SHIP_DATE!FieldVal)
			
			F.Intrinsic.String.Build("SELECT * FROM GCG_6880_EXIST_LOADS WHERE LOAD_NO = '{0}' AND TRUCK_NO = '{1}' AND SHIP_DATE = '{2}'", V.Local.iLoadNo, V.Local.sTruckNo.Trim, V.Local.dShipDate.PervasiveDate, V.Local.sSQL)
			F.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL, V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
				'update the driver for the record
				F.Intrinsic.String.Build("UPDATE GCG_6880_EXIST_LOADS SET TRUCK_DRIVER = '{0}' WHERE LOAD_NO = '{1}' AND TRUCK_NO = '{2}'  AND SHIP_DATE = '{3}'", v.Local.sTruckDriver, V.Local.iLoadNo, V.Local.sTruckNo.Trim, V.Local.dShipDate.PervasiveDate, V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			
			'Update the detail table as well
			F.Intrinsic.String.Build("SELECT * FROM GCG_6880_LOAD_DTL WHERE LOAD_NO = '{0}' AND TRUCK_NO = '{1}' AND SHIP_DATE = '{2}'", V.Local.iLoadNo, V.Local.sTruckNo.Trim, V.Local.dShipDate.PervasiveDate, V.Local.sSQL)
			F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
			'	update the driver for the record
				F.Intrinsic.String.Build("UPDATE GCG_6880_LOAD_DTL SET TRUCK_DRIVER = '{0}' WHERE LOAD_NO = '{1}' AND TRUCK_NO = '{2}'  AND SHIP_DATE = '{3}'", v.Local.sTruckDriver, V.Local.iLoadNo, V.Local.sTruckNo.Trim, V.Local.dShipDate.PervasiveDate, V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndSelect
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.UnBlockEvents
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.GsGcExistLoad_RowCellClick.End

Program.Sub.GsGcInProcess_RowClick.Start
F.Intrinsic.Control.Try
V.Local.iCnt.Declare(Long)
V.Local.iCnt2.Declare(Long)
V.Local.iRow.Declare(Long)
V.Local.iLoadNo.Declare(Long)
V.Local.sPckNo.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sRet2.Declare(String)
V.Local.sTruckNo.Declare(String)
V.Local.sShipDate.Declare(String)
V.Local.dShipDate.Declare(Date)
v.Local.sCustomer.Declare(String)
V.Local.sOrderNo.Declare(String)
V.Local.sOrderLine.Declare(String)
V.Local.sControl.Declare(String)

F.Intrinsic.Control.BlockEvents

Gui.f_Main.GsGcInProcess.GetFocusedGridview(V.Local.sControl)

F.Intrinsic.Control.If(V.Local.sControl.Trim,=, "DTINPROCESS")
	
	F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.RowCount--,>,-1)
		F.Data.DataTable.DeleteRow("dtCurrentLoad")
		f.Data.DataTable.AcceptChanges("dtCurrentLoad")
	F.Intrinsic.Control.EndIf
	V.Local.iRow.Set(V.Args.RowIndex)
	
	'check to see if the datatable exists
	F.Intrinsic.Control.If(V.DataTable.dtTempDtl.Exists)
		F.Data.DataTable.Close("dtTempDtl")
	F.Intrinsic.Control.EndIf
	
	V.Local.sPckNo.Set(V.DataTable.dtInProcess(V.Local.iRow).PCK_NO!FieldValTrim)
	V.Local.iLoadNo.Set(V.DataTable.dtInProcess(V.Local.iRow).LOAD_NO!FieldVal)
	V.Local.sTruckNo.Set(V.DataTable.dtInProcess(V.Local.iRow).TRUCK_NO!FieldValTrim)
	
	F.Intrinsic.String.Build("SELECT * FROM GCG_6880_LOAD_DTL WHERE LOAD_NO = '{0}'AND TRUCK_NO = '{1}' ORDER BY STOP_NO", v.Local.iLoadNo, V.Local.sTruckNo.Trim, v.Local.sSQL)
	'create temp datatable 
	F.Data.DataTable.CreateFromSQL("dtTempDtl", "con", V.Local.sSQL, True)
	
	'loop through temp datatbale and add to the current builder grid
	F.Intrinsic.Control.For(V.Local.iCnt, 0, V.DataTable.dtTempDtl.RowCount--,1)
		F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", v.DataTable.dtTempDtl(V.Local.iCnt).STOP_NO!Fieldval, "PCK_NO", v.DataTable.dtTempDtl(v.Local.iCnt).PCK_NO!FieldValtrim, "ORDER_NO", v.DataTable.dtTempDtl(v.Local.iCnt).ORDER_NO!FieldValTrim, "ORDER_LINE",V.DataTable.dtTempDtl(V.Local.iCnt).ORDER_LINE!FieldValTrim, "CUSTOMER",V.DataTable.dtTempDtl(V.Local.iCnt).CUSTOMER!FieldValTrim, "CUST_NAME",V.DataTable.dtTempDtl(V.Local.iCnt).CUST_NAME!FieldValTrim, "ZONE",V.DataTable.dtTempDtl(V.Local.iCnt).ZONE!FieldVal,"ZONE_SEQ", V.DataTable.dtTempDtl(V.Local.iCnt).ZONE_SEQ!FieldVal, "PART", V.DataTable.dtTempDtl(V.Local.iCnt).PART!FieldVal, "DESCRIPTION", V.DataTable.dtTempDtl(V.Local.iCnt).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtTempDtl(V.Local.iCnt).QTY!FieldValFloat, "UM", V.DataTable.dtTempDtl(V.Local.iCnt).UM!FieldValTrim, "WEIGHT", V.DataTable.dtTempDtl(V.Local.iCnt).WEIGHT!FieldValFloat, "ADDRESS_1", v.DataTable.dtTempDtl(v.Local.iCnt).ADDRESS_1!FieldValTrim,"ADDRESS_2", v.DataTable.dtTempDtl(v.Local.iCnt).ADDRESS_2!FieldValTrim, "CITY", V.DataTable.dtTempDtl(V.Local.iCnt).CITY!FieldValTrim, "STATE", V.DataTable.dtTempDtl(V.Local.iCnt).STATE!FieldvalTrim, "ZIP", V.DataTable.dtTempDtl(V.Local.iCnt).ZIP!FieldValTrim)
		
		'F.Data.DataTable.AddRow("dtCurrentLoad", "STOP_NO", v.DataTable.dtTempDtl(V.Local.iCnt).STOP_NO!Fieldval, "PCK_NO", v.DataTable.dtTempDtl(v.Local.iCnt).PCK_NO!FieldValtrim, "ORDER_NO", v.DataTable.dtTempDtl(v.Local.iCnt).ORDER_NO!FieldValTrim, "ORDER_LINE",V.DataTable.dtTempDtl(V.Local.iCnt).ORDER_LINE!FieldValTrim, "CUSTOMER",V.DataTable.dtTempDtl(V.Local.iCnt).CUSTOMER!FieldValTrim, "CUST_NAME",V.DataTable.dtTempDtl(V.Local.iCnt).CUST_NAME!FieldValTrim, "ZONE",V.DataTable.dtTempDtl(V.Local.iCnt).ZONE!FieldVal,"ZONE_SEQ", V.DataTable.dtTempDtl(V.Local.iCnt).ZONE_SEQ!FieldVal, "PART", V.DataTable.dtTempDtl(V.Local.iCnt).PART!FieldVal, "DESCRIPTION", V.DataTable.dtTempDtl(V.Local.iCnt).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtTempDtl(V.Local.iCnt).QTY!FieldValFloat, "UM", V.DataTable.dtTempDtl(V.Local.iCnt).UM!FieldValTrim, "WEIGHT", V.DataTable.dtTempDtl(V.Local.iCnt).WEIGHT!FieldValFloat, "ADDRESS_1", v.DataTable.dtTempDtl(v.Local.iCnt).ADDRESS_1!FieldValTrim,"ADDRESS_2", v.DataTable.dtTempDtl(v.Local.iCnt).ADDRESS_2!FieldValTrim, "ADDRESS_3", v.DataTable.dtTempDtl(v.Local.iCnt).ADDRESS_3!FieldValTrim, "ADDRESS_4", v.DataTable.dtTempDtl(v.Local.iCnt).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtTempDtl(v.Local.iCnt).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtTempDtl(V.Local.iCnt).CITY!FieldValTrim, "STATE", V.DataTable.dtTempDtl(V.Local.iCnt).STATE!FieldvalTrim, "ZIP", V.DataTable.dtTempDtl(V.Local.iCnt).ZIP!FieldValTrim)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	f.Data.DataTable.AcceptChanges("dtCurrentLoad")
	
	Gui.f_Main.txtLoadNo.Text(V.Local.iLoadNo)
	Gui.f_Main.txtTruckNo.Text(V.Local.sTruckNo.Trim)
	
	'sum up the remaining weight
	'query distinct record to get truck information
	F.Intrinsic.String.Build("SELECT DISTINCT TRUCK_LOADER,TRUCK_DRIVER, TRUCK_LENGTH, TRUCK_WIDTH, SHIP_DATE, REM_WEIGHT, SHUTTLE_TRCK FROM GCG_6880_LOAD_DTL WHERE LOAD_NO = '{0}' AND TRUCK_NO = '{1}' ORDER BY STOP_NO DESC", v.Local.iLoadNo, v.Local.sTruckNo.Trim, V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
		F.Intrinsic.String.Split(V.Local.sRet, "*!*", V.Local.sRet)
		Gui.f_Main.txtLoader.Text(V.Local.sRet(0).Trim)
		Gui.f_Main.txtDriver.Text(V.Local.sRet(1).Trim)
		Gui.f_Main.txtLength.Text(V.Local.sRet(2).Float)
		Gui.f_Main.txtWidth.Text(V.Local.sRet(3).Float)
		V.Local.dShipDate.Set(V.Local.sRet(4).PervasiveDate)
		F.Intrinsic.String.Format(V.Local.dShipDate, "YYYY-MM-DD", V.Local.sShipDate)
		Gui.f_Main.dtpShipDate.Value(V.Local.sShipDate)
		Gui.f_Main.txtRemWt.Text(V.Local.sRet(5).Float)
		Gui.f_Main.chkShuttle.Value(V.Local.sRet(6).Long)
	F.Intrinsic.Control.EndIf
	
	'Populate list information
	F.Intrinsic.Control.For(V.Local.iCnt, 0, V.DataTable.dtCurrentLoad.RowCount--,1)
		F.Intrinsic.String.Build("SELECT LTRIM(RTRIM(TEXT)) AS LIST_INFO FROM V_ORDER_LN_TEXT WHERE ORDER_NUM = '{0}' AND ORDER_LINE = '{1}' AND ORDER_TYPE = '9999'", V.DataTable.dtCurrentLoad(V.Local.iCnt).ORDER_NO!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ORDER_LINE!FieldValTrim, V.Local.sSQL)
		F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Local.sRet)
		F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
			F.Intrinsic.String.Split(V.Local.sRet,"*!*", V.Local.sRet)
			F.Data.DataTable.SetValue("dtCurrentLoad", V.Local.iCnt, "LIST_INFO", V.Local.sRet.Trim)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	'close temp datatable
	F.Data.DataTable.Close("dtTempDtl")
	
	F.Data.DataTable.AcceptChanges("dtCurrentLoad")
	'Gui.f_Main.tab1.SetTab(0)
	
	'callsub to load notes
	F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.RowCount--,>,-1)
		F.Intrinsic.Control.CallSub(GetNotes, "DATATABLE", "dtCurrentLoad", "CHILD_DATATABLE", "dtCurrentLoad$dtNotes")
		
	F.Intrinsic.Control.EndIf
	
	V.Global.bExistingLoad.Set(False)
	Gui.f_Main.cmdSave.Enabled(True)
	Gui.f_Main.cmdConvert.Enabled(True)
	Gui.f_Main.cmdDelete.Enabled(True)
	Gui.f_Main.cmdTrckBrw.Enabled(True)
	Gui.f_Main.cmdDriverBrws.Enabled(True)
	Gui.f_Main.cmdLoadBrws.Enabled(True)
	
	Gui.f_Main.txtTruckNo.Enabled(True)
	Gui.f_Main.txtDriver.Enabled(True)
	Gui.f_Main.txtLoader.Enabled(True)
	Gui.f_Main.chkShuttle.Enabled(True)
	Gui.f_Main.dtpShipDate.Enabled(True)
f.Intrinsic.Control.EndIf

F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.GsGcInProcess_RowClick.End

Program.Sub.GetNotes.Start
F.Intrinsic.Control.Try
V.Local.iCnt.Declare(Long)
V.Local.iCnt2.Declare(Long)
V.Local.sRet.Declare(String)
V.Local.sRet2.Declare(String)
V.Local.sOrderNo.Declare(String)
V.Local.sOrderLine.Declare(String)
V.Local.sCustomer.Declare(String)
V.Local.sSQL.Declare(String)
v.Local.sChildDatatable.Declare(String)
V.Local.sNotes.Declare(String)

V.Local.sChildDatatable.Set(V.Args.CHILD_DATATABLE)

F.Intrinsic.Control.If(V.DataTable.[V.Args.DATATABLE].Exists,=,True)
	F.Data.DataTable.DeleteRow(V.Local.sChildDatatable.Trim)
	F.Data.DataTable.AcceptChanges(V.Local.sChildDatatable)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.For(V.Local.iCnt, 0, V.DataTable.[V.Args.DATATABLE].RowCount--,1)

	V.Local.sCustomer.Set(V.DataTable.[V.Args.DATATABLE](V.Local.iCnt).CUSTOMER!FieldValTrim)
	V.Local.sOrderNo.Set(V.DataTable.[V.Args.DATATABLE](V.Local.iCnt).ORDER_NO!FieldValTrim)
	V.Local.sOrderLine.Set(V.DataTable.[V.Args.DATATABLE](V.Local.iCnt).ORDER_LINE!FieldValTrim)
	
	'query customer notes table to get those records where it is to be included on the sales order
	F.Intrinsic.String.Build("SELECT LTRIM(RTRIM(TEXT)) AS TEXT FROM V_CUST_HF_TEXT WHERE CUST = '{0}' AND ON_SORDR = 1 ", V.Local.sCustomer.Trim, V.Local.sSQL)
	
	'Check to see if temp datatable exists. If it does, close it
	F.Intrinsic.Control.If(V.DataTable.dtTemp.Exists,=,True)
		F.Data.DataTable.Close("dtTemp")
	F.Intrinsic.Control.EndIf
	'create temp datatable to get the customer comments
	F.Data.DataTable.CreateFromSQL("dtTemp", "con", V.Local.sSQL)
	'create the dataview
	F.Data.DataView.Create("dtTemp", "dvTemp",22)
	'send the dataview to string 
	F.Data.DataView.ToString("dtTemp", "dvTemp", "TEXT", "*!*", "#$#", V.Local.sRet2)
	'close the dataview
	F.Data.DataView.Close("dtTemp", "dvTemp")
	'check to see if the query returned anything. If it did, split the records and add to child grid
	F.Intrinsic.Control.If(V.Local.sRet2.Trim,<>,"")
		F.Intrinsic.String.Split(V.Local.sRet2, "#$#", V.Local.sRet2)
		F.Intrinsic.Control.For(V.Local.iCnt2, 0, V.Local.sRet2.UBound,1)
			F.Intrinsic.String.Replace(V.Local.sRet2(V.Local.iCnt2), V.Ambient.NewLine, " ", V.Local.sNotes)
			F.Data.DataTable.AddRow(V.Local.sChildDatatable.Trim, "CUSTOMER",v.Local.sCustomer.Trim, "ORDER_NO", V.Local.sOrderNo.Trim, "ORDER_LINE", V.Local.sOrderLine.Trim, "CUST_NOTES",V.Local.sNotes.Trim)
		F.Intrinsic.Control.Next(V.Local.iCnt2)
	F.Intrinsic.Control.EndIf
	
'--------------------------------------------------------------------------------
	'query customer notes table to get those records where it is to be included on the sales order
	F.Intrinsic.String.Build("SELECT LTRIM(RTRIM(TEXT)) AS TEXT FROM V_CUST_HF_TEXT WHERE CUST = '{0}' AND ON_PKLIST = 1 ", V.Local.sCustomer.Trim, V.Local.sSQL)
	
	'Check to see if temp datatable exists. If it does, close it
	F.Intrinsic.Control.If(V.DataTable.dtTemp.Exists,=,True)
		F.Data.DataTable.Close("dtTemp")
	F.Intrinsic.Control.EndIf
	'create temp datatable to get the customer comments
	F.Data.DataTable.CreateFromSQL("dtTemp", "con", V.Local.sSQL)
	'create the dataview
	F.Data.DataView.Create("dtTemp", "dvTemp",22)
	'send the dataview to string 
	F.Data.DataView.ToString("dtTemp", "dvTemp", "TEXT", "*!*", "#$#", V.Local.sRet2)
	'close the dataview
	F.Data.DataView.Close("dtTemp", "dvTemp")
	'check to see if the query returned anything. If it did, split the records and add to child grid
	F.Intrinsic.Control.If(V.Local.sRet2.Trim,<>,"")
		F.Intrinsic.String.Split(V.Local.sRet2, "#$#", V.Local.sRet2)
		F.Intrinsic.Control.For(V.Local.iCnt2, 0, V.Local.sRet2.UBound,1)
			F.Intrinsic.String.Replace(V.Local.sRet2(V.Local.iCnt2), V.Ambient.NewLine, " ", V.Local.sNotes)
			F.Data.DataTable.AddRow(V.Local.sChildDatatable.Trim, "CUSTOMER",v.Local.sCustomer.Trim, "ORDER_NO", V.Local.sOrderNo.Trim, "ORDER_LINE", V.Local.sOrderLine.Trim, "SHIPMENT_NOTES", V.Local.sNotes.Trim)
		F.Intrinsic.Control.Next(V.Local.iCnt2)
	F.Intrinsic.Control.EndIf
'-----------------------------------------------	
	'query customer notes table 
	F.Intrinsic.String.Build("SELECT LTRIM(RTRIM(TEXT)) AS TEXT FROM V_CUST_HF_TEXT WHERE CUST = '{0}' AND ON_SORDR = 0 AND ON_INVC = 0 AND ON_BOL = 0 AND ON_PKLIST = 0 AND ON_QUOTE = 0 AND ON_WO = 0 ", V.Local.sCustomer.Trim, V.Local.sSQL)
	
	'Check to see if temp datatable exists. If it does, close it
	F.Intrinsic.Control.If(V.DataTable.dtTemp.Exists,=,True)
		F.Data.DataTable.Close("dtTemp")
	F.Intrinsic.Control.EndIf
	'create temp datatable to get the customer comments
	F.Data.DataTable.CreateFromSQL("dtTemp", "con", V.Local.sSQL)
	'create the dataview
	F.Data.DataView.Create("dtTemp", "dvTemp",22)
	'send the dataview to string 
	F.Data.DataView.ToString("dtTemp", "dvTemp", "TEXT", "*!*", "#$#", V.Local.sRet2)
	'close the dataview
	F.Data.DataView.Close("dtTemp", "dvTemp")
	
	F.Intrinsic.Control.If(V.Local.sRet2.Trim,<>,"")
		F.Intrinsic.String.Split(V.Local.sRet2, "#$#", V.Local.sRet2)
		F.Intrinsic.Control.For(V.Local.iCnt2, 0, V.Local.sRet2.UBound,1)
			F.Intrinsic.String.Replace(V.Local.sRet2(V.Local.iCnt2), V.Ambient.NewLine, " ", V.Local.sNotes)
			F.Data.DataTable.AddRow(V.Local.sChildDatatable.Trim, "CUSTOMER",v.Local.sCustomer.Trim, "ORDER_NO", V.Local.sOrderNo.Trim, "ORDER_LINE", V.Local.sOrderLine.Trim, "CUST_NOTES", V.Local.sNotes.Trim)
		F.Intrinsic.Control.Next(V.Local.iCnt2)
	F.Intrinsic.Control.EndIf
'------------------------------------------------------	
	'query sales order text table to get the header notes
	'query sales order text lines table to get the lines notes
	
'	F.Intrinsic.String.Build("SELECT LTRIM(RTRIM(TEXT)) AS TEXT FROM V_ORDER_HF_TEXT WHERE ORDER_NUMBER = '{0}' AND ON_SORDR = 1", v.Local.sOrderNo.Trim, v.Local.sSQL)
'	'Check to see if temp datatable exists. If it does, close it
'	F.Intrinsic.Control.If(V.DataTable.dtTemp.Exists,=,True)
'		F.Data.DataTable.Close("dtTemp")
'	F.Intrinsic.Control.EndIf
'	'create temp datatable to get the customer comments
'	F.Data.DataTable.CreateFromSQL("dtTemp", "con", V.Local.sSQL)
'	'create the dataview
'	F.Data.DataView.Create("dtTemp", "dvTemp",22)
'	'send the dataview to string 
'	F.Data.DataView.ToString("dtTemp", "dvTemp", "TEXT", "*!*", "#$#", V.Local.sRet2)
'	'close the dataview
'	F.Data.DataView.Close("dtTemp", "dvTemp")
'	
'	F.Intrinsic.Control.If(V.Local.sRet2.Trim,<>,"")
'		F.Intrinsic.String.Split(V.Local.sRet2, "#$#", V.Local.sRet2)
'		F.Intrinsic.Control.For(V.Local.iCnt2, 0, V.Local.sRet2.UBound,1)
'			F.Data.DataTable.AddRow(V.Local.sChildDatatable.Trim, "CUSTOMER",v.Local.sCustomer.Trim, "ORDER_NO", V.Local.sOrderNo.Trim, "ORDER_LINE", V.Local.sOrderLine.Trim, "ORDER_NOTES", V.Local.sRet2(V.Local.iCnt2).Trim)
'		F.Intrinsic.Control.Next(V.Local.iCnt2)
'	F.Intrinsic.Control.EndIf
'	
'	F.Intrinsic.String.Build("SELECT LTRIM(RTRIM(TEXT)) AS TEXT FROM V_ORDER_HF_TEXT WHERE ORDER_NUMBER = '{0}' AND ON_PKLIST = 1", v.Local.sOrderNo.Trim, v.Local.sSQL)
'	'Check to see if temp datatable exists. If it does, close it
'	F.Intrinsic.Control.If(V.DataTable.dtTemp.Exists,=,True)
'		F.Data.DataTable.Close("dtTemp")
'	F.Intrinsic.Control.EndIf
'	'create temp datatable to get the customer comments
'	F.Data.DataTable.CreateFromSQL("dtTemp", "con", V.Local.sSQL)
'	'create the dataview
'	F.Data.DataView.Create("dtTemp", "dvTemp",22)
'	'send the dataview to string 
'	F.Data.DataView.ToString("dtTemp", "dvTemp", "TEXT", "*!*", "#$#", V.Local.sRet2)
'	'close the dataview
'	F.Data.DataView.Close("dtTemp", "dvTemp")
'	
'	F.Intrinsic.Control.If(V.Local.sRet2.Trim,<>,"")
'		F.Intrinsic.String.Split(V.Local.sRet2, "#$#", V.Local.sRet2)
'		F.Intrinsic.Control.For(V.Local.iCnt2, 0, V.Local.sRet2.UBound,1)
'			F.Data.DataTable.AddRow(V.Local.sChildDatatable.Trim, "CUSTOMER",v.Local.sCustomer.Trim, "ORDER_NO", V.Local.sOrderNo.Trim, "ORDER_LINE", V.Local.sOrderLine.Trim, "SHIPMENT_NOTES", V.Local.sRet2(V.Local.iCnt2).Trim)
'		F.Intrinsic.Control.Next(V.Local.iCnt2)
'	F.Intrinsic.Control.EndIf
'	
'	F.Intrinsic.String.Build("SELECT LTRIM(RTRIM(TEXT)) AS TEXT FROM V_ORDER_HF_TEXT WHERE ORDER_NUMBER = '{0}' AND ON_SORDR = 0 AND ON_INVC = 0 AND ON_BOL = 0 AND ON_PKLIST = 0 AND ON_QUOTE = 0 ", v.Local.sOrderNo.Trim, v.Local.sSQL)
'	'Check to see if temp datatable exists. If it does, close it
'	F.Intrinsic.Control.If(V.DataTable.dtTemp.Exists,=,True)
'		F.Data.DataTable.Close("dtTemp")
'	F.Intrinsic.Control.EndIf
'	'create temp datatable to get the customer comments
'	F.Data.DataTable.CreateFromSQL("dtTemp", "con", V.Local.sSQL)
'	'create the dataview
'	F.Data.DataView.Create("dtTemp", "dvTemp",22)
'	'send the dataview to string 
'	F.Data.DataView.ToString("dtTemp", "dvTemp", "TEXT", "*!*", "#$#", V.Local.sRet2)
'	'close the dataview
'	F.Data.DataView.Close("dtTemp", "dvTemp")
'	
'	F.Intrinsic.Control.If(V.Local.sRet2.Trim,<>,"")
'		F.Intrinsic.String.Split(V.Local.sRet2, "#$#", V.Local.sRet2)
'		F.Intrinsic.Control.For(V.Local.iCnt2, 0, V.Local.sRet2.UBound,1)
'			F.Data.DataTable.AddRow(V.Local.sChildDatatable.Trim, "CUSTOMER",v.Local.sCustomer.Trim, "ORDER_NO", V.Local.sOrderNo.Trim, "ORDER_LINE", V.Local.sOrderLine.Trim, "ORDER_NOTES", V.Local.sRet2(V.Local.iCnt2).Trim)
'		F.Intrinsic.Control.Next(V.Local.iCnt2)
'	F.Intrinsic.Control.EndIf
'	
'-----------------------------------------------------------------
'	'ORDER LINE TEXT
'	F.Intrinsic.String.Build("SELECT LTRIM(RTRIM(TEXT)) AS TEXT FROM V_ORDER_LN_TEXT WHERE ORDER_NUM = '{0}' AND ORDER_LINE = '{1}' AND ORDER_TYPE = 9999 ", v.Local.sOrderNo.Trim, V.Local.sOrderLine.Trim, v.Local.sSQL)
'	'Check to see if temp datatable exists. If it does, close it
'	F.Intrinsic.Control.If(V.DataTable.dtTemp.Exists,=,True)
'		F.Data.DataTable.Close("dtTemp")
'	F.Intrinsic.Control.EndIf
'	'create temp datatable to get the customer comments
'	F.Data.DataTable.CreateFromSQL("dtTemp", "con", V.Local.sSQL)
'	'create the dataview
'	F.Data.DataView.Create("dtTemp", "dvTemp",22)
'	'send the dataview to string 
'	F.Data.DataView.ToString("dtTemp", "dvTemp", "TEXT", "*!*", "#$#", V.Local.sRet2)
'	'close the dataview
'	F.Data.DataView.Close("dtTemp", "dvTemp")
'	
'	F.Intrinsic.Control.If(V.Local.sRet2.Trim,<>,"")
'		F.Intrinsic.String.Split(V.Local.sRet2, "#$#", V.Local.sRet2)
'		F.Intrinsic.Control.For(V.Local.iCnt2, 0, V.Local.sRet2.UBound,1)
'			F.Data.DataTable.AddRow(V.Local.sChildDatatable.Trim, "CUSTOMER",v.Local.sCustomer.Trim, "ORDER_NO", V.Local.sOrderNo.Trim, "ORDER_LINE", V.Local.sOrderLine.Trim, "ORDER_NOTES", V.Local.sRet2(V.Local.iCnt2).Trim)
'		F.Intrinsic.Control.Next(V.Local.iCnt2)
'	F.Intrinsic.Control.EndIf
'	
'F.Intrinsic.Control.Next(V.Local.iCnt)

'------------------------------------------------
	'Shipment Text
	F.Intrinsic.String.Build("SELECT LTRIM(RTRIM(TEXT)) AS TEXT FROM V_SHIPMENT_HF_TEXT WHERE SHIP_NUMBER = '{0}' AND ON_SORDR = 0 AND ON_INVC = 0 AND ON_BOL = 0 AND ON_PKLIST = 0 AND ON_QUOTE = 0 AND TYPE = 1 ", V.Local.sOrderNo.Trim, V.Local.sSQL)
	
	'Check to see if temp datatable exists. If it does, close it
	F.Intrinsic.Control.If(V.DataTable.dtTemp.Exists,=,True)
		F.Data.DataTable.Close("dtTemp")
	F.Intrinsic.Control.EndIf
	'create temp datatable to get the customer comments
	F.Data.DataTable.CreateFromSQL("dtTemp", "con", V.Local.sSQL)
	'create the dataview
	F.Data.DataView.Create("dtTemp", "dvTemp",22)
	'send the dataview to string 
	F.Data.DataView.ToString("dtTemp", "dvTemp", "TEXT", "*!*", "#$#", V.Local.sRet2)
	'close the dataview
	F.Data.DataView.Close("dtTemp", "dvTemp")
	
	F.Intrinsic.Control.If(V.Local.sRet2.Trim,<>,"")
		F.Intrinsic.String.Split(V.Local.sRet2, "#$#", V.Local.sRet2)
		F.Intrinsic.Control.For(V.Local.iCnt2, 0, V.Local.sRet2.UBound,1)
			F.Intrinsic.String.Replace(V.Local.sRet2(V.Local.iCnt2), V.Ambient.NewLine, " ", V.Local.sNotes)
			F.Data.DataTable.AddRow(V.Local.sChildDatatable.Trim, "CUSTOMER",v.Local.sCustomer.Trim, "ORDER_NO", V.Local.sOrderNo.Trim, "ORDER_LINE", V.Local.sOrderLine.Trim, "SHIPMENT_NOTES", V.Local.sNotes.Trim)
		F.Intrinsic.Control.Next(V.Local.iCnt2)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("SELECT LTRIM(RTRIM(TEXT)) AS TEXT FROM V_SHIPMENT_HF_TEXT WHERE SHIP_NUMBER = '{0}' AND ON_PKLIST = 1 AND TYPE = 1 ", V.Local.sOrderNo.Trim, V.Local.sSQL)
	'Check to see if temp datatable exists. If it does, close it
	F.Intrinsic.Control.If(V.DataTable.dtTemp.Exists,=,True)
		F.Data.DataTable.Close("dtTemp")
	F.Intrinsic.Control.EndIf
	'create temp datatable to get the customer comments
	F.Data.DataTable.CreateFromSQL("dtTemp", "con", V.Local.sSQL)
	'create the dataview
	F.Data.DataView.Create("dtTemp", "dvTemp",22)
	'send the dataview to string 
	F.Data.DataView.ToString("dtTemp", "dvTemp", "TEXT", "*!*", "#$#", V.Local.sRet2)
	'close the dataview
	F.Data.DataView.Close("dtTemp", "dvTemp")
	
	F.Intrinsic.Control.If(V.Local.sRet2.Trim,<>,"")
		F.Intrinsic.String.Split(V.Local.sRet2, "#$#", V.Local.sRet2)
		F.Intrinsic.Control.For(V.Local.iCnt2, 0, V.Local.sRet2.UBound,1)
			F.Intrinsic.String.Replace(V.Local.sRet2(V.Local.iCnt2), V.Ambient.NewLine, " ", V.Local.sNotes)
			F.Data.DataTable.AddRow(V.Local.sChildDatatable.Trim, "CUSTOMER",v.Local.sCustomer.Trim, "ORDER_NO", V.Local.sOrderNo.Trim, "ORDER_LINE", V.Local.sOrderLine.Trim, "SHIPMENT_NOTES", V.Local.sNotes.Trim)
		F.Intrinsic.Control.Next(V.Local.iCnt2)
	F.Intrinsic.Control.EndIf

'--------------------------------------------------------------------------------------
'SHIPMENT LINE TEXT
	F.Intrinsic.String.Build("SELECT LTRIM(RTRIM(TEXT)) AS TEXT FROM V_SHIPMENT_LN_TEXT WHERE SHIP_NUMBER = '{0}' AND LINE = '{1}' AND TYPE = 9999 ", v.Local.sOrderNo.Trim, V.Local.sOrderLine.Trim, v.Local.sSQL)
	'Check to see if temp datatable exists. If it does, close it
	F.Intrinsic.Control.If(V.DataTable.dtTemp.Exists,=,True)
		F.Data.DataTable.Close("dtTemp")
	F.Intrinsic.Control.EndIf
	'create temp datatable to get the customer comments
	F.Data.DataTable.CreateFromSQL("dtTemp", "con", V.Local.sSQL)
	'create the dataview
	F.Data.DataView.Create("dtTemp", "dvTemp",22)
	'send the dataview to string 
	F.Data.DataView.ToString("dtTemp", "dvTemp", "TEXT", "*!*", "#$#", V.Local.sRet2)
	'close the dataview
	F.Data.DataView.Close("dtTemp", "dvTemp")
	
	F.Intrinsic.Control.If(V.Local.sRet2.Trim,<>,"")
		F.Intrinsic.String.Split(V.Local.sRet2, "#$#", V.Local.sRet2)
		F.Intrinsic.Control.For(V.Local.iCnt2, 0, V.Local.sRet2.UBound,1)
			F.Intrinsic.String.Replace(V.Local.sRet2(V.Local.iCnt2), V.Ambient.NewLine, " ", V.Local.sNotes)
			F.Data.DataTable.AddRow(V.Local.sChildDatatable.Trim, "CUSTOMER",v.Local.sCustomer.Trim, "ORDER_NO", V.Local.sOrderNo.Trim, "ORDER_LINE", V.Local.sOrderLine.Trim, "SHIPMENT_NOTES", V.Local.sNotes.Trim)
		F.Intrinsic.Control.Next(V.Local.iCnt2)
	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Next(V.Local.iCnt)

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.GetNotes.End

Program.Sub.cmdNew_Click.Start
F.Intrinsic.Control.Try
V.Local.iRet.Declare(Long)
V.Local.iLoadNo.Declare(Long)
V.Local.sSelect.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sTruckNo.Declare(String)
V.Local.sFilter.Declare(String)


F.Intrinsic.Control.If(V.Global.bExistingLoad,=,False)
	'check to see if there are records in the datatable. If there are, clear the grid and screen and start fresh
	F.Intrinsic.Control.If(V.DataTable.dtCurrentLoad.RowCount--,>,-1)
		'ask the user if they want to save before they continue
		F.Intrinsic.UI.Msgbox("Would you like to Save the Current Truck Load before you can continue with a New Truck Load?", "Warning",4, V.Local.iRet)
		F.Intrinsic.Control.If(V.Local.iRet,=,6)
			'the user clicked yes
			F.Intrinsic.Control.CallSub(cmdSave_Click)
		F.Intrinsic.Control.ElseIf(V.Local.iRet,=,7)
			'the user clicked no
			F.Data.DataTable.DeleteRow("dtCurrentLoad")
			F.Data.DataTable.AcceptChanges("dtCurrentLoad")
			
			
			Gui.f_Main.txtLoader.Text("")
			Gui.f_Main.txtDriver.Text("")
			Gui.f_Main.txtLength.Text("")
			Gui.f_Main.txtLoadNo.Text("")
			Gui.f_Main.txtTruckNo.Text("")
			Gui.f_Main.txtWidth.Text("")
			Gui.f_Main.txtRemWt.Text("")
			Gui.f_Main.chkShuttle.Value(0)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.ElseIf(V.Global.bExistingLoad,=,True)

	F.Data.DataTable.DeleteRow("dtCurrentLoad")
	F.Data.DataTable.AcceptChanges("dtCurrentLoad")
	
	
	Gui.f_Main.txtLoader.Text("")
	Gui.f_Main.txtDriver.Text("")
	Gui.f_Main.txtLength.Text("")
	Gui.f_Main.txtLoadNo.Text("")
	Gui.f_Main.txtTruckNo.Text("")
	Gui.f_Main.txtWidth.Text("")
	Gui.f_Main.txtRemWt.Text("")
	Gui.f_Main.chkShuttle.Value(0)

F.Intrinsic.Control.EndIf

'check to see if a truck number has been entered
F.Intrinsic.Control.If(V.Screen.f_Main!txtTruckNo.Text,=,"")
	F.Intrinsic.UI.Msgbox("You must enter or select a Truck Number beofre you can continue.", "Required Field")
	Gui.f_Main.txtTruckNo.SetFocus
	Gui.f_Main.cmdSave.Enabled(True)
	Gui.f_Main.cmdConvert.Enabled(True)
	Gui.f_Main.cmdDelete.Enabled(True)
	Gui.f_Main.cmdTrckBrw.Enabled(True)
	Gui.f_Main.cmdDriverBrws.Enabled(True)
	Gui.f_Main.cmdLoadBrws.Enabled(True)
	
	Gui.f_Main.txtTruckNo.Enabled(True)
	Gui.f_Main.txtDriver.Enabled(True)
	Gui.f_Main.txtLoader.Enabled(True)
	Gui.f_Main.chkShuttle.Enabled(True)
	Gui.f_Main.dtpShipDate.Enabled(True)
F.Intrinsic.Control.ElseIf(V.Screen.f_Main!txtTruckNo.Text,<>,"")
	'query GCG_6880_EXIST_LOADS to get the last load number
	v.Local.sTruckNo.Set(V.Screen.f_Main!txtTruckNo.Text)
	f.Intrinsic.String.Build("SELECT TOP 1 LOAD_NO FROM GCG_6880_LOAD_DTL WHERE  TRUCK_NO = '{0}' ORDER BY LOAD_NO DESC", V.Local.sTruckNo.Trim, V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
		V.Local.iLoadNo.Set(V.Local.sRet.Long)
		'add 1 to the last load number to get the new load number
		F.Intrinsic.Math.Add(V.Local.iLoadNo, 1, V.Local.iLoadNo)
	F.Intrinsic.Control.Else
		V.Local.iLoadNo.Set(1)
	F.Intrinsic.Control.EndIf

	'set the load number text box
	Gui.f_Main.txtLoadNo.Text(V.Local.iLoadNo)
	
	Gui.f_Main.cmdSave.Enabled(True)
	Gui.f_Main.cmdConvert.Enabled(True)
	Gui.f_Main.cmdDelete.Enabled(True)
	Gui.f_Main.cmdTrckBrw.Enabled(True)
	Gui.f_Main.cmdDriverBrws.Enabled(True)
	Gui.f_Main.cmdLoadBrws.Enabled(True)
	
	Gui.f_Main.txtTruckNo.Enabled(True)
	Gui.f_Main.txtDriver.Enabled(True)
	Gui.f_Main.txtLoader.Enabled(True)
	Gui.f_Main.chkShuttle.Enabled(True)
	Gui.f_Main.dtpShipDate.Enabled(True)
F.Intrinsic.Control.EndIf


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.cmdNew_Click.End

Program.Sub.cmdSave_Click.Start
F.Intrinsic.Control.Try
V.Local.iCnt.Declare(Long)
V.Local.iLoadNo.Declare(Long)
V.Local.sTruckNo.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sTruckDriver.Declare(String)
V.Local.fRemWt.Declare(String)
V.Local.dShipDate.Declare(Date)
V.Local.sShipDate.Declare(String)
v.Local.fWidth.Declare(Float)
V.Local.fLength.Declare(Float)
V.Local.sLoader.Declare(String)
V.Local.iRet.Declare(Long)


F.Intrinsic.UI.InvokeWaitDialog("Saving Truck Load...", "Please Wait")
V.Local.iLoadNo.Set(V.Screen.f_Main!txtLoadNo.Text)
V.Local.sTruckNo.Set(V.Screen.f_Main!txtTruckNo.Text)
'F.Intrinsic.String.Build("SELECT * FROM GCG_6880_LOAD_DTL WHERE LOAD_NO = '{0}' AND TRUCK_NO = '{1}'", v.Local.iLoadNo, V.Local.sTruckNo.Trim, V.Local.sSQL)
'check to see if records exist for the load number and truck number
'F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Local.sRet)
'F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
	'if records exist, delete them
'	F.Intrinsic.String.Build("DELETE FROM GCG_6880_LOAD_DTL WHERE LOAD_NO = '{0}' AND TRUCK_NO = '{1}'", v.Local.iLoadNo, V.Local.sTruckNo.Trim, V.Local.sSQL)
'	F.ODBC.Connection!con.Execute(V.Local.sSQL)
'F.Intrinsic.Control.EndIf

'save current load to the load detail table 
V.Local.sTruckDriver.Set(V.Screen.f_Main!txtDriver.Text)
V.Local.fRemWt.Set(V.Screen.f_Main!txtRemWt.Text)
V.Local.dShipDate.Set(V.Screen.f_Main!dtpShipDate.Value)
F.Intrinsic.String.Format(V.Local.dShipDate, "YYYY-MM-DD", V.Local.sShipDate)

V.Local.fWidth.Set(V.Screen.f_Main!txtWidth.Text)
V.Local.fLength.Set(V.Screen.f_Main!txtLength.Text)
V.Local.sLoader.Set(V.Screen.f_Main!txtLoader.Text)

F.Data.DataTable.AcceptChanges("dtCurrentLoad")
F.Intrinsic.Control.For(V.Local.iCnt, 0, v.DataTable.dtCurrentLoad.RowCount--,1)
	'check to see if the records exist. If they do, update them, if they don't insert them
	F.Intrinsic.String.Build("SELECT * FROM GCG_6880_LOAD_DTL WHERE LOAD_NO = '{0}' AND TRUCK_NO = '{1}' AND ORDER_NO = '{2}' AND ORDER_LINE = '{3}'", v.Local.iLoadNo, V.Local.sTruckNo.Trim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ORDER_NO!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ORDER_LINE!FieldValTrim,V.Local.sSQL)
	'check to see if records exist for the load number and truck number
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
		F.Intrinsic.String.Build("UPDATE GCG_6880_lOAD_DTL SET  TRUCK_LOADER = '{0}', TRUCK_DRIVER = '{1}', TRUCK_LENGTH = '{2}', TRUCK_WIDTH = '{3}', REM_WEIGHT = '{4}', SHIP_DATE = '{5}', STOP_NO = '{6}', ORDER_NO = '{7}', ORDER_LINE = '{8}', CUSTOMER = '{9}', CUST_NAME = '{10}', ZONE = '{11}', ZONE_SEQ = '{12}',PART = '{13}', DESCRIPTION = '{14}', QTY = '{15}', UM = '{16}', WEIGHT = '{17}', PCK_NO = '{18}', ADDRESS_1 = '{19}', ADDRESS_2 = '{20}', CITY = '{21}', STATE = '{22}', ZIP = '{23}', SHUTTLE_TRCK = '{24}' WHERE LOAD_NO = '{25}' AND TRUCK_NO = '{26}' AND ORDER_NO = '{7}' AND ORDER_LINE = '{8}'", V.Local.sLoader.Trim, V.Local.sTruckDriver.Trim, V.Local.fLength, v.Local.fWidth, v.Local.fRemWt, V.Local.sShipDate, V.DataTable.dtCurrentLoad(V.Local.iCnt).STOP_NO!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ORDER_NO!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ORDER_LINE!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).CUSTOMER!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).CUST_NAME!FieldValtrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ZONE!FieldVal, V.DataTable.dtCurrentLoad(V.Local.iCnt).ZONE_SEQ!FieldVal, V.DataTable.dtCurrentLoad(V.Local.iCnt).PART!FieldVal, V.DataTable.dtCurrentLoad(V.Local.iCnt).DESCRIPTION!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).QTY!FieldValFloat, V.DataTable.dtCurrentLoad(V.Local.iCnt).UM!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).WEIGHT!FieldValFloat,V.DataTable.dtCurrentLoad(V.Local.iCnt).PCK_NO!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ADDRESS_1!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ADDRESS_2!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).CITY!FieldValTrim,V.DataTable.dtCurrentLoad(V.Local.iCnt).STATE!FieldValTrim,V.DataTable.dtCurrentLoad(V.Local.iCnt).ZIP!FieldValTrim, V.Screen.f_Main!chkShuttle.Value, V.Local.iLoadNo, V.Local.sTruckNo.Trim, V.Local.sSQL)
		'F.Intrinsic.String.Build("UPDATE GCG_6880_lOAD_DTL SET  TRUCK_LOADER = '{0}', TRUCK_DRIVER = '{1}', TRUCK_LENGTH = '{2}', TRUCK_WIDTH = '{3}', REM_WEIGHT = '{4}', SHIP_DATE = '{5}', STOP_NO = '{6}', ORDER_NO = '{7}', ORDER_LINE = '{8}', CUSTOMER = '{9}', CUST_NAME = '{10}', ZONE = '{11}', ZONE_SEQ = '{12}',PART = '{13}', DESCRIPTION = '{14}', QTY = '{15}', UM = '{16}', WEIGHT = '{17}', PCK_NO = '{18}', ADDRESS_1 = '{19}', ADDRESS_2 = '{20}', ADDRESS_3 = '{21}', ADDRESS_4 = '{22}', ADDRESS_5 = '{23}', CITY = '{24}', STATE = '{25}', ZIP = '{26}', SHUTTLE_TRCK = '{27}' WHERE LOAD_NO = '{28}' AND TRUCK_NO = '{29}' AND ORDER_NO = '{7}' AND ORDER_LINE = '{8}'", V.Local.sLoader.Trim, V.Local.sTruckDriver.Trim, V.Local.fLength, v.Local.fWidth, v.Local.fRemWt, V.Local.sShipDate, V.DataTable.dtCurrentLoad(V.Local.iCnt).STOP_NO!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ORDER_NO!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ORDER_LINE!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).CUSTOMER!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).CUST_NAME!FieldValtrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ZONE!FieldVal, V.DataTable.dtCurrentLoad(V.Local.iCnt).ZONE_SEQ!FieldVal, V.DataTable.dtCurrentLoad(V.Local.iCnt).PART!FieldVal, V.DataTable.dtCurrentLoad(V.Local.iCnt).DESCRIPTION!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).QTY!FieldValFloat, V.DataTable.dtCurrentLoad(V.Local.iCnt).UM!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).WEIGHT!FieldValFloat,V.DataTable.dtCurrentLoad(V.Local.iCnt).PCK_NO!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ADDRESS_1!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ADDRESS_2!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ADDRESS_3!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ADDRESS_4!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ADDRESS_5!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).CITY!FieldValTrim,V.DataTable.dtCurrentLoad(V.Local.iCnt).STATE!FieldValTrim,V.DataTable.dtCurrentLoad(V.Local.iCnt).ZIP!FieldValTrim, V.Screen.f_Main!chkShuttle.Value, V.Local.iLoadNo, V.Local.sTruckNo.Trim, V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
	F.Intrinsic.Control.Else
		'insert the values into the load detail table
		F.Intrinsic.String.Build("INSERT INTO GCG_6880_LOAD_DTL (LOAD_NO, TRUCK_NO, TRUCK_LOADER, TRUCK_DRIVER, TRUCK_LENGTH, TRUCK_WIDTH, REM_WEIGHT, SHIP_DATE, STOP_NO, ORDER_NO, ORDER_LINE, CUSTOMER, CUST_NAME, ZONE, ZONE_SEQ,PART, DESCRIPTION, QTY, UM, WEIGHT, PCK_NO, ADDRESS_1, ADDRESS_2, CITY, STATE, ZIP, SHUTTLE_TRCK) VALUES ('{0}', '{1}', '{2}', '{3}', '{4}','{5}','{6}','{7}','{8}','{9}', '{10}', '{11}','{12}', '{13}', '{14}','{15}','{16}','{17}','{18}', '{19}', '{20}', '{21}', '{22}', '{23}', '{24}', '{25}', '{26}')", V.Local.iLoadNo, V.Local.sTruckNo.Trim, V.Local.sLoader.Trim, V.Local.sTruckDriver.Trim, V.Local.fLength, v.Local.fWidth, v.Local.fRemWt, V.Local.sShipDate, V.DataTable.dtCurrentLoad(V.Local.iCnt).STOP_NO!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ORDER_NO!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ORDER_LINE!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).CUSTOMER!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).CUST_NAME!FieldValtrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ZONE!FieldVal, V.DataTable.dtCurrentLoad(V.Local.iCnt).ZONE_SEQ!FieldVal, V.DataTable.dtCurrentLoad(V.Local.iCnt).PART!FieldVal, V.DataTable.dtCurrentLoad(V.Local.iCnt).DESCRIPTION!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).QTY!FieldValFloat, V.DataTable.dtCurrentLoad(V.Local.iCnt).UM!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).WEIGHT!FieldValFloat,V.DataTable.dtCurrentLoad(V.Local.iCnt).PCK_NO!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ADDRESS_1!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ADDRESS_2!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).CITY!FieldValTrim,V.DataTable.dtCurrentLoad(V.Local.iCnt).STATE!FieldValTrim,V.DataTable.dtCurrentLoad(V.Local.iCnt).ZIP!FieldValTrim, V.Screen.f_Main!chkShuttle.Value, V.Local.sSQL)
		
		'F.Intrinsic.String.Build("INSERT INTO GCG_6880_LOAD_DTL (LOAD_NO, TRUCK_NO, TRUCK_LOADER, TRUCK_DRIVER, TRUCK_LENGTH, TRUCK_WIDTH, REM_WEIGHT, SHIP_DATE, STOP_NO, ORDER_NO, ORDER_LINE, CUSTOMER, CUST_NAME, ZONE, ZONE_SEQ,PART, DESCRIPTION, QTY, UM, WEIGHT, PCK_NO, ADDRESS_1, ADDRESS_2, ADDRESS_3, ADDRESS_4, ADDRESS_5, CITY, STATE, ZIP, SHUTTLE_TRCK) VALUES ('{0}', '{1}', '{2}', '{3}', '{4}','{5}','{6}','{7}','{8}','{9}', '{10}', '{11}','{12}', '{13}', '{14}','{15}','{16}','{17}','{18}', '{19}', '{20}', '{21}', '{22}', '{23}', '{24}', '{25}', '{26}', '{27}', '{28}', '{29}')", V.Local.iLoadNo, V.Local.sTruckNo.Trim, V.Local.sLoader.Trim, V.Local.sTruckDriver.Trim, V.Local.fLength, v.Local.fWidth, v.Local.fRemWt, V.Local.sShipDate, V.DataTable.dtCurrentLoad(V.Local.iCnt).STOP_NO!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ORDER_NO!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ORDER_LINE!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).CUSTOMER!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).CUST_NAME!FieldValtrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ZONE!FieldVal, V.DataTable.dtCurrentLoad(V.Local.iCnt).ZONE_SEQ!FieldVal, V.DataTable.dtCurrentLoad(V.Local.iCnt).PART!FieldVal, V.DataTable.dtCurrentLoad(V.Local.iCnt).DESCRIPTION!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).QTY!FieldValFloat, V.DataTable.dtCurrentLoad(V.Local.iCnt).UM!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).WEIGHT!FieldValFloat,V.DataTable.dtCurrentLoad(V.Local.iCnt).PCK_NO!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ADDRESS_1!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ADDRESS_2!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ADDRESS_3!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ADDRESS_4!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ADDRESS_5!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).CITY!FieldValTrim,V.DataTable.dtCurrentLoad(V.Local.iCnt).STATE!FieldValTrim,V.DataTable.dtCurrentLoad(V.Local.iCnt).ZIP!FieldValTrim, V.Screen.f_Main!chkShuttle.Value, V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Next(V.Local.iCnt)

'load in process grid
F.Intrinsic.Control.CallSub(LoadInProcessGrid)

'Format In Process Grid
F.Intrinsic.Control.CallSub(FormatInProcessGrid)

F.Intrinsic.UI.Msgbox("Would you like to clear the screen?", "", 4, V.Local.iRet)
F.Intrinsic.Control.If(V.Local.iRet,=,6)
	F.Data.DataTable.DeleteRow("dtCurrentLoad")

	Gui.f_Main.txtLoader.Text("")
	Gui.f_Main.txtDriver.Text("")
	Gui.f_Main.txtLength.Text("")
	Gui.f_Main.txtLoadNo.Text("")
	Gui.f_Main.txtTruckNo.Text("")
	Gui.f_Main.txtWidth.Text("")
	Gui.f_Main.txtRemWt.Text("")
	Gui.f_Main.chkShuttle.Value(0)
	
	F.Intrinsic.UI.CloseWaitDialog
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Else
	F.Intrinsic.UI.CloseWaitDialog
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.cmdSave_Click.End

Program.Sub.cmdConvert_Click.Start
F.Intrinsic.Control.Try
V.Local.dShipDate.Declare(Date)
'create a S40 transaction
F.Intrinsic.Control.CallSub(transS40)

Gui.f_Main.txtTruckNo.Text("")
Gui.f_Main.txtDriver.Text("")
Gui.f_Main.txtLoadNo.Text("")
Gui.f_Main.txtLoader.Text("")
Gui.f_Main.txtWidth.Text("")
Gui.f_Main.txtLength.Text("")
Gui.f_Main.txtRemWt.Text("")


'Set the ship date to the next business day
F.Intrinsic.Date.DateAddWorkdays(V.Ambient.Date, 1,V.Local.dShipDate)
Gui.f_Main.dtpShipDate.Value(V.Local.dShipDate)
'Gui.f_Main.dtpShipDate.Value(V.Ambient.Date)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.cmdConvert_Click.End

Program.Sub.transS40.Start
F.Intrinsic.Control.Try
V.Local.bSuccess.Declare
V.Local.bWait.Declare
V.Local.dShipDate.Declare(Date)
V.Local.fRemWt.Declare(Float)
V.Local.fLength.Declare(Float)
V.Local.fWidth.Declare(Float)
V.Local.iCnt.Declare(Long)
V.Local.iCount.Declare
V.Local.iLoadNo.Declare(Long)
V.Local.sPackNo.Declare
V.Local.sTransID.Declare
V.Local.sSQL.Declare
V.Local.sTruckNo.Declare
V.Local.sTruckDriver.Declare
V.Local.sRet.Declare
V.Local.sShipDate.Declare(String)
V.Local.sLoader.Declare(String)

V.Local.iLoadNo.Set(V.Screen.f_Main!txtLoadNo.Text)
V.Local.sTruckNo.Set(V.Screen.f_Main!txtTruckNo.Text)
F.Intrinsic.String.Build("SELECT * FROM GCG_6880_LOAD_DTL WHERE LOAD_NO = '{0}' AND TRUCK_NO = '{1}'", v.Local.iLoadNo, V.Local.sTruckNo.Trim, V.Local.sSQL)
'check to see if records exist for the load number and truck number
F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Local.sRet)
F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
	'if records exist, delete them
	F.Intrinsic.String.Build("DELETE FROM GCG_6880_LOAD_DTL WHERE LOAD_NO = '{0}' AND TRUCK_NO = '{1}'", v.Local.iLoadNo, V.Local.sTruckNo.Trim, V.Local.sSQL)
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
F.Intrinsic.Control.EndIf

f.Intrinsic.UI.InvokeWaitDialog("Converting Staged Shipment to Open Shipment...", "Please Wait")
'loop through the detail records in the current load builder grid 
F.Intrinsic.Control.For(V.Local.iCnt, 0, V.DataTable.dtCurrentLoad.RowCount--,1)
	V.Local.sPackNo.Set(V.DataTable.dtCurrentLoad(V.Local.iCnt).PCK_NO!FieldValTrim)
	V.Local.sSQL.Set("select max(TRANS_ID) as TRANS from WIRELESS_HDR")
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sTransID)
	F.Intrinsic.Math.Add(V.Local.sTransID,1,V.Local.sTransID)
	F.Intrinsic.String.Format(V.Local.sTransID,"000000000",V.Local.sTransID)
	
	'Write the S40 transaction to WIRELESS_LINE
	F.ODBC.Connection!con.OpenLocalRecordsetRW("wir","select * from wireless_line")
	F.ODBC.con!wir.AddNew
	F.ODBC.con!wir.Set!TRANS_ID(V.Local.sTransID)
	F.ODBC.con!wir.Set!SEQ("0000")
	F.ODBC.con!wir.Set!TRANS_TYPE("S40")
	F.ODBC.con!wir.Set!FIELD_1(V.Local.sPackNo)
	F.ODBC.con!wir.Set!FIELD_24("N")
	F.ODBC.con!wir.Set!FIELD_25(0)
	F.ODBC.con!wir.Set!ERROR_ID(0)
	F.ODBC.con!wir.Update
	F.ODBC.con!wir.Close
	
	'Write the S40 transaction to WIRELESS_HDR
	Function.ODBC.Connection!con.OpenRecordsetRW("rstNew","SELECT * from WIRELESS_HDR")
	Function.ODBC.con!rstNew.AddNew
	Function.ODBC.con!rstNew.Set!TRANS_ID(V.Local.sTransID)
	Function.ODBC.con!rstNew.Set!TRANS_TYPE("S40")
	Function.ODBC.con!rstNew.Set!ATTEMPTED_DATE("00000000")
	Function.ODBC.con!rstNew.Set!ATTEMPTED_TIME("00000000")
	Function.ODBC.con!rstNew.Set!LABEL_PRINTER("UPID:1")
	Function.ODBC.con!rstNew.Set!USER_ID(V.Caller.User)
	Function.ODBC.con!rstNew.Set!BATCH(0)
	F.ODBC.con!rstNew.Update
	F.ODBC.con!rstNew.Close
	
	'Loop to see if the transaction was successful
'	V.Local.bSuccess.Set(False)
'	V.Local.iCount.Set(0)
'	F.Intrinsic.String.Build("select * from WIRELESS_HDR where TRANS_ID = '{0}'",V.Local.sTransID,V.Local.sSQL)
'	F.Intrinsic.Control.DoUntil(V.Local.bSuccess,=,True)
'		F.Intrinsic.UI.ChangeWaitStatus("Waiting for S40 Transaction Success",V.Local.iCount,0,3000)
'		F.ODBC.Connection!con.OpenLocalRecordsetRO("rstCheckS40",V.Local.sSQL)
'		F.Intrinsic.Control.If(V.ODBC.con!rstCheckS40.EOF,=,False)
'			F.Intrinsic.Control.If(V.ODBC.con!rstCheckS40.FieldValTrim!SUCCESSFUL_FLAG,=,"Y")
'				V.Local.bSuccess.Set(True)
'				F.Intrinsic.String.Build("{0}{1} {2}.",V.Global.sFulSuccess,V.Ambient.NewLine,V.DataTable.dtCurrentLoad(V.Local.iCnt).ORDER_NO!FieldValTrim,V.Global.sFulSuccess)
'				F.ODBC.con!rstCheckS40.Close
'				F.Intrinsic.Control.ExitSub
'			F.Intrinsic.Control.EndIf
'		F.Intrinsic.Control.EndIf
'		F.Intrinsic.Control.If(V.Local.iCount.++,=,3000)
'			F.Intrinsic.UI.CloseWaitDialog
'			F.Intrinsic.String.Build("{0}{1} {2}-{3}. S40 transaction failed.",V.Global.sFulFail,V.Ambient.NewLine,V.DataTable.dtCurrentLoad(V.Local.iCnt).ORDER_NO!FieldValTrim,V.DataTable.dtCurrentLoad(V.Local.iCnt).ORDER_LINE!FieldValTrim,V.Global.sFulFail)
'			F.Intrinsic.UI.Msgbox(V.Global.sFulFail)
'			V.Local.bSuccess.Set(True)
'			V.Global.bFail.Set(True)
'		F.Intrinsic.Control.EndIf
'		F.ODBC.con!rstCheckS40.Close
'	F.Intrinsic.Control.Loop
	
	F.Intrinsic.UI.CloseWaitDialog
	
	V.Local.sTruckDriver.Set(V.Screen.f_Main!txtDriver.Text)
	V.Local.fRemWt.Set(V.Screen.f_Main!txtRemWt.Text)
	V.Local.dShipDate.Set(V.Screen.f_Main!dtpShipDate.Value)
	F.Intrinsic.String.Format(V.Local.dShipDate, "YYYY-MM-DD", V.Local.sShipDate)
	v.Local.sLoader.Set(v.Screen.f_Main!txtLoader.Text)
	
	V.Local.fWidth.Set(V.Screen.f_Main!txtWidth.Text)
	V.Local.fLength.Set(V.Screen.f_Main!txtLength.Text)
	
	'insert the values into the load detail table
	F.Intrinsic.String.Build("INSERT INTO GCG_6880_LOAD_DTL (LOAD_NO, TRUCK_NO, TRUCK_LOADER, TRUCK_DRIVER, TRUCK_LENGTH, TRUCK_WIDTH, REM_WEIGHT, SHIP_DATE, STOP_NO, ORDER_NO, ORDER_LINE, CUSTOMER, CUST_NAME, ZONE, ZONE_SEQ,PART, DESCRIPTION, QTY, UM, WEIGHT, PCK_NO, ADDRESS_1, ADDRESS_2, CITY, STATE, ZIP, SHUTTLE_TRCK) VALUES ('{0}', '{1}', '{2}', '{3}', '{4}','{5}','{6}','{7}','{8}','{9}', '{10}', '{11}','{12}', '{13}', '{14}','{15}','{16}','{17}','{18}', '{19}', '{20}', '{21}', '{22}', '{23}', '{24}', '{25}', '{26}')", V.Local.iLoadNo, V.Local.sTruckNo.Trim, V.Local.sLoader.Trim, V.Local.sTruckDriver.Trim, V.Local.fLength, v.Local.fWidth, v.Local.fRemWt, V.Local.sShipDate, V.DataTable.dtCurrentLoad(V.Local.iCnt).STOP_NO!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ORDER_NO!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ORDER_LINE!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).CUSTOMER!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).CUST_NAME!FieldValtrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ZONE!FieldVal, V.DataTable.dtCurrentLoad(V.Local.iCnt).ZONE_SEQ!FieldVal, V.DataTable.dtCurrentLoad(V.Local.iCnt).PART!FieldVal, V.DataTable.dtCurrentLoad(V.Local.iCnt).DESCRIPTION!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).QTY!FieldValFloat, V.DataTable.dtCurrentLoad(V.Local.iCnt).UM!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).WEIGHT!FieldValFloat,V.DataTable.dtCurrentLoad(V.Local.iCnt).PCK_NO!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ADDRESS_1!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ADDRESS_2!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).CITY!FieldValTrim,V.DataTable.dtCurrentLoad(V.Local.iCnt).STATE!FieldValTrim,V.DataTable.dtCurrentLoad(V.Local.iCnt).ZIP!FieldValTrim,  V.Screen.f_Main!chkShuttle.Value,V.Local.sSQL)
	'F.Intrinsic.String.Build("INSERT INTO GCG_6880_LOAD_DTL (LOAD_NO, TRUCK_NO, TRUCK_LOADER, TRUCK_DRIVER, TRUCK_LENGTH, TRUCK_WIDTH, REM_WEIGHT, SHIP_DATE, STOP_NO, ORDER_NO, ORDER_LINE, CUSTOMER, CUST_NAME, ZONE, ZONE_SEQ,PART, DESCRIPTION, QTY, UM, WEIGHT, PCK_NO, ADDRESS_1, ADDRESS_2, ADDRESS_3, ADDRESS_4, ADDRESS_5, CITY, STATE, ZIP, SHUTTLE_TRCK) VALUES ('{0}', '{1}', '{2}', '{3}', '{4}','{5}','{6}','{7}','{8}','{9}', '{10}', '{11}','{12}', '{13}', '{14}','{15}','{16}','{17}','{18}', '{19}', '{20}', '{21}', '{22}', '{23}', '{24}', '{25}', '{26}', '{27}', '{28}', '{29}')", V.Local.iLoadNo, V.Local.sTruckNo.Trim, V.Local.sLoader.Trim, V.Local.sTruckDriver.Trim, V.Local.fLength, v.Local.fWidth, v.Local.fRemWt, V.Local.sShipDate, V.DataTable.dtCurrentLoad(V.Local.iCnt).STOP_NO!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ORDER_NO!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ORDER_LINE!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).CUSTOMER!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).CUST_NAME!FieldValtrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ZONE!FieldVal, V.DataTable.dtCurrentLoad(V.Local.iCnt).ZONE_SEQ!FieldVal, V.DataTable.dtCurrentLoad(V.Local.iCnt).PART!FieldVal, V.DataTable.dtCurrentLoad(V.Local.iCnt).DESCRIPTION!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).QTY!FieldValFloat, V.DataTable.dtCurrentLoad(V.Local.iCnt).UM!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).WEIGHT!FieldValFloat,V.DataTable.dtCurrentLoad(V.Local.iCnt).PCK_NO!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ADDRESS_1!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ADDRESS_2!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ADDRESS_3!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ADDRESS_4!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).ADDRESS_5!FieldValTrim, V.DataTable.dtCurrentLoad(V.Local.iCnt).CITY!FieldValTrim,V.DataTable.dtCurrentLoad(V.Local.iCnt).STATE!FieldValTrim,V.DataTable.dtCurrentLoad(V.Local.iCnt).ZIP!FieldValTrim,  V.Screen.f_Main!chkShuttle.Value,V.Local.sSQL)
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
	
	'add row to existing load table
	'F.Data.DataTable.AddRow("dtExistingLoads", "TRUCK_NO", V.Local.sTruckNo,"LOAD_NO", V.Local.iLoadNo,"LOADER", V.Local.sLoader.Trim, "SHIP_DATE", V.Local.sShipDate, "PCK_NO", v.DataTable.dtCurrentLoad(V.Local.iCnt).PCK_NO!FieldValTrim,  "TRUCK_DRIVER", V.Local.sTruckDriver.Trim, "LOADER", v.Screen.f_Main!txtLoader.Text,"ORDER_NO", v.DataTable.dtCurrentLoad(V.Local.iCnt).ORDER_NO!FieldValTrim, "ORDER_LINE", V.DataTable.dtCurrentLoad(v.Local.iCnt).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtCurrentLoad(v.Local.iCnt).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtCurrentLoad(V.Local.iCnt).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtCurrentLoad(V.Local.iCnt).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtCurrentLoad(V.Local.iCnt).ZONE_SEQ!FieldVal, "PART", V.DataTable.dtCurrentLoad(V.Local.iCnt).PART!FieldVal, "DESCRIPTION", V.DataTable.dtCurrentLoad(V.Local.iCnt).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtCurrentLoad(V.Local.iCnt).QTY!FieldValFloat, "UM", V.DataTable.dtCurrentLoad(V.Local.iCnt).UM!FieldValTrim, "WEIGHT", V.DataTable.dtCurrentLoad(V.Local.iCnt).WEIGHT!FieldValFloat)
	
	F.Data.DataTable.AddRow("dtExistingLoads", "TRUCK_NO", V.Local.sTruckNo,"LOAD_NO", V.Local.iLoadNo,"SHIP_DATE", V.Local.sShipDate, "PCK_NO",  "TRUCK_DRIVER", V.Local.sTruckDriver.Trim)
	
	'add logic to pull in the detail information needed to save to the EXIST_LOADS table
	
F.Intrinsic.Control.Next(V.Local.iCnt)


'accept changes
F.Data.DataTable.AcceptChanges("dtExistingLoads")

F.ODBC.Connection!con.Execute("DELETE FROM GCG_6880_EXIST_LOADS")
'save rows to db

F.Data.DataTable.SaveToDB("dtExistingLoads", "con", "GCG_6880_EXIST_LOADS", "", 128, "TRUCK_NO@!@TRUCK_NO*!*LOAD_NO@!@LOAD_NO*!*SHIP_DATE@!@SHIP_DATE*!*PCK_NO@!@PCK_NO*!*TRUCK_DRIVER@!@TRUCK_DRIVER*!*LOADER@!@LOADER*!*ORDER_NO@!@ORDER_NO*!*ORDER_LINE@!@ORDER_LINE*!*CUSTOMER@!@CUSTOMER*!*CUST_NAME@!@CUST_NAME*!*ZONE@!@ZONE*!*ZONE_SEQ@!@ZONE_SEQ*!*PART@!@PART*!*DESCRIPTION@!@DESCRIPTION*!*QTY@!@QTY*!*UM@!@UM*!*WEIGHT@!@WEIGHT")
'F.Data.DataTable.SaveToDB("dtExistingLoads", "con", "GCG_6880_EXIST_LOADS", "TRUCK_NO*!*LOAD_NO*!*PCK_NO", 128)

'delete all the rows from the current load table
F.Data.DataTable.DeleteRow("dtCurrentLoad")

F.Data.DataTable.AcceptChanges("dtCurrentLoad")

Gui.f_Main.txtLoader.Text("")
Gui.f_Main.txtDriver.Text("")
Gui.f_Main.txtLength.Text("")
Gui.f_Main.txtWidth.Text("")
Gui.f_Main.txtRemWt.Text("")
Gui.f_Main.chkShuttle.Value(0)


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.transS40.End

Program.Sub.cmdDelete_Click.Start
F.Intrinsic.Control.Try
V.Local.fRemWt.Declare(Float)
V.Local.fWeight.Declare(Float)
V.Local.iCnt.Declare(Long)
V.Local.iRow.Declare(Long)
V.Local.sSQL.Declare(String)
V.Local.sLoadNo.Declare(String)
V.Local.sRet.Declare(String)

F.Data.DataTable.AcceptChanges("dtCurrentLoad")

'loop through the current load datatable and move the rows to the open staged shipment grid
f.Intrinsic.Control.For(V.Local.iCnt, 0, V.DataTable.dtCurrentLoad.RowCount--,1)
	V.Local.iRow.Set(V.Local.iCnt)
	
	'pull the remaining weight from the textbox on the screen
	V.Local.fRemWt.Set(V.Screen.f_Main!txtRemWt.Text)
			
	'pull the weight value for the line selected
	V.Local.fWeight.Set(V.DataTable.dtCurrentLoad(V.Local.iRow).WEIGHT!FieldValFloat)
			
	'ADD the weight to the remaining weight. 
	F.Intrinsic.Math.Add(V.Local.fRemWt, V.Local.fWeight, V.Local.fRemWt)
		

	'Add record to the No load gridview
	F.Data.DataTable.AddRow("dtNoLoad", "PCK_NO", V.DataTable.dtCurrentLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtCurrentLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtCurrentLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtCurrentLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtCurrentLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtCurrentLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtCurrentLoad(V.Local.iRow).ZONE_SEQ!FieldVal, "ADDRESS_1", v.DataTable.dtCurrentLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtCurrentLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "CITY", V.DataTable.dtCurrentLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtCurrentLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtCurrentLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtCurrentLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtCurrentLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtCurrentLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtCurrentLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtCurrentLoad(V.Local.iRow).WEIGHT!FieldValFloat, "STATUS", "STAGED")
	
	'F.Data.DataTable.AddRow("dtNoLoad", "PCK_NO", V.DataTable.dtCurrentLoad(V.Local.iRow).PCK_NO!FieldValTrim, "ORDER_NO", V.DataTable.dtCurrentLoad(V.Local.iRow).ORDER_NO!FieldValtrim, "ORDER_LINE", V.DataTable.dtCurrentLoad(V.Local.iRow).ORDER_LINE!FieldValTrim, "CUSTOMER", V.DataTable.dtCurrentLoad(V.Local.iRow).CUSTOMER!FieldValTrim, "CUST_NAME", V.DataTable.dtCurrentLoad(V.Local.iRow).CUST_NAME!FieldValTrim, "ZONE", V.DataTable.dtCurrentLoad(V.Local.iRow).ZONE!FieldVal, "ZONE_SEQ", V.DataTable.dtCurrentLoad(V.Local.iRow).ZONE_SEQ!FieldVal, "ADDRESS_1", v.DataTable.dtCurrentLoad(V.Local.iRow).ADDRESS_1!fieldValTrim, "ADDRESS_2", V.DataTable.dtCurrentLoad(V.Local.iRow).ADDRESS_2!FieldValTrim, "ADDRESS_3", V.DataTable.dtCurrentLoad(v.Local.iRow).ADDRESS_3!FieldValtrim, "ADDRESS_4", V.DataTable.dtCurrentLoad(v.Local.iRow).ADDRESS_4!FieldValTrim, "ADDRESS_5", v.DataTable.dtCurrentLoad(V.Local.iRow).ADDRESS_5!FieldValTrim, "CITY", V.DataTable.dtCurrentLoad(V.Local.iRow).CITY!FieldValTrim, "STATE", V.DataTable.dtCurrentLoad(V.Local.iRow).STATE!FieldValTrim, "ZIP", V.DataTable.dtCurrentLoad(V.Local.iRow).ZIP!FieldValTrim, "PART", V.DataTable.dtCurrentLoad(V.Local.iRow).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtCurrentLoad(v.Local.iRow).DESCRIPTION!FieldValTrim, "QTY", V.DataTable.dtCurrentLoad(V.Local.iRow).QTY!FieldValFloat, "UM", V.DataTable.dtCurrentLoad(V.Local.iRow).UM!FieldValTrim, "WEIGHT", V.DataTable.dtCurrentLoad(V.Local.iRow).WEIGHT!FieldValFloat, "STATUS", "STAGED")
		
	'remove from current grid
	F.Data.DataTable.DeleteRow("dtCurrentLoad", V.Local.iRow)
			
	Gui.f_Main.txtRemWt.Text(V.Local.fRemWt)
	
'	F.Data.DataTable.AcceptChanges("dtCurrentLoad")
f.Intrinsic.Control.Next(V.Local.iCnt)

'delete the load number from the custom load detail table 
V.Local.sLoadNo.Set(V.Screen.f_Main!txtLoadNo.Text)
F.Intrinsic.String.Build("SELECT * FROM GCG_6880_LOAD_DTL WHERE LOAD_NO = '{0}'", V.Local.sLoadNo.Trim, V.Local.sSQL)
F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Local.sRet)
F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
	F.Intrinsic.String.Build("DELETE FROM GCG_6880_LOAD_DTL WHERE LOAD_NO = '{0}' ", v.Local.sLoadNo.Trim, v.Local.sSQL)
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
F.Intrinsic.Control.EndIf

'if it exists in the custom existing load table, delete it
F.Intrinsic.String.Build("SELECT * FROM GCG_6880_EXIST_LOADS WHERE LOAD_NO = '{0}'", v.Local.sLoadNo.Trim, V.Local.sSQL)
F.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL, V.Local.sRet)
F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
	F.Intrinsic.String.Build("DELETE FROM GCG_6880_EXIST_LOADS WHERE LOAD_NO = '{0}'", V.Local.sLoadNo.Trim, V.Local.sSQL)
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
F.Intrinsic.Control.EndIf

Gui.f_Main.txtDriver.Text("")
Gui.f_Main.txtTruckNo.Text("")
Gui.f_Main.txtLoader.Text("")
Gui.f_Main.txtLoadNo.Text("")
Gui.f_Main.txtLength.Text("")
Gui.f_Main.txtWidth.Text("")
Gui.f_Main.txtRemWt.Text("")

f.Data.DataTable.AcceptChanges("dtCurrentLoad")

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.cmdDelete_Click.End

Program.Sub.cmdEmail_Click.Start
F.Intrinsic.Control.Try
V.Local.iRet.Declare(Long)
V.Local.sEmailScript.Declare(String)

Gui.f_Main..Enabled(False)

F.Intrinsic.UI.InvokeWaitDialog("Running Shuttle Truck Email process...", "Please Wait")

'build the file location for the email script
F.Intrinsic.String.Build("{0}\GCG_6880_TRUCK_BUILDER.g2u", V.Caller.GasDir, V.Local.sEmailScript)
'Call the vendor email script to email the third party trucking company
F.Global.General.CallSyncGAS(V.Local.sEmailScript, "", 2, V.Local.iRet)

F.Intrinsic.UI.CloseWaitDialog

Gui.f_Main..Enabled(True)
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.cmdEmail_Click.End

Program.Sub.cmdPrint_Click.Start
F.Intrinsic.Control.Try
V.Local.iLoadNo.Declare(Long)
V.Local.sTruckNo.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sFileName.Declare(String)
V.Local.sParam.Declare(String)
V.Local.sParamVal.Declare(String)
V.Local.iRunID.Declare(Long)
V.Local.iReportID.Declare(Long)
V.Local.iLogID.Declare(Long)
V.Local.iRet.Declare(Long)
V.Local.sLogo.Declare(String)
V.Local.sOpHdr.Declare(String)
V.Local.sMessage.Declare(String)

'set the load number and truck number
V.Local.iLoadNo.Set(V.Screen.f_Main!txtLoadNo.Text)
V.Local.sTruckNo.Set(V.Screen.f_Main!txtTruckNo.Text)

F.Intrinsic.UI.InvokeWaitDialog("Printing Report...", "Please Wait")

F.ODBC.Connection!con.ExecuteAndReturn("SELECT TEXT1 FROM V_OP_HEADER WHERE ID = 401046", V.Local.sOpHdr)
F.Intrinsic.Control.If(V.Local.sOpHdr.Trim,<>,"")
	V.Local.sLogo.Set(V.Local.sOpHdr.Trim)
F.Intrinsic.Control.EndIf

'query load detail to make sure the data has been saved
F.Intrinsic.String.Build("SELECT * FROM GCG_6880_LOAD_DTL WHERE TRUCK_NO = '{0}' AND LOAD_NO = '{1}'", V.Local.sTruckNo.Trim, V.Local.iLoadNo, V.Local.sSQL)
F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Local.sRet)
F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
	'build the parameters for printing a report
	'build the file name
	F.Intrinsic.String.Build("{0}\CUSTOM\GCG_6880\{1}_MATERIAL_LOAD_{2}.PDF", V.Caller.BusintDir, V.Local.iLoadNo, V.Ambient.Date.FormatMMDDYYYY,V.Local.sFileName)
			
	'Save the corresponding state tax exemption report to PDF
	'v.Local.sParam.Set("LOAD_NO*!*TRUCK_NO*!*T_Logo")
	V.Local.sParam.Set("LOAD_NO*!*TRUCK_NO")
	V.Local.sLogo.Set("")
	'F.Intrinsic.String.Build("{0}*!*{1}*!*{2}", v.Local.iLoadNo, V.Local.sTruckNo.Trim, V.Local.sLogo.Trim, V.Local.sParamVal)
	F.Intrinsic.String.Build("{0}*!*{1}", v.Local.iLoadNo, V.Local.sTruckNo.Trim, V.Local.sParamVal)
	'	V.Local.sParamVal.Set(V.Local.sCustomer.Trim)
	F.Global.BI.GetRunID(V.Local.iRunID)
	F.Global.BI.GetIDFromName("GCG_6880_MATERIAL_LOAD.rpt", v.Local.iReportID)
	F.Global.BI.StartLogging(V.Local.iRunID, V.Local.iReportID, -1, "GCG_6880_MATERIAL_LOAD.rpt", V.Local.iLogID)
	F.Global.BI.RunReportPreProcessor(V.Local.iRunID, V.Local.iLogID, V.Local.sParam, V.Local.sParamVal,"",4, True, "",-1, "",0,V.Local.sFileName, "", V.Local.iRet)
	
	F.Intrinsic.String.Build("The Material Loading Report was saved to {0}", V.Local.sFileName, V.Local.sMessage)
	F.Intrinsic.UI.Msgbox(V.Local.sMessage)
F.Intrinsic.Control.Else
	F.Intrinsic.UI.Msgbox("You must Save the Truck Load before you can Print the Load Document.", "Save Required")
F.Intrinsic.Control.EndIf

F.Intrinsic.UI.CloseWaitDialog
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.cmdPrint_Click.End

Program.Sub.FormatViewDtl.Start
F.Intrinsic.Control.Try
V.Local.iCnt.Declare(Long)
V.Local.sDefault.Declare(String)
V.Local.sGV.Declare(String)
V.Local.sProperty.Declare(String)

Gui.F_TruckDtl.GsGcTruckDetail.AddGridviewFromDatatable("gvViewDtl", "dtTempViewDtl")
V.Local.sGV.Set("gvViewDtl")

'set gridview properties
Gui.F_TruckDtl.GsGcTruckDetail.SetGridviewProperty(V.Local.sGV, "AllowSort", False)
Gui.F_TruckDtl.GsGcTruckDetail.SetGridviewProperty(V.Local.sGV, "AllowFilter", False)
Gui.F_TruckDtl.GsGcTruckDetail.SetGridviewProperty(V.Local.sGV, "OptionsViewShowGroupPanel", False)
Gui.F_TruckDtl.GsGcTruckDetail.SetGridviewProperty(V.Local.sGV, "OptionsViewColumnAutoWidth", False)
Gui.F_TruckDtl.GsGcTruckDetail.SetGridviewProperty(V.Local.sGV, "MultiSelect", False)
Gui.F_TruckDtl.GsGcTruckDetail.SetGridviewProperty(V.Local.sGV, "ShowDetailTabs", True)

V.Local.sProperty.Set("Visible")
V.Local.sDefault.Set("False")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)

'set properites for the columns
V.Local.sProperty.Set("Caption")
V.Local.sDefault.Set(" ")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "LOAD_NO", V.Local.sProperty, "Load Number")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "TRUCK_NO", V.Local.sProperty, "Truck Number")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "TRUCK_DRIVER", V.Local.sProperty, "Truck Driver")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "TRUCK_LOADER", V.Local.sProperty, "Truck Loader")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "SHIP_DATE", V.Local.sProperty, "Ship Date")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "STOP_NO", V.Local.sProperty, "Stop Number")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, "Packing List")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, "Order")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, "Order Line")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, "Customer")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, "Customer Name")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, "Zone")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, "Zone Seq")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ADDRESS_1", V.Local.sProperty, "Address 1")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ADDRESS_2", V.Local.sProperty, "Address 2")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty, "City")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, "State")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ZIP", V.Local.sProperty, "Zip")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, "Part")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, "Description")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "LIST_INFO", V.Local.sProperty, "List Details")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, "Qty")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, "UM")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, "Weight")

V.Local.sProperty.Set("HeaderHAlignment")
V.Local.sDefault.Set("Left")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "LOAD_NO", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "TRUCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "TRUCK_DRIVER", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "TRUCK_LOADER", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "SHIP_DATE", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "STOP_NO", V.Local.sProperty,V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ADDRESS_1", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ADDRESS_2", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ZIP", V.Local.sProperty,V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "LIST_INFO", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("HeaderFontBold")
V.Local.sDefault.Set("True")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "LOAD_NO", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "TRUCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "TRUCK_DRIVER", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "TRUCK_LOADER", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "SHIP_DATE", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "STOP_NO", V.Local.sProperty,V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ADDRESS_1", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ADDRESS_2", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ZIP", V.Local.sProperty,V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "LIST_INFO", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("AllowEdit")
V.Local.sDefault.Set("False")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "LOAD_NO", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "TRUCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "TRUCK_DRIVER", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "TRUCK_LOADER", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "SHIP_DATE", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "STOP_NO", V.Local.sProperty,V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ADDRESS_1", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ADDRESS_2", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ZIP", V.Local.sProperty,V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "LIST_INFO", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("ReadOnly")
V.Local.sDefault.Set("True")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "LOAD_NO", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "TRUCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "TRUCK_DRIVER", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "TRUCK_LOADER", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "SHIP_DATE", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "STOP_NO", V.Local.sProperty,V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ADDRESS_1", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ADDRESS_2", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ZIP", V.Local.sProperty,V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "LIST_INFO", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("MinWidth")
V.Local.sDefault.Set("150")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "LOAD_NO", V.Local.sProperty, 95)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "TRUCK_NO", V.Local.sProperty, 95)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "TRUCK_DRIVER", V.Local.sProperty, 95)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "TRUCK_LOADER", V.Local.sProperty, 95)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "SHIP_DATE", V.Local.sProperty, 85)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "STOP_NO", V.Local.sProperty,100)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "PCK_NO", V.Local.sProperty, 95)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ORDER_NO", V.Local.sProperty, 75)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, 75)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "CUSTOMER", V.Local.sProperty, 75)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "CUST_NAME", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ZONE", V.Local.sProperty, 65)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, 75)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ADDRESS_1", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ADDRESS_2", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty,100)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, 55)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "ZIP", V.Local.sProperty,65)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty,100)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "LIST_INFO", V.Local.sProperty, V.Local.sDefault)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "QTY", V.Local.sProperty, 55)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "UM", V.Local.sProperty, 55)
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "WEIGHT", V.Local.sProperty, 75)

V.Local.sProperty.Set("SortOrder")
V.Local.sDefault.Set("Ascending")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "STOP_NO", V.Local.sProperty,V.Local.sDefault)

V.Local.sProperty.Set("DisplayCustomDatetime")
V.Local.sDefault.Set("d")
Gui.F_TruckDtl.GsGcTruckDetail.SetColumnProperty(V.Local.sGV, "SHIP_DATE", V.Local.sProperty, V.Local.sDefault)

Gui.F_TruckDtl.GsGcTruckDetail.MainView(V.Local.sGV)

'callsub to deserialize
F.Intrinsic.Control.CallSub(ViewDeserialize)

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.FormatViewDtl.End

Program.Sub.F_TruckDtl_UnLoad.Start
F.Intrinsic.Control.Try

'callsub to serialize the columns for the view detail 
F.Intrinsic.Control.CallSub(ViewSerialize)

Gui.F_TruckDtl..Visible(False)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.F_TruckDtl_UnLoad.End

Program.Sub.ViewDeserialize.Start
F.Intrinsic.Control.Try
V.Local.sSerialize.Declare(String)

F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode, "gvViewDtl",6880,3000,6,"",V.Local.sSerialize)
F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
	Gui.F_TruckDtl.GsGcTruckDetail.Deserialize(V.Local.sSerialize)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.ViewDeserialize.End

Program.Sub.ViewSerialize.Start
F.Intrinsic.Control.Try
V.Local.sSerialize.Declare(String)
V.Local.sTemp.Declare(String)

Gui.F_TruckDtl.GsGcTruckDetail.Serialize("gvViewDtl", V.Local.sSerialize)
F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"gvViewDtl",6880,3000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.ViewSerialize.End

Program.Sub.f_Main_UnLoad.Start
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.Global.bLoadData,=,True)
	'callsub to serialize the grid
	F.Intrinsic.Control.CallSub(Serialize)
F.Intrinsic.Control.EndIf

'close the connection to the DB
F.ODBC.Connection!con.Close

'end the script
F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.f_Main_UnLoad.End

Program.Sub.Deserialize.Start
F.Intrinsic.Control.Try
V.Local.sSerialize.Declare(String)

F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"gvNoLoad",6880,0,5,"",V.Local.sSerialize)
F.Intrinsic.Control.If(V.Local.sSerialize,<>,"")
	F.ODBC.Connection!common.OpenConnection(V.Ambient.Ccon,V.Ambient.Cuser,V.Ambient.Cpass)
	F.ODBC.Connection!common.Execute("Delete From Gs_Registry Where Reg_ID = 6880 And Seq < 4000;")
	F.ODBC.Connection!common.Close
F.Intrinsic.Control.EndIf

F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode, "gvNoLoad",6880,3000,6,"",V.Local.sSerialize)
F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
	Gui.f_Main.GsGcNoLoad.Deserialize(V.Local.sSerialize)
F.Intrinsic.Control.EndIf


F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode, "gvExistLoad",6880,3000,6,"",V.Local.sSerialize)
F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
	Gui.f_Main.GsGcExistLoad.Deserialize(V.Local.sSerialize)
F.Intrinsic.Control.EndIf

F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode, "gvBuilder",6880,3000,6,"",V.Local.sSerialize)
F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
	Gui.f_Main.GsGcTruckBuild.Deserialize(V.Local.sSerialize)
F.Intrinsic.Control.EndIf

F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode, "gvInProcess",6880,3000,6,"",V.Local.sSerialize)
F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
	Gui.f_Main.GsGcInProcess.Deserialize(V.Local.sSerialize)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.Deserialize.End

Program.Sub.Serialize.Start
F.Intrinsic.Control.Try
V.Local.sSerialize.Declare(String)
V.Local.sTemp.Declare(String)

Gui.f_Main.GsGcNoLoad.Serialize("gvNoLoad", V.Local.sSerialize)
F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"gvNoLoad",6880,3000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)

Gui.f_Main.GsGcExistLoad.Serialize("gvExistLoad", V.Local.sSerialize)
F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"gvExistLoad",6880,3000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)

Gui.f_Main.GsGcTruckBuild.Serialize("gvBuilder", V.Local.sSerialize)
F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"gvBuilder",6880,3000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)

Gui.f_Main.GsGcInProcess.Serialize("gvInProcess", V.Local.sSerialize)
F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"gvInProcess",6880,3000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.Serialize.End

Program.Sub.ErrorMessage.Start
'basic error message for replacing catch block
'this is really just for when printing the message and ending program
'pass error number, error description, current subroutine
'optional callback sub, this will be called before ending
'optional unattended parameters, those subs may not exist if not using them but won't be called
F.Intrinsic.Control.Try

V.Local.iError.Declare(Long)
V.Local.sErrorDescription.Declare(String)
V.Local.sSubroutine.Declare(String)
V.Local.sError.Declare(String)
V.Local.bExists.Declare(Boolean)
V.Local.sCallback.Declare(String)

V.Local.iError.Set(V.Args.ErrorNumber)
V.Local.sErrorDescription.Set(V.Args.ErrorDescription)
V.Local.sSubroutine.Set(V.Args.Subroutine)

'make sure we aren't in an error loop
F.Intrinsic.Control.If(V.Global.bError)
	F.Intrinsic.Control.End

F.Intrinsic.Control.EndIf
V.Global.bError.Set(True)

F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Local.sSubroutine, V.Local.iError, V.Local.sErrorDescription, V.Ambient.GABVersion, V.Local.sError)

F.Intrinsic.Variable.ArgExists("UNATTENDED", V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	F.Intrinsic.Control.If(V.Args.UNATTENDED)
		F.Intrinsic.Control.CallSub(UnattendedErrorMessage, "MESSAGE", V.Local.sError, "PROJECT", V.Args.PROJECT, "PROJECTTITLE", V.Args.PROJECTTITLE)
	F.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndIf

F.Intrinsic.Variable.ArgExists("Callback", V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	V.Local.sCallback.Set(V.Args.Callback.Trim)
	F.Intrinsic.Control.CallSub(V.Local.sCallback)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Caller.ScriptFile,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End

F.Intrinsic.Control.EndTry
Program.Sub.ErrorMessage.End

Program.Sub.Comments.Start
${$5$}$20.1.8347.18428$}$1
${$6$}$acollins$}$20221130144030837$}$h98hERc2yV72q0GaUGlwSaoK/aefTdVk3MDOmjKC8J986efwXPp+4uHqxtpJtqz3bhTyn5vb5g7KO2JR3WZEwg==
Program.Sub.Comments.End