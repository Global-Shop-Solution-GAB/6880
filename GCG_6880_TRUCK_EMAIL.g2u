Program.Sub.Preflight.Start
V.Global.bError.Declare(Boolean)
V.Global.bUnattended.Declare(Boolean)
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.Try
Function.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout

'Open the connection to the database
F.ODBC.Connection!con.OpenConnection(V.Ambient.PDSN, V.Ambient.PUser, V.Ambient.PPass)

'callsub to query the shipments that are going out to the 3rd party shipping company
F.Intrinsic.Control.CallSub(PullShipments)

'callsub to build the emails and queue them
F.Intrinsic.Control.CallSub(BuildEmails)

'callsub to end the program
F.Intrinsic.Control.CallSub(f_Main_Unload)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Truckload Shipment Email", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.PullShipments.Start
F.Intrinsic.Control.Try
V.Local.dTodaysDate.Declare(Date)
V.Local.dNextDay.Declare(Date)
V.Local.sSQL.Declare(String)
V.Local.sTruck.Declare(String)
V.Local.sVendorEmail.Declare(String)
V.Local.sRecipientEmail.Declare(String)
V.Local.sTodaysDate.Declare(String)
V.Local.sNextDay.Declare(String)

'set today's date
V.Local.dTodaysDate.Set(v.Ambient.Date)
'add one workday to today's date
F.Intrinsic.Date.DateAddWorkdays(V.Local.dTodaysDate, 1,V.Local.dNextDay)
F.Intrinsic.String.Format(V.Local.dNextDay, "YYYY-MM-DD", V.Local.sNextDay)

'build query to get the next day's shipments where the shuttle checkbox value = 1
F.Intrinsic.String.Build("SELECT DISTINCT A.TRUCK_NO FROM GCG_6880_EXIST_LOADS A LEFT JOIN GCG_6880_LOAD_DTL B ON A.TRUCK_NO = B.TRUCK_NO AND A.LOAD_NO = B.LOAD_NO WHERE A.SHIP_DATE = '{0}' AND B.SHUTTLE_TRCK = 1 ORDER BY A.TRUCK_NO", V.Local.sNextDay, V.Local.sSQL)
'Check to see if datatable exists
F.Intrinsic.Control.If(V.DataTable.dtTrckLoad.Exists,=,True)
	F.Data.DataTable.Close("dtTrckLoad")
F.Intrinsic.Control.EndIf

'Create the datatable 
F.Data.DataTable.CreateFromSQL("dtTrckLoad", "con", V.Local.sSQL, True)

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Truckload Shipment Email", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.PullShipments.End

Program.Sub.BuildEmails.Start
F.Intrinsic.Control.Try
V.Local.bDirExists.Declare(Boolean)
V.Local.dNextDay.Declare(Date)
V.Local.iReportID.Declare(Long)
V.Local.iCnt.Declare(Long)
V.Local.iCnt2.Declare(Long)
V.Local.iUser.Declare(Long)
V.Local.sFQP.Declare(String)
V.Local.sFilePath.Declare(String)
V.Local.sSenderEmail.Declare(String)
V.Local.sVendorEmail.Declare(String)
V.Local.sTRKAdminEmails.Declare(String)
V.Local.sBody.Declare(String)
V.Local.sSubject.Declare(String)
V.Local.sParam.Declare(String)
V.Local.sParam.Redim(0,1)
V.Local.sParamVal.Declare(String)
V.Local.sParamVal.Redim(0,1)
V.Local.sNextDay.Declare(String)
V.Local.sAttachmentPath.Declare(String)
V.Local.sFileName.Declare(String)
V.Local.sSecGrpMembers.Declare(String)
V.Local.sUserEmail.Declare(String)
V.Local.sRecipientEmail.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sTruckNo.Declare(String)
V.Local.sRet2.Declare(String)
V.Local.sContactEmail.Declare(String)

'add one workday to today's date
F.Intrinsic.Date.DateAddWorkdays(V.Ambient.Date, 1,V.Local.dNextDay)
F.Intrinsic.String.Format(V.Local.dNextDay, "YYYY-MM-DD", V.Local.sNextDay)

'check to see that the custom file directory exists
F.Intrinsic.String.Build("{0}\CUSTOM\GCG_6880\SHUTTLE_TRUCK\", V.Caller.BusintDir, V.Local.sFilePath)
F.Intrinsic.File.DirExists(V.Local.sFilePath, V.Local.bDirExists)
F.Intrinsic.Control.If(V.Local.bDirExists,=,False)
	F.Intrinsic.File.CreateDir(V.Local.sFilePath)
F.Intrinsic.Control.EndIf

'get the userid 
F.Global.Security.GetUserId(V.Caller.User, V.Caller.CompanyCode, V.Local.iUser)
'set the sender email
V.Local.sSenderEmail.Set("sales@cbsteel.com")

'build the subject line 
F.Intrinsic.String.Build("Driver Shipping Log - {0}", V.Local.sNextDay, V.Local.sSubject)

F.Global.Security.GetGroupMembers("TRKADMIN", V.Caller.CompanyCode, V.Local.sSecGrpMembers)
F.Intrinsic.Control.If(V.Local.sSecGrpMembers.Trim,<>,"")
	'split the users
	F.Intrinsic.String.Split(V.Local.sSecGrpMembers, "*!*", V.Local.sSecGrpMembers)
	'loop through the users and get their email addresses
	F.Intrinsic.Control.For(V.Local.iCnt2,0, V.Local.sSecGrpMembers.UBound,1)
		F.Global.Security.GetUserEmail(V.Local.sSecGrpMembers(V.Local.iCnt2).Trim,V.Caller.CompanyCode, V.Local.sUserEmail)
		F.Intrinsic.Control.If(V.Local.iCnt2,=,0)
			V.Local.sRecipientEmail.Set(V.Local.sUserEmail.Trim)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{0};{1}", V.Local.sRecipientEmail, V.Local.sUserEmail.Trim, V.Local.sRecipientEmail)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCnt2)
	
	'get the email address for the shuttle vendor from the vendor email maintenance table
	F.ODBC.Connection!con.ExecuteAndReturn("SELECT CONTACT_EMAIL FROM CG_6880_VEND_EMAIL ", V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
		F.Intrinsic.Control.If(V.Local.sRecipientEmail.Trim,<>,"")
			'Split the records
			F.Intrinsic.String.Split(V.Local.sRet, "#$#", V.Local.sRet)
			F.Intrinsic.Control.For(V.Local.iCnt2, 0, V.Local.sRet.UBound)
				F.Intrinsic.String.Build("{0}; {1}", V.Local.sRecipientEmail, V.Local.sRet(V.Local.iCnt2).Trim, V.Local.sRecipientEmail)
			F.Intrinsic.Control.Next(V.Local.iCnt2)
			
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Split(V.Local.sRet, "#$#", V.Local.sRet)
			F.Intrinsic.Control.For(V.Local.iCnt2, 0, V.Local.sRet.UBound)
				V.Local.sRecipientEmail.Set(V.Local.sRet(V.Local.iCnt2).Trim)
			F.Intrinsic.Control.Next(V.Local.iCnt2)
		F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
'if there are no users in the security group, just get the address for the Shuttle vendor
	F.ODBC.Connection!con.ExecuteAndReturn("SELECT CONTACT_EMAIL FROM CG_6880_VEND_EMAIL ", V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
		F.Intrinsic.String.Split(V.Local.sRet, "#$#", V.Local.sRet)
		F.Intrinsic.Control.For(V.Local.iCnt2, 0, V.Local.sRet.UBound)
			V.Local.sRecipientEmail.Set(V.Local.sRet(V.Local.iCnt2).Trim)
		F.Intrinsic.Control.Next(V.Local.iCnt2)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

'build the body of the email
F.Intrinsic.Control.If(V.DataTable.dtTrckLoad.RowCount--,<,0)
	'if there are no records for the next day, queue the email without any attachments
	F.Intrinsic.String.Build("NO SHUTTLE RUN FOR {0}", V.Local.sNextDay, V.Local.sBody)
	F.Global.Messaging.QueueMessage(V.Caller.CompanyCode, V.Local.iUser, V.Caller.Caller, V.Local.sSubject.Trim,V.Local.sSenderEmail,V.Local.sRecipientEmail, V.Local.sBody.Trim, 5, "sales@cbsteel.com", False, "", "", "", "", "", "", "","",False)
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("Please find attached a PDF File containing our Driver Shipping Log for {0}{1}{1}-- CHAPIN & BANGS CO.", V.Local.sNextDay, V.Ambient.NewLine, V.Local.sBody)
F.Intrinsic.Control.EndIf

'loop through  the datatable to get all of loads that need to be sent to the third party trucking company

F.Global.BI.GetIDFromName("GCG_6880_3RD_PARTY_TRCK.rpt", V.Local.iReportID)
V.Local.sParam.Set("SHIP_DATE*!*TRUCK_NO")
F.Intrinsic.String.Split(V.Local.sParam, "*!*", V.Local.sParam)

F.Intrinsic.Control.For(V.Local.iCnt, 0, V.DataTable.dtTrckLoad.RowCount--,1)
	V.Local.sTruckNo.Set(V.DataTable.dtTrckLoad(V.Local.iCnt).TRUCK_NO!FieldvalTrim)
	F.Intrinsic.String.Build("{0}*!*{1}", V.Local.sNextDay, V.Local.sTruckNo, V.Local.sParamVal)
	F.Intrinsic.String.Split(V.Local.sParamVal, "*!*", v.Local.sParamVal)

	F.Intrinsic.String.Build("{0}\{1}_{2}_THIRDPARTY_TRUCK.PDF", V.Local.sFilePath, V.Local.sNextDay, V.Local.iCnt, V.Local.sFileName)

	F.Global.BI.SaveReport(V.Local.iReportID, 1, V.Local.sParam, V.Local.sParamVal, V.Local.sFileName)


	F.Intrinsic.String.Build("{0}_{1}_THIRDPARTY_TRUCK.PDF*!*{2}", V.Local.sNextDay, V.Local.iCnt, V.Local.sFileName.Trim, V.Local.sAttachmentPath)

	F.Global.Messaging.QueueMessage(V.Caller.CompanyCode, V.Local.iUser, V.Caller.Caller, V.Local.sSubject.Trim,V.Local.sSenderEmail, V.Local.sRecipientEmail.Trim, V.Local.sBody.Trim, 5, "sales@cbsteel.com", False, "", "", "", "", "", "", "",V.Local.sAttachmentPath,False)
F.Intrinsic.Control.Next(V.Local.iCnt)


F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Truckload Shipment Email", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.BuildEmails.End

Program.Sub.f_Main_UnLoad.Start
F.Intrinsic.Control.Try

'close the connection to the DB
F.ODBC.Connection!con.Close

'end the script
F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Truck Load Builder", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.f_Main_UnLoad.End

Program.Sub.ErrorMessage.Start
'basic error message for replacing catch block
'this is really just for when printing the message and ending program
'pass error number, error description, current subroutine
'optional callback sub, this will be called before ending
'optional unattended parameters, those subs may not exist if not using them but won't be called
F.Intrinsic.Control.Try

V.Local.iError.Declare(Long)
V.Local.sErrorDescription.Declare(String)
V.Local.sSubroutine.Declare(String)
V.Local.sError.Declare(String)
V.Local.bExists.Declare(Boolean)
V.Local.sCallback.Declare(String)

V.Local.iError.Set(V.Args.ErrorNumber)
V.Local.sErrorDescription.Set(V.Args.ErrorDescription)
V.Local.sSubroutine.Set(V.Args.Subroutine)

'make sure we aren't in an error loop
F.Intrinsic.Control.If(V.Global.bError)
	F.Intrinsic.Control.End

F.Intrinsic.Control.EndIf
V.Global.bError.Set(True)

F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Local.sSubroutine, V.Local.iError, V.Local.sErrorDescription, V.Ambient.GABVersion, V.Local.sError)

F.Intrinsic.Variable.ArgExists("UNATTENDED", V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	F.Intrinsic.Control.If(V.Args.UNATTENDED)
		F.Intrinsic.Control.CallSub(UnattendedErrorMessage, "MESSAGE", V.Local.sError, "PROJECT", V.Args.PROJECT, "PROJECTTITLE", V.Args.PROJECTTITLE)
	F.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndIf

F.Intrinsic.Variable.ArgExists("Callback", V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	V.Local.sCallback.Set(V.Args.Callback.Trim)
	F.Intrinsic.Control.CallSub(V.Local.sCallback)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Caller.ScriptFile,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End

F.Intrinsic.Control.EndTry
Program.Sub.ErrorMessage.End

Program.Sub.Comments.Start
${$5$}$20.1.8315.16327$}$1
${$6$}$acollins$}$20221026140916642$}$h98hERc2yV72q0GaUGlwSaoK/aefTdVk3MDOmjKC8J9L48fl07wP3LV6K+pMSOr8XJjOVYx+Cgdd1DJf95uNMQ==
Program.Sub.Comments.End