Program.Sub.ScreenSU.Start
Gui.f_Main..Create(BaseForm)
Gui.f_Main..Caption("Shipping Zone Maintenance (6880)")
Gui.f_Main..Size(802,682)
Gui.f_Main..MinX(0)
Gui.f_Main..MinY(0)
Gui.f_Main..Position(0,0)
Gui.f_Main..AlwaysOnTop(False)
Gui.f_Main..FontName("Tahoma")
Gui.f_Main..FontSize(8.25)
Gui.f_Main..ControlBox(True)
Gui.f_Main..MaxButton(False)
Gui.f_Main..MinButton(True)
Gui.f_Main..MousePointer(0)
Gui.f_Main..Moveable(True)
Gui.f_Main..Sizeable(False)
Gui.f_Main..ShowInTaskBar(True)
Gui.f_Main..TitleBar(True)
Gui.f_Main..Event(UnLoad,f_Main_Unload)
Gui.f_Main.GsGcZone.Create(GsGridControl)
Gui.f_Main.GsGcZone.Enabled(True)
Gui.f_Main.GsGcZone.Visible(True)
Gui.f_Main.GsGcZone.Zorder(0)
Gui.f_Main.GsGcZone.Size(802,652)
Gui.f_Main.GsGcZone.Position(0,0)
Gui.f_Main.GsGcZone.Dock(5)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
V.Global.bError.Declare(Boolean)
V.Global.bUnattended.Declare(Boolean)
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.Try
Function.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout

'open a connection to the database
F.ODBC.Connection!con.OpenConnection(V.Ambient.PDSN, V.Ambient.PUser, V.Ambient.PPass)

'build the grid
F.Intrinsic.Control.CallSub(BuildGrid)

'format the grid
F.Intrinsic.Control.CallSub(FormatGrid)

'popualte the grid
F.Intrinsic.Control.CallSub(PopulateGrid)

'apply theme
Gui.f_Main..ApplyTheme()

'show the form
Gui.f_Main..Show

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Zone Maintenance", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.BuildGrid.Start
F.Intrinsic.Control.Try

'check to see if datatable exists. If it does, close it
F.Intrinsic.Control.If(V.DataTable.dtZones.Exists,=,True)
	F.Data.DataTable.Close("dtZones")
F.Intrinsic.Control.EndIf

'Create datatable
F.Data.DataTable.Create("dtZones", True)

'add columns
F.Data.DataTable.AddColumn("dtZones", "BEG_ZIP_CODE", "LONG")
F.Data.DataTable.AddColumn("dtZones","END_ZIP_CODE", "LONG")
F.Data.DataTable.AddColumn("dtZones", "ZONE_NO", "LONG")
F.Data.DataTable.AddColumn("dtZones", "ZONE_SEQ", "LONG")
F.Data.Datatable.AddColumn("dtZones", "CITY", "STRING")
F.Data.DataTable.AddColumn("dtZones", "STATE", "STRING")

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Zone Maintenance", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.BuildGrid.End

Program.Sub.FormatGrid.Start
F.Intrinsic.Control.Try
V.Local.sDefault.Declare(String)
V.Local.sGV.Declare(String)
V.Local.sProperty.Declare(String)

Gui.f_Main.GsGcZone.AddGridviewFromDatatable("gvZones", "dtZones")
V.Local.sGV.Set("gvZones")

'add gridview properties
Gui.f_Main.GsGcZone.SetGridviewProperty(V.Local.sGV, "AllowSort", True)
Gui.f_Main.GsGcZone.SetGridviewProperty(V.Local.sGV, "AllowFilter", True)
Gui.f_Main.GsGcZone.SetGridviewProperty(V.Local.sGV, "OptionsViewShowGroupPanel", False)
Gui.f_Main.GsGcZone.SetGridviewProperty(V.Local.sGV, "OptionsViewColumnAutoWidth", True)
Gui.f_Main.GsGcZone.SetGridviewProperty(V.Local.sGV, "MultiSelect", False)
Gui.f_Main.GsGcZone.SetGridviewProperty(V.Local.sGV, "AllowAddRows", True)
Gui.f_Main.GsGcZone.SetGridviewProperty(V.Local.sGV, "AllowDeleteRows", True)

'add column properties
V.Local.sProperty.Set("Caption")
V.Local.sDefault.Set(" ")
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "BEG_ZIP_CODE", V.Local.sProperty, "Beginning Zip Code")
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "END_ZIP_CODE", V.Local.sProperty, "Ending Zip Code")
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "ZONE_NO", V.Local.sProperty, "Zone No")
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, "Zone Sequence")
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty, "City")
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, "State")

V.Local.sProperty.Set("HeaderHAlignment")
V.Local.sDefault.Set("Left")
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "BEG_ZIP_CODE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "END_ZIP_CODE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "ZONE_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("HeaderFontBold")
V.Local.sDefault.Set("True")
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "BEG_ZIP_CODE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "END_ZIP_CODE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "ZONE_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("AllowEdit")
V.Local.sDefault.Set("True")
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "BEG_ZIP_CODE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "END_ZIP_CODE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "ZONE_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("ReadOnly")
V.Local.sDefault.Set("False")
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "BEG_ZIP_CODE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "END_ZIP_CODE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "ZONE_NO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "ZONE_SEQ", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "CITY", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, V.Local.sDefault)

v.Local.sProperty.Set("MinWidth")
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, 65)

V.Local.sProperty.Set("MaxWidth")
Gui.f_Main.GsGcZone.SetColumnProperty(V.Local.sGV, "STATE", V.Local.sProperty, 65)

'set the mainview
Gui.f_Main.GsGcZone.MainView(V.Local.sGV)

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Zone Maintenance", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.FormatGrid.End

Program.Sub.PopulateGrid.Start
F.Intrinsic.Control.Try

'check to see if temp datatable exists. If it does, close it
F.Intrinsic.Control.If(V.DataTable.dtTemp.Exists,=,True)
	F.Data.DataTable.Close("dtTemp")
F.Intrinsic.Control.EndIf

'create the temp datatable
F.Data.DataTable.CreateFromSQL("dtTemp", "con", "SELECT BEG_ZIP_CODE, END_ZIP_CODE, ZONE_NO, ZONE_SEQ, UCASE(LTRIM(RTRIM(CITY))) AS CITY, UCASE(LTRIM(RTRIM(STATE))) AS STATE FROM GCG_6880_SHIP_ZONE ORDER BY ZONE_NO, ZONE_SEQ", True)
'merge with the existing datatable
F.Data.DataTable.Merge("dtTemp", "dtZones", True, 1)

'close the temp datatable
F.Data.DataTable.Close("dtTemp")


F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Zone Maintenance", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.PopulateGrid.End

Program.Sub.f_Main_Unload.Start
F.Intrinsic.Control.Try
V.Local.iCnt.Declare(Long)
 
 F.Intrinsic.UI.InvokeWaitDialog("Saving Zones...", "Please Wait")
'delete all the records in the custom table
F.ODBC.Connection!con.Execute("DELETE FROM GCG_6880_SHIP_ZONE")

F.Intrinsic.Control.If(v.DataTable.dtZones.RowCount--,>,-1)
	F.Intrinsic.Control.For(V.Local.iCnt, 0, V.DataTable.dtZones.RowCount--, 1)
		'loop through the end zip codes to see if they're blank
		F.Intrinsic.Control.If(V.DataTable.dtZones(V.Local.iCnt).END_ZIP_CODE!FieldVal,=,"")
			'if the end zip code is blank, set it to the beginning zip code
			F.Data.DataTable.SetValue("dtZones", V.Local.iCnt, "END_ZIP_CODE", V.DataTable.dtZones(v.Local.iCnt).BEG_ZIP_CODE!FieldVal)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCnt)
	f.Data.DataTable.AcceptChanges("dtZones")
	'save to db
	F.Data.DataTable.SaveToDB("dtZones", "con", "GCG_6880_SHIP_ZONE", "BEG_ZIP_CODE*!*END_ZIP_CODE*!*ZONE_NO*!*ZONE_SEQ*!*CITY*!*STATE",256)
F.Intrinsic.Control.EndIf

F.Intrinsic.UI.CloseWaitDialog

'close the connection
F.ODBC.Connection!con.Close

'end
F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6880", "ProjectTitle", "Shipment Zone Maintenance", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.f_Main_Unload.End

Program.Sub.ErrorMessage.Start
'basic error message for replacing catch block
'this is really just for when printing the message and ending program
'pass error number, error description, current subroutine
'optional callback sub, this will be called before ending
'optional unattended parameters, those subs may not exist if not using them but won't be called
F.Intrinsic.Control.Try

V.Local.iError.Declare(Long)
V.Local.sErrorDescription.Declare(String)
V.Local.sSubroutine.Declare(String)
V.Local.sError.Declare(String)
V.Local.bExists.Declare(Boolean)
V.Local.sCallback.Declare(String)

V.Local.iError.Set(V.Args.ErrorNumber)
V.Local.sErrorDescription.Set(V.Args.ErrorDescription)
V.Local.sSubroutine.Set(V.Args.Subroutine)

'make sure we aren't in an error loop
F.Intrinsic.Control.If(V.Global.bError)
	F.Intrinsic.Control.End

F.Intrinsic.Control.EndIf
V.Global.bError.Set(True)

F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Local.sSubroutine, V.Local.iError, V.Local.sErrorDescription, V.Ambient.GABVersion, V.Local.sError)

F.Intrinsic.Variable.ArgExists("UNATTENDED", V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	F.Intrinsic.Control.If(V.Args.UNATTENDED)
		F.Intrinsic.Control.CallSub(UnattendedErrorMessage, "MESSAGE", V.Local.sError, "PROJECT", V.Args.PROJECT, "PROJECTTITLE", V.Args.PROJECTTITLE)
	F.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndIf

F.Intrinsic.Variable.ArgExists("Callback", V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	V.Local.sCallback.Set(V.Args.Callback.Trim)
	F.Intrinsic.Control.CallSub(V.Local.sCallback)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Caller.ScriptFile,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End

F.Intrinsic.Control.EndTry
Program.Sub.ErrorMessage.End

Program.Sub.Comments.Start
${$5$}$20.1.8347.18428$}$1
${$6$}$acollins$}$20221123173608872$}$h98hERc2yV72q0GaUGlwSaoK/aefTdVk3MDOmjKC8J848rvbVBkGf5Ssd9wkrcWUIP8EVF+j2y5wPkiy54OWQg==
Program.Sub.Comments.End